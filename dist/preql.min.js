var preql=function(e){var n={};function t(a){if(n[a])return n[a].exports;var r=n[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,t),r.l=!0,r.exports}return t.m=e,t.c=n,t.d=function(e,n,a){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:a})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(a,r,function(n){return e[n]}.bind(null,r));return a},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}({"./node_modules/ajv/lib/ajv.js":
/*!*************************************!*\
  !*** ./node_modules/ajv/lib/ajv.js ***!
  \*************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar compileSchema = __webpack_require__(/*! ./compile */ \"./node_modules/ajv/lib/compile/index.js\")\n  , resolve = __webpack_require__(/*! ./compile/resolve */ \"./node_modules/ajv/lib/compile/resolve.js\")\n  , Cache = __webpack_require__(/*! ./cache */ \"./node_modules/ajv/lib/cache.js\")\n  , SchemaObject = __webpack_require__(/*! ./compile/schema_obj */ \"./node_modules/ajv/lib/compile/schema_obj.js\")\n  , stableStringify = __webpack_require__(/*! fast-json-stable-stringify */ \"./node_modules/fast-json-stable-stringify/index.js\")\n  , formats = __webpack_require__(/*! ./compile/formats */ \"./node_modules/ajv/lib/compile/formats.js\")\n  , rules = __webpack_require__(/*! ./compile/rules */ \"./node_modules/ajv/lib/compile/rules.js\")\n  , $dataMetaSchema = __webpack_require__(/*! ./data */ \"./node_modules/ajv/lib/data.js\")\n  , util = __webpack_require__(/*! ./compile/util */ \"./node_modules/ajv/lib/compile/util.js\");\n\nmodule.exports = Ajv;\n\nAjv.prototype.validate = validate;\nAjv.prototype.compile = compile;\nAjv.prototype.addSchema = addSchema;\nAjv.prototype.addMetaSchema = addMetaSchema;\nAjv.prototype.validateSchema = validateSchema;\nAjv.prototype.getSchema = getSchema;\nAjv.prototype.removeSchema = removeSchema;\nAjv.prototype.addFormat = addFormat;\nAjv.prototype.errorsText = errorsText;\n\nAjv.prototype._addSchema = _addSchema;\nAjv.prototype._compile = _compile;\n\nAjv.prototype.compileAsync = __webpack_require__(/*! ./compile/async */ \"./node_modules/ajv/lib/compile/async.js\");\nvar customKeyword = __webpack_require__(/*! ./keyword */ \"./node_modules/ajv/lib/keyword.js\");\nAjv.prototype.addKeyword = customKeyword.add;\nAjv.prototype.getKeyword = customKeyword.get;\nAjv.prototype.removeKeyword = customKeyword.remove;\nAjv.prototype.validateKeyword = customKeyword.validate;\n\nvar errorClasses = __webpack_require__(/*! ./compile/error_classes */ \"./node_modules/ajv/lib/compile/error_classes.js\");\nAjv.ValidationError = errorClasses.Validation;\nAjv.MissingRefError = errorClasses.MissingRef;\nAjv.$dataMetaSchema = $dataMetaSchema;\n\nvar META_SCHEMA_ID = 'http://json-schema.org/draft-07/schema';\n\nvar META_IGNORE_OPTIONS = [ 'removeAdditional', 'useDefaults', 'coerceTypes', 'strictDefaults' ];\nvar META_SUPPORT_DATA = ['/properties'];\n\n/**\n * Creates validator instance.\n * Usage: `Ajv(opts)`\n * @param {Object} opts optional options\n * @return {Object} ajv instance\n */\nfunction Ajv(opts) {\n  if (!(this instanceof Ajv)) return new Ajv(opts);\n  opts = this._opts = util.copy(opts) || {};\n  setLogger(this);\n  this._schemas = {};\n  this._refs = {};\n  this._fragments = {};\n  this._formats = formats(opts.format);\n\n  this._cache = opts.cache || new Cache;\n  this._loadingSchemas = {};\n  this._compilations = [];\n  this.RULES = rules();\n  this._getId = chooseGetId(opts);\n\n  opts.loopRequired = opts.loopRequired || Infinity;\n  if (opts.errorDataPath == 'property') opts._errorDataPathProperty = true;\n  if (opts.serialize === undefined) opts.serialize = stableStringify;\n  this._metaOpts = getMetaSchemaOptions(this);\n\n  if (opts.formats) addInitialFormats(this);\n  addDefaultMetaSchema(this);\n  if (typeof opts.meta == 'object') this.addMetaSchema(opts.meta);\n  if (opts.nullable) this.addKeyword('nullable', {metaSchema: {type: 'boolean'}});\n  addInitialSchemas(this);\n}\n\n\n\n/**\n * Validate data using schema\n * Schema will be compiled and cached (using serialized JSON as key. [fast-json-stable-stringify](https://github.com/epoberezkin/fast-json-stable-stringify) is used to serialize.\n * @this   Ajv\n * @param  {String|Object} schemaKeyRef key, ref or schema object\n * @param  {Any} data to be validated\n * @return {Boolean} validation result. Errors from the last validation will be available in `ajv.errors` (and also in compiled schema: `schema.errors`).\n */\nfunction validate(schemaKeyRef, data) {\n  var v;\n  if (typeof schemaKeyRef == 'string') {\n    v = this.getSchema(schemaKeyRef);\n    if (!v) throw new Error('no schema with key or ref \"' + schemaKeyRef + '\"');\n  } else {\n    var schemaObj = this._addSchema(schemaKeyRef);\n    v = schemaObj.validate || this._compile(schemaObj);\n  }\n\n  var valid = v(data);\n  if (v.$async !== true) this.errors = v.errors;\n  return valid;\n}\n\n\n/**\n * Create validating function for passed schema.\n * @this   Ajv\n * @param  {Object} schema schema object\n * @param  {Boolean} _meta true if schema is a meta-schema. Used internally to compile meta schemas of custom keywords.\n * @return {Function} validating function\n */\nfunction compile(schema, _meta) {\n  var schemaObj = this._addSchema(schema, undefined, _meta);\n  return schemaObj.validate || this._compile(schemaObj);\n}\n\n\n/**\n * Adds schema to the instance.\n * @this   Ajv\n * @param {Object|Array} schema schema or array of schemas. If array is passed, `key` and other parameters will be ignored.\n * @param {String} key Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n * @param {Boolean} _skipValidation true to skip schema validation. Used internally, option validateSchema should be used instead.\n * @param {Boolean} _meta true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n * @return {Ajv} this for method chaining\n */\nfunction addSchema(schema, key, _skipValidation, _meta) {\n  if (Array.isArray(schema)){\n    for (var i=0; i<schema.length; i++) this.addSchema(schema[i], undefined, _skipValidation, _meta);\n    return this;\n  }\n  var id = this._getId(schema);\n  if (id !== undefined && typeof id != 'string')\n    throw new Error('schema id must be string');\n  key = resolve.normalizeId(key || id);\n  checkUnique(this, key);\n  this._schemas[key] = this._addSchema(schema, _skipValidation, _meta, true);\n  return this;\n}\n\n\n/**\n * Add schema that will be used to validate other schemas\n * options in META_IGNORE_OPTIONS are alway set to false\n * @this   Ajv\n * @param {Object} schema schema object\n * @param {String} key optional schema key\n * @param {Boolean} skipValidation true to skip schema validation, can be used to override validateSchema option for meta-schema\n * @return {Ajv} this for method chaining\n */\nfunction addMetaSchema(schema, key, skipValidation) {\n  this.addSchema(schema, key, skipValidation, true);\n  return this;\n}\n\n\n/**\n * Validate schema\n * @this   Ajv\n * @param {Object} schema schema to validate\n * @param {Boolean} throwOrLogError pass true to throw (or log) an error if invalid\n * @return {Boolean} true if schema is valid\n */\nfunction validateSchema(schema, throwOrLogError) {\n  var $schema = schema.$schema;\n  if ($schema !== undefined && typeof $schema != 'string')\n    throw new Error('$schema must be a string');\n  $schema = $schema || this._opts.defaultMeta || defaultMeta(this);\n  if (!$schema) {\n    this.logger.warn('meta-schema not available');\n    this.errors = null;\n    return true;\n  }\n  var valid = this.validate($schema, schema);\n  if (!valid && throwOrLogError) {\n    var message = 'schema is invalid: ' + this.errorsText();\n    if (this._opts.validateSchema == 'log') this.logger.error(message);\n    else throw new Error(message);\n  }\n  return valid;\n}\n\n\nfunction defaultMeta(self) {\n  var meta = self._opts.meta;\n  self._opts.defaultMeta = typeof meta == 'object'\n                            ? self._getId(meta) || meta\n                            : self.getSchema(META_SCHEMA_ID)\n                              ? META_SCHEMA_ID\n                              : undefined;\n  return self._opts.defaultMeta;\n}\n\n\n/**\n * Get compiled schema from the instance by `key` or `ref`.\n * @this   Ajv\n * @param  {String} keyRef `key` that was passed to `addSchema` or full schema reference (`schema.id` or resolved id).\n * @return {Function} schema validating function (with property `schema`).\n */\nfunction getSchema(keyRef) {\n  var schemaObj = _getSchemaObj(this, keyRef);\n  switch (typeof schemaObj) {\n    case 'object': return schemaObj.validate || this._compile(schemaObj);\n    case 'string': return this.getSchema(schemaObj);\n    case 'undefined': return _getSchemaFragment(this, keyRef);\n  }\n}\n\n\nfunction _getSchemaFragment(self, ref) {\n  var res = resolve.schema.call(self, { schema: {} }, ref);\n  if (res) {\n    var schema = res.schema\n      , root = res.root\n      , baseId = res.baseId;\n    var v = compileSchema.call(self, schema, root, undefined, baseId);\n    self._fragments[ref] = new SchemaObject({\n      ref: ref,\n      fragment: true,\n      schema: schema,\n      root: root,\n      baseId: baseId,\n      validate: v\n    });\n    return v;\n  }\n}\n\n\nfunction _getSchemaObj(self, keyRef) {\n  keyRef = resolve.normalizeId(keyRef);\n  return self._schemas[keyRef] || self._refs[keyRef] || self._fragments[keyRef];\n}\n\n\n/**\n * Remove cached schema(s).\n * If no parameter is passed all schemas but meta-schemas are removed.\n * If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n * Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n * @this   Ajv\n * @param  {String|Object|RegExp} schemaKeyRef key, ref, pattern to match key/ref or schema object\n * @return {Ajv} this for method chaining\n */\nfunction removeSchema(schemaKeyRef) {\n  if (schemaKeyRef instanceof RegExp) {\n    _removeAllSchemas(this, this._schemas, schemaKeyRef);\n    _removeAllSchemas(this, this._refs, schemaKeyRef);\n    return this;\n  }\n  switch (typeof schemaKeyRef) {\n    case 'undefined':\n      _removeAllSchemas(this, this._schemas);\n      _removeAllSchemas(this, this._refs);\n      this._cache.clear();\n      return this;\n    case 'string':\n      var schemaObj = _getSchemaObj(this, schemaKeyRef);\n      if (schemaObj) this._cache.del(schemaObj.cacheKey);\n      delete this._schemas[schemaKeyRef];\n      delete this._refs[schemaKeyRef];\n      return this;\n    case 'object':\n      var serialize = this._opts.serialize;\n      var cacheKey = serialize ? serialize(schemaKeyRef) : schemaKeyRef;\n      this._cache.del(cacheKey);\n      var id = this._getId(schemaKeyRef);\n      if (id) {\n        id = resolve.normalizeId(id);\n        delete this._schemas[id];\n        delete this._refs[id];\n      }\n  }\n  return this;\n}\n\n\nfunction _removeAllSchemas(self, schemas, regex) {\n  for (var keyRef in schemas) {\n    var schemaObj = schemas[keyRef];\n    if (!schemaObj.meta && (!regex || regex.test(keyRef))) {\n      self._cache.del(schemaObj.cacheKey);\n      delete schemas[keyRef];\n    }\n  }\n}\n\n\n/* @this   Ajv */\nfunction _addSchema(schema, skipValidation, meta, shouldAddSchema) {\n  if (typeof schema != 'object' && typeof schema != 'boolean')\n    throw new Error('schema should be object or boolean');\n  var serialize = this._opts.serialize;\n  var cacheKey = serialize ? serialize(schema) : schema;\n  var cached = this._cache.get(cacheKey);\n  if (cached) return cached;\n\n  shouldAddSchema = shouldAddSchema || this._opts.addUsedSchema !== false;\n\n  var id = resolve.normalizeId(this._getId(schema));\n  if (id && shouldAddSchema) checkUnique(this, id);\n\n  var willValidate = this._opts.validateSchema !== false && !skipValidation;\n  var recursiveMeta;\n  if (willValidate && !(recursiveMeta = id && id == resolve.normalizeId(schema.$schema)))\n    this.validateSchema(schema, true);\n\n  var localRefs = resolve.ids.call(this, schema);\n\n  var schemaObj = new SchemaObject({\n    id: id,\n    schema: schema,\n    localRefs: localRefs,\n    cacheKey: cacheKey,\n    meta: meta\n  });\n\n  if (id[0] != '#' && shouldAddSchema) this._refs[id] = schemaObj;\n  this._cache.put(cacheKey, schemaObj);\n\n  if (willValidate && recursiveMeta) this.validateSchema(schema, true);\n\n  return schemaObj;\n}\n\n\n/* @this   Ajv */\nfunction _compile(schemaObj, root) {\n  if (schemaObj.compiling) {\n    schemaObj.validate = callValidate;\n    callValidate.schema = schemaObj.schema;\n    callValidate.errors = null;\n    callValidate.root = root ? root : callValidate;\n    if (schemaObj.schema.$async === true)\n      callValidate.$async = true;\n    return callValidate;\n  }\n  schemaObj.compiling = true;\n\n  var currentOpts;\n  if (schemaObj.meta) {\n    currentOpts = this._opts;\n    this._opts = this._metaOpts;\n  }\n\n  var v;\n  try { v = compileSchema.call(this, schemaObj.schema, root, schemaObj.localRefs); }\n  catch(e) {\n    delete schemaObj.validate;\n    throw e;\n  }\n  finally {\n    schemaObj.compiling = false;\n    if (schemaObj.meta) this._opts = currentOpts;\n  }\n\n  schemaObj.validate = v;\n  schemaObj.refs = v.refs;\n  schemaObj.refVal = v.refVal;\n  schemaObj.root = v.root;\n  return v;\n\n\n  /* @this   {*} - custom context, see passContext option */\n  function callValidate() {\n    /* jshint validthis: true */\n    var _validate = schemaObj.validate;\n    var result = _validate.apply(this, arguments);\n    callValidate.errors = _validate.errors;\n    return result;\n  }\n}\n\n\nfunction chooseGetId(opts) {\n  switch (opts.schemaId) {\n    case 'auto': return _get$IdOrId;\n    case 'id': return _getId;\n    default: return _get$Id;\n  }\n}\n\n/* @this   Ajv */\nfunction _getId(schema) {\n  if (schema.$id) this.logger.warn('schema $id ignored', schema.$id);\n  return schema.id;\n}\n\n/* @this   Ajv */\nfunction _get$Id(schema) {\n  if (schema.id) this.logger.warn('schema id ignored', schema.id);\n  return schema.$id;\n}\n\n\nfunction _get$IdOrId(schema) {\n  if (schema.$id && schema.id && schema.$id != schema.id)\n    throw new Error('schema $id is different from id');\n  return schema.$id || schema.id;\n}\n\n\n/**\n * Convert array of error message objects to string\n * @this   Ajv\n * @param  {Array<Object>} errors optional array of validation errors, if not passed errors from the instance are used.\n * @param  {Object} options optional options with properties `separator` and `dataVar`.\n * @return {String} human readable string with all errors descriptions\n */\nfunction errorsText(errors, options) {\n  errors = errors || this.errors;\n  if (!errors) return 'No errors';\n  options = options || {};\n  var separator = options.separator === undefined ? ', ' : options.separator;\n  var dataVar = options.dataVar === undefined ? 'data' : options.dataVar;\n\n  var text = '';\n  for (var i=0; i<errors.length; i++) {\n    var e = errors[i];\n    if (e) text += dataVar + e.dataPath + ' ' + e.message + separator;\n  }\n  return text.slice(0, -separator.length);\n}\n\n\n/**\n * Add custom format\n * @this   Ajv\n * @param {String} name format name\n * @param {String|RegExp|Function} format string is converted to RegExp; function should return boolean (true when valid)\n * @return {Ajv} this for method chaining\n */\nfunction addFormat(name, format) {\n  if (typeof format == 'string') format = new RegExp(format);\n  this._formats[name] = format;\n  return this;\n}\n\n\nfunction addDefaultMetaSchema(self) {\n  var $dataSchema;\n  if (self._opts.$data) {\n    $dataSchema = __webpack_require__(/*! ./refs/data.json */ \"./node_modules/ajv/lib/refs/data.json\");\n    self.addMetaSchema($dataSchema, $dataSchema.$id, true);\n  }\n  if (self._opts.meta === false) return;\n  var metaSchema = __webpack_require__(/*! ./refs/json-schema-draft-07.json */ \"./node_modules/ajv/lib/refs/json-schema-draft-07.json\");\n  if (self._opts.$data) metaSchema = $dataMetaSchema(metaSchema, META_SUPPORT_DATA);\n  self.addMetaSchema(metaSchema, META_SCHEMA_ID, true);\n  self._refs['http://json-schema.org/schema'] = META_SCHEMA_ID;\n}\n\n\nfunction addInitialSchemas(self) {\n  var optsSchemas = self._opts.schemas;\n  if (!optsSchemas) return;\n  if (Array.isArray(optsSchemas)) self.addSchema(optsSchemas);\n  else for (var key in optsSchemas) self.addSchema(optsSchemas[key], key);\n}\n\n\nfunction addInitialFormats(self) {\n  for (var name in self._opts.formats) {\n    var format = self._opts.formats[name];\n    self.addFormat(name, format);\n  }\n}\n\n\nfunction checkUnique(self, id) {\n  if (self._schemas[id] || self._refs[id])\n    throw new Error('schema with key or id \"' + id + '\" already exists');\n}\n\n\nfunction getMetaSchemaOptions(self) {\n  var metaOpts = util.copy(self._opts);\n  for (var i=0; i<META_IGNORE_OPTIONS.length; i++)\n    delete metaOpts[META_IGNORE_OPTIONS[i]];\n  return metaOpts;\n}\n\n\nfunction setLogger(self) {\n  var logger = self._opts.logger;\n  if (logger === false) {\n    self.logger = {log: noop, warn: noop, error: noop};\n  } else {\n    if (logger === undefined) logger = console;\n    if (!(typeof logger == 'object' && logger.log && logger.warn && logger.error))\n      throw new Error('logger must implement log, warn and error methods');\n    self.logger = logger;\n  }\n}\n\n\nfunction noop() {}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/ajv.js?")},"./node_modules/ajv/lib/cache.js":
/*!***************************************!*\
  !*** ./node_modules/ajv/lib/cache.js ***!
  \***************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\n\nvar Cache = module.exports = function Cache() {\n  this._cache = {};\n};\n\n\nCache.prototype.put = function Cache_put(key, value) {\n  this._cache[key] = value;\n};\n\n\nCache.prototype.get = function Cache_get(key) {\n  return this._cache[key];\n};\n\n\nCache.prototype.del = function Cache_del(key) {\n  delete this._cache[key];\n};\n\n\nCache.prototype.clear = function Cache_clear() {\n  this._cache = {};\n};\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/cache.js?")},"./node_modules/ajv/lib/compile/async.js":
/*!***********************************************!*\
  !*** ./node_modules/ajv/lib/compile/async.js ***!
  \***********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar MissingRefError = __webpack_require__(/*! ./error_classes */ \"./node_modules/ajv/lib/compile/error_classes.js\").MissingRef;\n\nmodule.exports = compileAsync;\n\n\n/**\n * Creates validating function for passed schema with asynchronous loading of missing schemas.\n * `loadSchema` option should be a function that accepts schema uri and returns promise that resolves with the schema.\n * @this  Ajv\n * @param {Object}   schema schema object\n * @param {Boolean}  meta optional true to compile meta-schema; this parameter can be skipped\n * @param {Function} callback an optional node-style callback, it is called with 2 parameters: error (or null) and validating function.\n * @return {Promise} promise that resolves with a validating function.\n */\nfunction compileAsync(schema, meta, callback) {\n  /* eslint no-shadow: 0 */\n  /* global Promise */\n  /* jshint validthis: true */\n  var self = this;\n  if (typeof this._opts.loadSchema != 'function')\n    throw new Error('options.loadSchema should be a function');\n\n  if (typeof meta == 'function') {\n    callback = meta;\n    meta = undefined;\n  }\n\n  var p = loadMetaSchemaOf(schema).then(function () {\n    var schemaObj = self._addSchema(schema, undefined, meta);\n    return schemaObj.validate || _compileAsync(schemaObj);\n  });\n\n  if (callback) {\n    p.then(\n      function(v) { callback(null, v); },\n      callback\n    );\n  }\n\n  return p;\n\n\n  function loadMetaSchemaOf(sch) {\n    var $schema = sch.$schema;\n    return $schema && !self.getSchema($schema)\n            ? compileAsync.call(self, { $ref: $schema }, true)\n            : Promise.resolve();\n  }\n\n\n  function _compileAsync(schemaObj) {\n    try { return self._compile(schemaObj); }\n    catch(e) {\n      if (e instanceof MissingRefError) return loadMissingSchema(e);\n      throw e;\n    }\n\n\n    function loadMissingSchema(e) {\n      var ref = e.missingSchema;\n      if (added(ref)) throw new Error('Schema ' + ref + ' is loaded but ' + e.missingRef + ' cannot be resolved');\n\n      var schemaPromise = self._loadingSchemas[ref];\n      if (!schemaPromise) {\n        schemaPromise = self._loadingSchemas[ref] = self._opts.loadSchema(ref);\n        schemaPromise.then(removePromise, removePromise);\n      }\n\n      return schemaPromise.then(function (sch) {\n        if (!added(ref)) {\n          return loadMetaSchemaOf(sch).then(function () {\n            if (!added(ref)) self.addSchema(sch, ref, undefined, meta);\n          });\n        }\n      }).then(function() {\n        return _compileAsync(schemaObj);\n      });\n\n      function removePromise() {\n        delete self._loadingSchemas[ref];\n      }\n\n      function added(ref) {\n        return self._refs[ref] || self._schemas[ref];\n      }\n    }\n  }\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/compile/async.js?")},"./node_modules/ajv/lib/compile/error_classes.js":
/*!*******************************************************!*\
  !*** ./node_modules/ajv/lib/compile/error_classes.js ***!
  \*******************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar resolve = __webpack_require__(/*! ./resolve */ \"./node_modules/ajv/lib/compile/resolve.js\");\n\nmodule.exports = {\n  Validation: errorSubclass(ValidationError),\n  MissingRef: errorSubclass(MissingRefError)\n};\n\n\nfunction ValidationError(errors) {\n  this.message = 'validation failed';\n  this.errors = errors;\n  this.ajv = this.validation = true;\n}\n\n\nMissingRefError.message = function (baseId, ref) {\n  return 'can\\'t resolve reference ' + ref + ' from id ' + baseId;\n};\n\n\nfunction MissingRefError(baseId, ref, message) {\n  this.message = message || MissingRefError.message(baseId, ref);\n  this.missingRef = resolve.url(baseId, ref);\n  this.missingSchema = resolve.normalizeId(resolve.fullPath(this.missingRef));\n}\n\n\nfunction errorSubclass(Subclass) {\n  Subclass.prototype = Object.create(Error.prototype);\n  Subclass.prototype.constructor = Subclass;\n  return Subclass;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/compile/error_classes.js?")},"./node_modules/ajv/lib/compile/formats.js":
/*!*************************************************!*\
  !*** ./node_modules/ajv/lib/compile/formats.js ***!
  \*************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar util = __webpack_require__(/*! ./util */ \"./node_modules/ajv/lib/compile/util.js\");\n\nvar DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/;\nvar DAYS = [0,31,28,31,30,31,30,31,31,30,31,30,31];\nvar TIME = /^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d:\\d\\d)?$/i;\nvar HOSTNAME = /^[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*$/i;\nvar URI = /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nvar URIREF = /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\n// uri-template: https://tools.ietf.org/html/rfc6570\nvar URITEMPLATE = /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i;\n// For the source: https://gist.github.com/dperini/729294\n// For test cases: https://mathiasbynens.be/demo/url-regex\n// @todo Delete current URL in favour of the commented out URL rule when this issue is fixed https://github.com/eslint/eslint/issues/7983.\n// var URL = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu;\nvar URL = /^(?:(?:http[s\\u017F]?|ftp):\\/\\/)(?:(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+(?::(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?@)?(?:(?!10(?:\\.[0-9]{1,3}){3})(?!127(?:\\.[0-9]{1,3}){3})(?!169\\.254(?:\\.[0-9]{1,3}){2})(?!192\\.168(?:\\.[0-9]{1,3}){2})(?!172\\.(?:1[6-9]|2[0-9]|3[01])(?:\\.[0-9]{1,3}){2})(?:[1-9][0-9]?|1[0-9][0-9]|2[01][0-9]|22[0-3])(?:\\.(?:1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])){2}(?:\\.(?:[1-9][0-9]?|1[0-9][0-9]|2[0-4][0-9]|25[0-4]))|(?:(?:(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-?)*(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)(?:\\.(?:(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-?)*(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)*(?:\\.(?:(?:[KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]){2,})))(?::[0-9]{2,5})?(?:\\/(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?$/i;\nvar UUID = /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i;\nvar JSON_POINTER = /^(?:\\/(?:[^~/]|~0|~1)*)*$/;\nvar JSON_POINTER_URI_FRAGMENT = /^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i;\nvar RELATIVE_JSON_POINTER = /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/;\n\n\nmodule.exports = formats;\n\nfunction formats(mode) {\n  mode = mode == 'full' ? 'full' : 'fast';\n  return util.copy(formats[mode]);\n}\n\n\nformats.fast = {\n  // date: http://tools.ietf.org/html/rfc3339#section-5.6\n  date: /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/,\n  // date-time: http://tools.ietf.org/html/rfc3339#section-5.6\n  time: /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)?$/i,\n  'date-time': /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s](?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)$/i,\n  // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js\n  uri: /^(?:[a-z][a-z0-9+-.]*:)(?:\\/?\\/)?[^\\s]*$/i,\n  'uri-reference': /^(?:(?:[a-z][a-z0-9+-.]*:)?\\/?\\/)?(?:[^\\\\\\s#][^\\s#]*)?(?:#[^\\\\\\s]*)?$/i,\n  'uri-template': URITEMPLATE,\n  url: URL,\n  // email (sources from jsen validator):\n  // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363\n  // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'willful violation')\n  email: /^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,\n  hostname: HOSTNAME,\n  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n  // optimized http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses\n  ipv6: /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,\n  regex: regex,\n  // uuid: http://tools.ietf.org/html/rfc4122\n  uuid: UUID,\n  // JSON-pointer: https://tools.ietf.org/html/rfc6901\n  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A\n  'json-pointer': JSON_POINTER,\n  'json-pointer-uri-fragment': JSON_POINTER_URI_FRAGMENT,\n  // relative JSON-pointer: http://tools.ietf.org/html/draft-luff-relative-json-pointer-00\n  'relative-json-pointer': RELATIVE_JSON_POINTER\n};\n\n\nformats.full = {\n  date: date,\n  time: time,\n  'date-time': date_time,\n  uri: uri,\n  'uri-reference': URIREF,\n  'uri-template': URITEMPLATE,\n  url: URL,\n  email: /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,\n  hostname: hostname,\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n  ipv6: /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,\n  regex: regex,\n  uuid: UUID,\n  'json-pointer': JSON_POINTER,\n  'json-pointer-uri-fragment': JSON_POINTER_URI_FRAGMENT,\n  'relative-json-pointer': RELATIVE_JSON_POINTER\n};\n\n\nfunction isLeapYear(year) {\n  // https://tools.ietf.org/html/rfc3339#appendix-C\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\n\nfunction date(str) {\n  // full-date from http://tools.ietf.org/html/rfc3339#section-5.6\n  var matches = str.match(DATE);\n  if (!matches) return false;\n\n  var year = +matches[1];\n  var month = +matches[2];\n  var day = +matches[3];\n\n  return month >= 1 && month <= 12 && day >= 1 &&\n          day <= (month == 2 && isLeapYear(year) ? 29 : DAYS[month]);\n}\n\n\nfunction time(str, full) {\n  var matches = str.match(TIME);\n  if (!matches) return false;\n\n  var hour = matches[1];\n  var minute = matches[2];\n  var second = matches[3];\n  var timeZone = matches[5];\n  return ((hour <= 23 && minute <= 59 && second <= 59) ||\n          (hour == 23 && minute == 59 && second == 60)) &&\n         (!full || timeZone);\n}\n\n\nvar DATE_TIME_SEPARATOR = /t|\\s/i;\nfunction date_time(str) {\n  // http://tools.ietf.org/html/rfc3339#section-5.6\n  var dateTime = str.split(DATE_TIME_SEPARATOR);\n  return dateTime.length == 2 && date(dateTime[0]) && time(dateTime[1], true);\n}\n\n\nfunction hostname(str) {\n  // https://tools.ietf.org/html/rfc1034#section-3.5\n  // https://tools.ietf.org/html/rfc1123#section-2\n  return str.length <= 255 && HOSTNAME.test(str);\n}\n\n\nvar NOT_URI_FRAGMENT = /\\/|:/;\nfunction uri(str) {\n  // http://jmrware.com/articles/2009/uri_regexp/URI_regex.html + optional protocol + required \".\"\n  return NOT_URI_FRAGMENT.test(str) && URI.test(str);\n}\n\n\nvar Z_ANCHOR = /[^\\\\]\\\\Z/;\nfunction regex(str) {\n  if (Z_ANCHOR.test(str)) return false;\n  try {\n    new RegExp(str);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/compile/formats.js?")},"./node_modules/ajv/lib/compile/index.js":
/*!***********************************************!*\
  !*** ./node_modules/ajv/lib/compile/index.js ***!
  \***********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar resolve = __webpack_require__(/*! ./resolve */ \"./node_modules/ajv/lib/compile/resolve.js\")\n  , util = __webpack_require__(/*! ./util */ \"./node_modules/ajv/lib/compile/util.js\")\n  , errorClasses = __webpack_require__(/*! ./error_classes */ \"./node_modules/ajv/lib/compile/error_classes.js\")\n  , stableStringify = __webpack_require__(/*! fast-json-stable-stringify */ \"./node_modules/fast-json-stable-stringify/index.js\");\n\nvar validateGenerator = __webpack_require__(/*! ../dotjs/validate */ \"./node_modules/ajv/lib/dotjs/validate.js\");\n\n/**\n * Functions below are used inside compiled validations function\n */\n\nvar ucs2length = util.ucs2length;\nvar equal = __webpack_require__(/*! fast-deep-equal */ \"./node_modules/fast-deep-equal/index.js\");\n\n// this error is thrown by async schemas to return validation errors via exception\nvar ValidationError = errorClasses.Validation;\n\nmodule.exports = compile;\n\n\n/**\n * Compiles schema to validation function\n * @this   Ajv\n * @param  {Object} schema schema object\n * @param  {Object} root object with information about the root schema for this schema\n * @param  {Object} localRefs the hash of local references inside the schema (created by resolve.id), used for inline resolution\n * @param  {String} baseId base ID for IDs in the schema\n * @return {Function} validation function\n */\nfunction compile(schema, root, localRefs, baseId) {\n  /* jshint validthis: true, evil: true */\n  /* eslint no-shadow: 0 */\n  var self = this\n    , opts = this._opts\n    , refVal = [ undefined ]\n    , refs = {}\n    , patterns = []\n    , patternsHash = {}\n    , defaults = []\n    , defaultsHash = {}\n    , customRules = [];\n\n  root = root || { schema: schema, refVal: refVal, refs: refs };\n\n  var c = checkCompiling.call(this, schema, root, baseId);\n  var compilation = this._compilations[c.index];\n  if (c.compiling) return (compilation.callValidate = callValidate);\n\n  var formats = this._formats;\n  var RULES = this.RULES;\n\n  try {\n    var v = localCompile(schema, root, localRefs, baseId);\n    compilation.validate = v;\n    var cv = compilation.callValidate;\n    if (cv) {\n      cv.schema = v.schema;\n      cv.errors = null;\n      cv.refs = v.refs;\n      cv.refVal = v.refVal;\n      cv.root = v.root;\n      cv.$async = v.$async;\n      if (opts.sourceCode) cv.source = v.source;\n    }\n    return v;\n  } finally {\n    endCompiling.call(this, schema, root, baseId);\n  }\n\n  /* @this   {*} - custom context, see passContext option */\n  function callValidate() {\n    /* jshint validthis: true */\n    var validate = compilation.validate;\n    var result = validate.apply(this, arguments);\n    callValidate.errors = validate.errors;\n    return result;\n  }\n\n  function localCompile(_schema, _root, localRefs, baseId) {\n    var isRoot = !_root || (_root && _root.schema == _schema);\n    if (_root.schema != root.schema)\n      return compile.call(self, _schema, _root, localRefs, baseId);\n\n    var $async = _schema.$async === true;\n\n    var sourceCode = validateGenerator({\n      isTop: true,\n      schema: _schema,\n      isRoot: isRoot,\n      baseId: baseId,\n      root: _root,\n      schemaPath: '',\n      errSchemaPath: '#',\n      errorPath: '\"\"',\n      MissingRefError: errorClasses.MissingRef,\n      RULES: RULES,\n      validate: validateGenerator,\n      util: util,\n      resolve: resolve,\n      resolveRef: resolveRef,\n      usePattern: usePattern,\n      useDefault: useDefault,\n      useCustomRule: useCustomRule,\n      opts: opts,\n      formats: formats,\n      logger: self.logger,\n      self: self\n    });\n\n    sourceCode = vars(refVal, refValCode) + vars(patterns, patternCode)\n                   + vars(defaults, defaultCode) + vars(customRules, customRuleCode)\n                   + sourceCode;\n\n    if (opts.processCode) sourceCode = opts.processCode(sourceCode);\n    // console.log('\\n\\n\\n *** \\n', JSON.stringify(sourceCode));\n    var validate;\n    try {\n      var makeValidate = new Function(\n        'self',\n        'RULES',\n        'formats',\n        'root',\n        'refVal',\n        'defaults',\n        'customRules',\n        'equal',\n        'ucs2length',\n        'ValidationError',\n        sourceCode\n      );\n\n      validate = makeValidate(\n        self,\n        RULES,\n        formats,\n        root,\n        refVal,\n        defaults,\n        customRules,\n        equal,\n        ucs2length,\n        ValidationError\n      );\n\n      refVal[0] = validate;\n    } catch(e) {\n      self.logger.error('Error compiling schema, function code:', sourceCode);\n      throw e;\n    }\n\n    validate.schema = _schema;\n    validate.errors = null;\n    validate.refs = refs;\n    validate.refVal = refVal;\n    validate.root = isRoot ? validate : _root;\n    if ($async) validate.$async = true;\n    if (opts.sourceCode === true) {\n      validate.source = {\n        code: sourceCode,\n        patterns: patterns,\n        defaults: defaults\n      };\n    }\n\n    return validate;\n  }\n\n  function resolveRef(baseId, ref, isRoot) {\n    ref = resolve.url(baseId, ref);\n    var refIndex = refs[ref];\n    var _refVal, refCode;\n    if (refIndex !== undefined) {\n      _refVal = refVal[refIndex];\n      refCode = 'refVal[' + refIndex + ']';\n      return resolvedRef(_refVal, refCode);\n    }\n    if (!isRoot && root.refs) {\n      var rootRefId = root.refs[ref];\n      if (rootRefId !== undefined) {\n        _refVal = root.refVal[rootRefId];\n        refCode = addLocalRef(ref, _refVal);\n        return resolvedRef(_refVal, refCode);\n      }\n    }\n\n    refCode = addLocalRef(ref);\n    var v = resolve.call(self, localCompile, root, ref);\n    if (v === undefined) {\n      var localSchema = localRefs && localRefs[ref];\n      if (localSchema) {\n        v = resolve.inlineRef(localSchema, opts.inlineRefs)\n            ? localSchema\n            : compile.call(self, localSchema, root, localRefs, baseId);\n      }\n    }\n\n    if (v === undefined) {\n      removeLocalRef(ref);\n    } else {\n      replaceLocalRef(ref, v);\n      return resolvedRef(v, refCode);\n    }\n  }\n\n  function addLocalRef(ref, v) {\n    var refId = refVal.length;\n    refVal[refId] = v;\n    refs[ref] = refId;\n    return 'refVal' + refId;\n  }\n\n  function removeLocalRef(ref) {\n    delete refs[ref];\n  }\n\n  function replaceLocalRef(ref, v) {\n    var refId = refs[ref];\n    refVal[refId] = v;\n  }\n\n  function resolvedRef(refVal, code) {\n    return typeof refVal == 'object' || typeof refVal == 'boolean'\n            ? { code: code, schema: refVal, inline: true }\n            : { code: code, $async: refVal && !!refVal.$async };\n  }\n\n  function usePattern(regexStr) {\n    var index = patternsHash[regexStr];\n    if (index === undefined) {\n      index = patternsHash[regexStr] = patterns.length;\n      patterns[index] = regexStr;\n    }\n    return 'pattern' + index;\n  }\n\n  function useDefault(value) {\n    switch (typeof value) {\n      case 'boolean':\n      case 'number':\n        return '' + value;\n      case 'string':\n        return util.toQuotedString(value);\n      case 'object':\n        if (value === null) return 'null';\n        var valueStr = stableStringify(value);\n        var index = defaultsHash[valueStr];\n        if (index === undefined) {\n          index = defaultsHash[valueStr] = defaults.length;\n          defaults[index] = value;\n        }\n        return 'default' + index;\n    }\n  }\n\n  function useCustomRule(rule, schema, parentSchema, it) {\n    if (self._opts.validateSchema !== false) {\n      var deps = rule.definition.dependencies;\n      if (deps && !deps.every(function(keyword) {\n        return Object.prototype.hasOwnProperty.call(parentSchema, keyword);\n      }))\n        throw new Error('parent schema must have all required keywords: ' + deps.join(','));\n\n      var validateSchema = rule.definition.validateSchema;\n      if (validateSchema) {\n        var valid = validateSchema(schema);\n        if (!valid) {\n          var message = 'keyword schema is invalid: ' + self.errorsText(validateSchema.errors);\n          if (self._opts.validateSchema == 'log') self.logger.error(message);\n          else throw new Error(message);\n        }\n      }\n    }\n\n    var compile = rule.definition.compile\n      , inline = rule.definition.inline\n      , macro = rule.definition.macro;\n\n    var validate;\n    if (compile) {\n      validate = compile.call(self, schema, parentSchema, it);\n    } else if (macro) {\n      validate = macro.call(self, schema, parentSchema, it);\n      if (opts.validateSchema !== false) self.validateSchema(validate, true);\n    } else if (inline) {\n      validate = inline.call(self, it, rule.keyword, schema, parentSchema);\n    } else {\n      validate = rule.definition.validate;\n      if (!validate) return;\n    }\n\n    if (validate === undefined)\n      throw new Error('custom keyword \"' + rule.keyword + '\"failed to compile');\n\n    var index = customRules.length;\n    customRules[index] = validate;\n\n    return {\n      code: 'customRule' + index,\n      validate: validate\n    };\n  }\n}\n\n\n/**\n * Checks if the schema is currently compiled\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n * @return {Object} object with properties \"index\" (compilation index) and \"compiling\" (boolean)\n */\nfunction checkCompiling(schema, root, baseId) {\n  /* jshint validthis: true */\n  var index = compIndex.call(this, schema, root, baseId);\n  if (index >= 0) return { index: index, compiling: true };\n  index = this._compilations.length;\n  this._compilations[index] = {\n    schema: schema,\n    root: root,\n    baseId: baseId\n  };\n  return { index: index, compiling: false };\n}\n\n\n/**\n * Removes the schema from the currently compiled list\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n */\nfunction endCompiling(schema, root, baseId) {\n  /* jshint validthis: true */\n  var i = compIndex.call(this, schema, root, baseId);\n  if (i >= 0) this._compilations.splice(i, 1);\n}\n\n\n/**\n * Index of schema compilation in the currently compiled list\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n * @return {Integer} compilation index\n */\nfunction compIndex(schema, root, baseId) {\n  /* jshint validthis: true */\n  for (var i=0; i<this._compilations.length; i++) {\n    var c = this._compilations[i];\n    if (c.schema == schema && c.root == root && c.baseId == baseId) return i;\n  }\n  return -1;\n}\n\n\nfunction patternCode(i, patterns) {\n  return 'var pattern' + i + ' = new RegExp(' + util.toQuotedString(patterns[i]) + ');';\n}\n\n\nfunction defaultCode(i) {\n  return 'var default' + i + ' = defaults[' + i + '];';\n}\n\n\nfunction refValCode(i, refVal) {\n  return refVal[i] === undefined ? '' : 'var refVal' + i + ' = refVal[' + i + '];';\n}\n\n\nfunction customRuleCode(i) {\n  return 'var customRule' + i + ' = customRules[' + i + '];';\n}\n\n\nfunction vars(arr, statement) {\n  if (!arr.length) return '';\n  var code = '';\n  for (var i=0; i<arr.length; i++)\n    code += statement(i, arr);\n  return code;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/compile/index.js?")},"./node_modules/ajv/lib/compile/resolve.js":
/*!*************************************************!*\
  !*** ./node_modules/ajv/lib/compile/resolve.js ***!
  \*************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar URI = __webpack_require__(/*! uri-js */ \"./node_modules/uri-js/dist/es5/uri.all.js\")\n  , equal = __webpack_require__(/*! fast-deep-equal */ \"./node_modules/fast-deep-equal/index.js\")\n  , util = __webpack_require__(/*! ./util */ \"./node_modules/ajv/lib/compile/util.js\")\n  , SchemaObject = __webpack_require__(/*! ./schema_obj */ \"./node_modules/ajv/lib/compile/schema_obj.js\")\n  , traverse = __webpack_require__(/*! json-schema-traverse */ \"./node_modules/json-schema-traverse/index.js\");\n\nmodule.exports = resolve;\n\nresolve.normalizeId = normalizeId;\nresolve.fullPath = getFullPath;\nresolve.url = resolveUrl;\nresolve.ids = resolveIds;\nresolve.inlineRef = inlineRef;\nresolve.schema = resolveSchema;\n\n/**\n * [resolve and compile the references ($ref)]\n * @this   Ajv\n * @param  {Function} compile reference to schema compilation funciton (localCompile)\n * @param  {Object} root object with information about the root schema for the current schema\n * @param  {String} ref reference to resolve\n * @return {Object|Function} schema object (if the schema can be inlined) or validation function\n */\nfunction resolve(compile, root, ref) {\n  /* jshint validthis: true */\n  var refVal = this._refs[ref];\n  if (typeof refVal == 'string') {\n    if (this._refs[refVal]) refVal = this._refs[refVal];\n    else return resolve.call(this, compile, root, refVal);\n  }\n\n  refVal = refVal || this._schemas[ref];\n  if (refVal instanceof SchemaObject) {\n    return inlineRef(refVal.schema, this._opts.inlineRefs)\n            ? refVal.schema\n            : refVal.validate || this._compile(refVal);\n  }\n\n  var res = resolveSchema.call(this, root, ref);\n  var schema, v, baseId;\n  if (res) {\n    schema = res.schema;\n    root = res.root;\n    baseId = res.baseId;\n  }\n\n  if (schema instanceof SchemaObject) {\n    v = schema.validate || compile.call(this, schema.schema, root, undefined, baseId);\n  } else if (schema !== undefined) {\n    v = inlineRef(schema, this._opts.inlineRefs)\n        ? schema\n        : compile.call(this, schema, root, undefined, baseId);\n  }\n\n  return v;\n}\n\n\n/**\n * Resolve schema, its root and baseId\n * @this Ajv\n * @param  {Object} root root object with properties schema, refVal, refs\n * @param  {String} ref  reference to resolve\n * @return {Object} object with properties schema, root, baseId\n */\nfunction resolveSchema(root, ref) {\n  /* jshint validthis: true */\n  var p = URI.parse(ref)\n    , refPath = _getFullPath(p)\n    , baseId = getFullPath(this._getId(root.schema));\n  if (Object.keys(root.schema).length === 0 || refPath !== baseId) {\n    var id = normalizeId(refPath);\n    var refVal = this._refs[id];\n    if (typeof refVal == 'string') {\n      return resolveRecursive.call(this, root, refVal, p);\n    } else if (refVal instanceof SchemaObject) {\n      if (!refVal.validate) this._compile(refVal);\n      root = refVal;\n    } else {\n      refVal = this._schemas[id];\n      if (refVal instanceof SchemaObject) {\n        if (!refVal.validate) this._compile(refVal);\n        if (id == normalizeId(ref))\n          return { schema: refVal, root: root, baseId: baseId };\n        root = refVal;\n      } else {\n        return;\n      }\n    }\n    if (!root.schema) return;\n    baseId = getFullPath(this._getId(root.schema));\n  }\n  return getJsonPointer.call(this, p, baseId, root.schema, root);\n}\n\n\n/* @this Ajv */\nfunction resolveRecursive(root, ref, parsedRef) {\n  /* jshint validthis: true */\n  var res = resolveSchema.call(this, root, ref);\n  if (res) {\n    var schema = res.schema;\n    var baseId = res.baseId;\n    root = res.root;\n    var id = this._getId(schema);\n    if (id) baseId = resolveUrl(baseId, id);\n    return getJsonPointer.call(this, parsedRef, baseId, schema, root);\n  }\n}\n\n\nvar PREVENT_SCOPE_CHANGE = util.toHash(['properties', 'patternProperties', 'enum', 'dependencies', 'definitions']);\n/* @this Ajv */\nfunction getJsonPointer(parsedRef, baseId, schema, root) {\n  /* jshint validthis: true */\n  parsedRef.fragment = parsedRef.fragment || '';\n  if (parsedRef.fragment.slice(0,1) != '/') return;\n  var parts = parsedRef.fragment.split('/');\n\n  for (var i = 1; i < parts.length; i++) {\n    var part = parts[i];\n    if (part) {\n      part = util.unescapeFragment(part);\n      schema = schema[part];\n      if (schema === undefined) break;\n      var id;\n      if (!PREVENT_SCOPE_CHANGE[part]) {\n        id = this._getId(schema);\n        if (id) baseId = resolveUrl(baseId, id);\n        if (schema.$ref) {\n          var $ref = resolveUrl(baseId, schema.$ref);\n          var res = resolveSchema.call(this, root, $ref);\n          if (res) {\n            schema = res.schema;\n            root = res.root;\n            baseId = res.baseId;\n          }\n        }\n      }\n    }\n  }\n  if (schema !== undefined && schema !== root.schema)\n    return { schema: schema, root: root, baseId: baseId };\n}\n\n\nvar SIMPLE_INLINED = util.toHash([\n  'type', 'format', 'pattern',\n  'maxLength', 'minLength',\n  'maxProperties', 'minProperties',\n  'maxItems', 'minItems',\n  'maximum', 'minimum',\n  'uniqueItems', 'multipleOf',\n  'required', 'enum'\n]);\nfunction inlineRef(schema, limit) {\n  if (limit === false) return false;\n  if (limit === undefined || limit === true) return checkNoRef(schema);\n  else if (limit) return countKeys(schema) <= limit;\n}\n\n\nfunction checkNoRef(schema) {\n  var item;\n  if (Array.isArray(schema)) {\n    for (var i=0; i<schema.length; i++) {\n      item = schema[i];\n      if (typeof item == 'object' && !checkNoRef(item)) return false;\n    }\n  } else {\n    for (var key in schema) {\n      if (key == '$ref') return false;\n      item = schema[key];\n      if (typeof item == 'object' && !checkNoRef(item)) return false;\n    }\n  }\n  return true;\n}\n\n\nfunction countKeys(schema) {\n  var count = 0, item;\n  if (Array.isArray(schema)) {\n    for (var i=0; i<schema.length; i++) {\n      item = schema[i];\n      if (typeof item == 'object') count += countKeys(item);\n      if (count == Infinity) return Infinity;\n    }\n  } else {\n    for (var key in schema) {\n      if (key == '$ref') return Infinity;\n      if (SIMPLE_INLINED[key]) {\n        count++;\n      } else {\n        item = schema[key];\n        if (typeof item == 'object') count += countKeys(item) + 1;\n        if (count == Infinity) return Infinity;\n      }\n    }\n  }\n  return count;\n}\n\n\nfunction getFullPath(id, normalize) {\n  if (normalize !== false) id = normalizeId(id);\n  var p = URI.parse(id);\n  return _getFullPath(p);\n}\n\n\nfunction _getFullPath(p) {\n  return URI.serialize(p).split('#')[0] + '#';\n}\n\n\nvar TRAILING_SLASH_HASH = /#\\/?$/;\nfunction normalizeId(id) {\n  return id ? id.replace(TRAILING_SLASH_HASH, '') : '';\n}\n\n\nfunction resolveUrl(baseId, id) {\n  id = normalizeId(id);\n  return URI.resolve(baseId, id);\n}\n\n\n/* @this Ajv */\nfunction resolveIds(schema) {\n  var schemaId = normalizeId(this._getId(schema));\n  var baseIds = {'': schemaId};\n  var fullPaths = {'': getFullPath(schemaId, false)};\n  var localRefs = {};\n  var self = this;\n\n  traverse(schema, {allKeys: true}, function(sch, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n    if (jsonPtr === '') return;\n    var id = self._getId(sch);\n    var baseId = baseIds[parentJsonPtr];\n    var fullPath = fullPaths[parentJsonPtr] + '/' + parentKeyword;\n    if (keyIndex !== undefined)\n      fullPath += '/' + (typeof keyIndex == 'number' ? keyIndex : util.escapeFragment(keyIndex));\n\n    if (typeof id == 'string') {\n      id = baseId = normalizeId(baseId ? URI.resolve(baseId, id) : id);\n\n      var refVal = self._refs[id];\n      if (typeof refVal == 'string') refVal = self._refs[refVal];\n      if (refVal && refVal.schema) {\n        if (!equal(sch, refVal.schema))\n          throw new Error('id \"' + id + '\" resolves to more than one schema');\n      } else if (id != normalizeId(fullPath)) {\n        if (id[0] == '#') {\n          if (localRefs[id] && !equal(sch, localRefs[id]))\n            throw new Error('id \"' + id + '\" resolves to more than one schema');\n          localRefs[id] = sch;\n        } else {\n          self._refs[id] = fullPath;\n        }\n      }\n    }\n    baseIds[jsonPtr] = baseId;\n    fullPaths[jsonPtr] = fullPath;\n  });\n\n  return localRefs;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/compile/resolve.js?")},"./node_modules/ajv/lib/compile/rules.js":
/*!***********************************************!*\
  !*** ./node_modules/ajv/lib/compile/rules.js ***!
  \***********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar ruleModules = __webpack_require__(/*! ../dotjs */ \"./node_modules/ajv/lib/dotjs/index.js\")\n  , toHash = __webpack_require__(/*! ./util */ \"./node_modules/ajv/lib/compile/util.js\").toHash;\n\nmodule.exports = function rules() {\n  var RULES = [\n    { type: 'number',\n      rules: [ { 'maximum': ['exclusiveMaximum'] },\n               { 'minimum': ['exclusiveMinimum'] }, 'multipleOf', 'format'] },\n    { type: 'string',\n      rules: [ 'maxLength', 'minLength', 'pattern', 'format' ] },\n    { type: 'array',\n      rules: [ 'maxItems', 'minItems', 'items', 'contains', 'uniqueItems' ] },\n    { type: 'object',\n      rules: [ 'maxProperties', 'minProperties', 'required', 'dependencies', 'propertyNames',\n               { 'properties': ['additionalProperties', 'patternProperties'] } ] },\n    { rules: [ '$ref', 'const', 'enum', 'not', 'anyOf', 'oneOf', 'allOf', 'if' ] }\n  ];\n\n  var ALL = [ 'type', '$comment' ];\n  var KEYWORDS = [\n    '$schema', '$id', 'id', '$data', '$async', 'title',\n    'description', 'default', 'definitions',\n    'examples', 'readOnly', 'writeOnly',\n    'contentMediaType', 'contentEncoding',\n    'additionalItems', 'then', 'else'\n  ];\n  var TYPES = [ 'number', 'integer', 'string', 'array', 'object', 'boolean', 'null' ];\n  RULES.all = toHash(ALL);\n  RULES.types = toHash(TYPES);\n\n  RULES.forEach(function (group) {\n    group.rules = group.rules.map(function (keyword) {\n      var implKeywords;\n      if (typeof keyword == 'object') {\n        var key = Object.keys(keyword)[0];\n        implKeywords = keyword[key];\n        keyword = key;\n        implKeywords.forEach(function (k) {\n          ALL.push(k);\n          RULES.all[k] = true;\n        });\n      }\n      ALL.push(keyword);\n      var rule = RULES.all[keyword] = {\n        keyword: keyword,\n        code: ruleModules[keyword],\n        implements: implKeywords\n      };\n      return rule;\n    });\n\n    RULES.all.$comment = {\n      keyword: '$comment',\n      code: ruleModules.$comment\n    };\n\n    if (group.type) RULES.types[group.type] = group;\n  });\n\n  RULES.keywords = toHash(ALL.concat(KEYWORDS));\n  RULES.custom = {};\n\n  return RULES;\n};\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/compile/rules.js?")},"./node_modules/ajv/lib/compile/schema_obj.js":
/*!****************************************************!*\
  !*** ./node_modules/ajv/lib/compile/schema_obj.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nvar util = __webpack_require__(/*! ./util */ "./node_modules/ajv/lib/compile/util.js");\n\nmodule.exports = SchemaObject;\n\nfunction SchemaObject(obj) {\n  util.copy(obj, this);\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/compile/schema_obj.js?')},"./node_modules/ajv/lib/compile/ucs2length.js":
/*!****************************************************!*\
  !*** ./node_modules/ajv/lib/compile/ucs2length.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\n// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nmodule.exports = function ucs2length(str) {\n  var length = 0\n    , len = str.length\n    , pos = 0\n    , value;\n  while (pos < len) {\n    length++;\n    value = str.charCodeAt(pos++);\n    if (value >= 0xD800 && value <= 0xDBFF && pos < len) {\n      // high surrogate, and there is a next character\n      value = str.charCodeAt(pos);\n      if ((value & 0xFC00) == 0xDC00) pos++; // low surrogate\n    }\n  }\n  return length;\n};\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/compile/ucs2length.js?")},"./node_modules/ajv/lib/compile/util.js":
/*!**********************************************!*\
  !*** ./node_modules/ajv/lib/compile/util.js ***!
  \**********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\n\nmodule.exports = {\n  copy: copy,\n  checkDataType: checkDataType,\n  checkDataTypes: checkDataTypes,\n  coerceToTypes: coerceToTypes,\n  toHash: toHash,\n  getProperty: getProperty,\n  escapeQuotes: escapeQuotes,\n  equal: __webpack_require__(/*! fast-deep-equal */ \"./node_modules/fast-deep-equal/index.js\"),\n  ucs2length: __webpack_require__(/*! ./ucs2length */ \"./node_modules/ajv/lib/compile/ucs2length.js\"),\n  varOccurences: varOccurences,\n  varReplace: varReplace,\n  cleanUpCode: cleanUpCode,\n  finalCleanUpCode: finalCleanUpCode,\n  schemaHasRules: schemaHasRules,\n  schemaHasRulesExcept: schemaHasRulesExcept,\n  schemaUnknownRules: schemaUnknownRules,\n  toQuotedString: toQuotedString,\n  getPathExpr: getPathExpr,\n  getPath: getPath,\n  getData: getData,\n  unescapeFragment: unescapeFragment,\n  unescapeJsonPointer: unescapeJsonPointer,\n  escapeFragment: escapeFragment,\n  escapeJsonPointer: escapeJsonPointer\n};\n\n\nfunction copy(o, to) {\n  to = to || {};\n  for (var key in o) to[key] = o[key];\n  return to;\n}\n\n\nfunction checkDataType(dataType, data, negate) {\n  var EQUAL = negate ? ' !== ' : ' === '\n    , AND = negate ? ' || ' : ' && '\n    , OK = negate ? '!' : ''\n    , NOT = negate ? '' : '!';\n  switch (dataType) {\n    case 'null': return data + EQUAL + 'null';\n    case 'array': return OK + 'Array.isArray(' + data + ')';\n    case 'object': return '(' + OK + data + AND +\n                          'typeof ' + data + EQUAL + '\"object\"' + AND +\n                          NOT + 'Array.isArray(' + data + '))';\n    case 'integer': return '(typeof ' + data + EQUAL + '\"number\"' + AND +\n                           NOT + '(' + data + ' % 1)' +\n                           AND + data + EQUAL + data + ')';\n    default: return 'typeof ' + data + EQUAL + '\"' + dataType + '\"';\n  }\n}\n\n\nfunction checkDataTypes(dataTypes, data) {\n  switch (dataTypes.length) {\n    case 1: return checkDataType(dataTypes[0], data, true);\n    default:\n      var code = '';\n      var types = toHash(dataTypes);\n      if (types.array && types.object) {\n        code = types.null ? '(': '(!' + data + ' || ';\n        code += 'typeof ' + data + ' !== \"object\")';\n        delete types.null;\n        delete types.array;\n        delete types.object;\n      }\n      if (types.number) delete types.integer;\n      for (var t in types)\n        code += (code ? ' && ' : '' ) + checkDataType(t, data, true);\n\n      return code;\n  }\n}\n\n\nvar COERCE_TO_TYPES = toHash([ 'string', 'number', 'integer', 'boolean', 'null' ]);\nfunction coerceToTypes(optionCoerceTypes, dataTypes) {\n  if (Array.isArray(dataTypes)) {\n    var types = [];\n    for (var i=0; i<dataTypes.length; i++) {\n      var t = dataTypes[i];\n      if (COERCE_TO_TYPES[t]) types[types.length] = t;\n      else if (optionCoerceTypes === 'array' && t === 'array') types[types.length] = t;\n    }\n    if (types.length) return types;\n  } else if (COERCE_TO_TYPES[dataTypes]) {\n    return [dataTypes];\n  } else if (optionCoerceTypes === 'array' && dataTypes === 'array') {\n    return ['array'];\n  }\n}\n\n\nfunction toHash(arr) {\n  var hash = {};\n  for (var i=0; i<arr.length; i++) hash[arr[i]] = true;\n  return hash;\n}\n\n\nvar IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;\nvar SINGLE_QUOTE = /'|\\\\/g;\nfunction getProperty(key) {\n  return typeof key == 'number'\n          ? '[' + key + ']'\n          : IDENTIFIER.test(key)\n            ? '.' + key\n            : \"['\" + escapeQuotes(key) + \"']\";\n}\n\n\nfunction escapeQuotes(str) {\n  return str.replace(SINGLE_QUOTE, '\\\\$&')\n            .replace(/\\n/g, '\\\\n')\n            .replace(/\\r/g, '\\\\r')\n            .replace(/\\f/g, '\\\\f')\n            .replace(/\\t/g, '\\\\t');\n}\n\n\nfunction varOccurences(str, dataVar) {\n  dataVar += '[^0-9]';\n  var matches = str.match(new RegExp(dataVar, 'g'));\n  return matches ? matches.length : 0;\n}\n\n\nfunction varReplace(str, dataVar, expr) {\n  dataVar += '([^0-9])';\n  expr = expr.replace(/\\$/g, '$$$$');\n  return str.replace(new RegExp(dataVar, 'g'), expr + '$1');\n}\n\n\nvar EMPTY_ELSE = /else\\s*{\\s*}/g\n  , EMPTY_IF_NO_ELSE = /if\\s*\\([^)]+\\)\\s*\\{\\s*\\}(?!\\s*else)/g\n  , EMPTY_IF_WITH_ELSE = /if\\s*\\(([^)]+)\\)\\s*\\{\\s*\\}\\s*else(?!\\s*if)/g;\nfunction cleanUpCode(out) {\n  return out.replace(EMPTY_ELSE, '')\n            .replace(EMPTY_IF_NO_ELSE, '')\n            .replace(EMPTY_IF_WITH_ELSE, 'if (!($1))');\n}\n\n\nvar ERRORS_REGEXP = /[^v.]errors/g\n  , REMOVE_ERRORS = /var errors = 0;|var vErrors = null;|validate.errors = vErrors;/g\n  , REMOVE_ERRORS_ASYNC = /var errors = 0;|var vErrors = null;/g\n  , RETURN_VALID = 'return errors === 0;'\n  , RETURN_TRUE = 'validate.errors = null; return true;'\n  , RETURN_ASYNC = /if \\(errors === 0\\) return data;\\s*else throw new ValidationError\\(vErrors\\);/\n  , RETURN_DATA_ASYNC = 'return data;'\n  , ROOTDATA_REGEXP = /[^A-Za-z_$]rootData[^A-Za-z0-9_$]/g\n  , REMOVE_ROOTDATA = /if \\(rootData === undefined\\) rootData = data;/;\n\nfunction finalCleanUpCode(out, async) {\n  var matches = out.match(ERRORS_REGEXP);\n  if (matches && matches.length == 2) {\n    out = async\n          ? out.replace(REMOVE_ERRORS_ASYNC, '')\n               .replace(RETURN_ASYNC, RETURN_DATA_ASYNC)\n          : out.replace(REMOVE_ERRORS, '')\n               .replace(RETURN_VALID, RETURN_TRUE);\n  }\n\n  matches = out.match(ROOTDATA_REGEXP);\n  if (!matches || matches.length !== 3) return out;\n  return out.replace(REMOVE_ROOTDATA, '');\n}\n\n\nfunction schemaHasRules(schema, rules) {\n  if (typeof schema == 'boolean') return !schema;\n  for (var key in schema) if (rules[key]) return true;\n}\n\n\nfunction schemaHasRulesExcept(schema, rules, exceptKeyword) {\n  if (typeof schema == 'boolean') return !schema && exceptKeyword != 'not';\n  for (var key in schema) if (key != exceptKeyword && rules[key]) return true;\n}\n\n\nfunction schemaUnknownRules(schema, rules) {\n  if (typeof schema == 'boolean') return;\n  for (var key in schema) if (!rules[key]) return key;\n}\n\n\nfunction toQuotedString(str) {\n  return '\\'' + escapeQuotes(str) + '\\'';\n}\n\n\nfunction getPathExpr(currentPath, expr, jsonPointers, isNumber) {\n  var path = jsonPointers // false by default\n              ? '\\'/\\' + ' + expr + (isNumber ? '' : '.replace(/~/g, \\'~0\\').replace(/\\\\//g, \\'~1\\')')\n              : (isNumber ? '\\'[\\' + ' + expr + ' + \\']\\'' : '\\'[\\\\\\'\\' + ' + expr + ' + \\'\\\\\\']\\'');\n  return joinPaths(currentPath, path);\n}\n\n\nfunction getPath(currentPath, prop, jsonPointers) {\n  var path = jsonPointers // false by default\n              ? toQuotedString('/' + escapeJsonPointer(prop))\n              : toQuotedString(getProperty(prop));\n  return joinPaths(currentPath, path);\n}\n\n\nvar JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/;\nvar RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/;\nfunction getData($data, lvl, paths) {\n  var up, jsonPointer, data, matches;\n  if ($data === '') return 'rootData';\n  if ($data[0] == '/') {\n    if (!JSON_POINTER.test($data)) throw new Error('Invalid JSON-pointer: ' + $data);\n    jsonPointer = $data;\n    data = 'rootData';\n  } else {\n    matches = $data.match(RELATIVE_JSON_POINTER);\n    if (!matches) throw new Error('Invalid JSON-pointer: ' + $data);\n    up = +matches[1];\n    jsonPointer = matches[2];\n    if (jsonPointer == '#') {\n      if (up >= lvl) throw new Error('Cannot access property/index ' + up + ' levels up, current level is ' + lvl);\n      return paths[lvl - up];\n    }\n\n    if (up > lvl) throw new Error('Cannot access data ' + up + ' levels up, current level is ' + lvl);\n    data = 'data' + ((lvl - up) || '');\n    if (!jsonPointer) return data;\n  }\n\n  var expr = data;\n  var segments = jsonPointer.split('/');\n  for (var i=0; i<segments.length; i++) {\n    var segment = segments[i];\n    if (segment) {\n      data += getProperty(unescapeJsonPointer(segment));\n      expr += ' && ' + data;\n    }\n  }\n  return expr;\n}\n\n\nfunction joinPaths (a, b) {\n  if (a == '\"\"') return b;\n  return (a + ' + ' + b).replace(/' \\+ '/g, '');\n}\n\n\nfunction unescapeFragment(str) {\n  return unescapeJsonPointer(decodeURIComponent(str));\n}\n\n\nfunction escapeFragment(str) {\n  return encodeURIComponent(escapeJsonPointer(str));\n}\n\n\nfunction escapeJsonPointer(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n\n\nfunction unescapeJsonPointer(str) {\n  return str.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/compile/util.js?")},"./node_modules/ajv/lib/data.js":
/*!**************************************!*\
  !*** ./node_modules/ajv/lib/data.js ***!
  \**************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar KEYWORDS = [\n  'multipleOf',\n  'maximum',\n  'exclusiveMaximum',\n  'minimum',\n  'exclusiveMinimum',\n  'maxLength',\n  'minLength',\n  'pattern',\n  'additionalItems',\n  'maxItems',\n  'minItems',\n  'uniqueItems',\n  'maxProperties',\n  'minProperties',\n  'required',\n  'additionalProperties',\n  'enum',\n  'format',\n  'const'\n];\n\nmodule.exports = function (metaSchema, keywordsJsonPointers) {\n  for (var i=0; i<keywordsJsonPointers.length; i++) {\n    metaSchema = JSON.parse(JSON.stringify(metaSchema));\n    var segments = keywordsJsonPointers[i].split('/');\n    var keywords = metaSchema;\n    var j;\n    for (j=1; j<segments.length; j++)\n      keywords = keywords[segments[j]];\n\n    for (j=0; j<KEYWORDS.length; j++) {\n      var key = KEYWORDS[j];\n      var schema = keywords[key];\n      if (schema) {\n        keywords[key] = {\n          anyOf: [\n            schema,\n            { $ref: 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#' }\n          ]\n        };\n      }\n    }\n  }\n\n  return metaSchema;\n};\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/data.js?")},"./node_modules/ajv/lib/definition_schema.js":
/*!***************************************************!*\
  !*** ./node_modules/ajv/lib/definition_schema.js ***!
  \***************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar metaSchema = __webpack_require__(/*! ./refs/json-schema-draft-07.json */ \"./node_modules/ajv/lib/refs/json-schema-draft-07.json\");\n\nmodule.exports = {\n  $id: 'https://github.com/epoberezkin/ajv/blob/master/lib/definition_schema.js',\n  definitions: {\n    simpleTypes: metaSchema.definitions.simpleTypes\n  },\n  type: 'object',\n  dependencies: {\n    schema: ['validate'],\n    $data: ['validate'],\n    statements: ['inline'],\n    valid: {not: {required: ['macro']}}\n  },\n  properties: {\n    type: metaSchema.properties.type,\n    schema: {type: 'boolean'},\n    statements: {type: 'boolean'},\n    dependencies: {\n      type: 'array',\n      items: {type: 'string'}\n    },\n    metaSchema: {type: 'object'},\n    modifying: {type: 'boolean'},\n    valid: {type: 'boolean'},\n    $data: {type: 'boolean'},\n    async: {type: 'boolean'},\n    errors: {\n      anyOf: [\n        {type: 'boolean'},\n        {const: 'full'}\n      ]\n    }\n  }\n};\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/definition_schema.js?")},"./node_modules/ajv/lib/dotjs/_limit.js":
/*!**********************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/_limit.js ***!
  \**********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate__limit(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $isMax = $keyword == 'maximum',\n    $exclusiveKeyword = $isMax ? 'exclusiveMaximum' : 'exclusiveMinimum',\n    $schemaExcl = it.schema[$exclusiveKeyword],\n    $isDataExcl = it.opts.$data && $schemaExcl && $schemaExcl.$data,\n    $op = $isMax ? '<' : '>',\n    $notOp = $isMax ? '>' : '<',\n    $errorKeyword = undefined;\n  if ($isDataExcl) {\n    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr),\n      $exclusive = 'exclusive' + $lvl,\n      $exclType = 'exclType' + $lvl,\n      $exclIsNumber = 'exclIsNumber' + $lvl,\n      $opExpr = 'op' + $lvl,\n      $opStr = '\\' + ' + $opExpr + ' + \\'';\n    out += ' var schemaExcl' + ($lvl) + ' = ' + ($schemaValueExcl) + '; ';\n    $schemaValueExcl = 'schemaExcl' + $lvl;\n    out += ' var ' + ($exclusive) + '; var ' + ($exclType) + ' = typeof ' + ($schemaValueExcl) + '; if (' + ($exclType) + ' != \\'boolean\\' && ' + ($exclType) + ' != \\'undefined\\' && ' + ($exclType) + ' != \\'number\\') { ';\n    var $errorKeyword = $exclusiveKeyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || '_exclusiveLimit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'' + ($exclusiveKeyword) + ' should be boolean\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } else if ( ';\n    if ($isData) {\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n    }\n    out += ' ' + ($exclType) + ' == \\'number\\' ? ( (' + ($exclusive) + ' = ' + ($schemaValue) + ' === undefined || ' + ($schemaValueExcl) + ' ' + ($op) + '= ' + ($schemaValue) + ') ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValueExcl) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) : ( (' + ($exclusive) + ' = ' + ($schemaValueExcl) + ' === true) ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValue) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) || ' + ($data) + ' !== ' + ($data) + ') { var op' + ($lvl) + ' = ' + ($exclusive) + ' ? \\'' + ($op) + '\\' : \\'' + ($op) + '=\\'; ';\n    if ($schema === undefined) {\n      $errorKeyword = $exclusiveKeyword;\n      $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n      $schemaValue = $schemaValueExcl;\n      $isData = $isDataExcl;\n    }\n  } else {\n    var $exclIsNumber = typeof $schemaExcl == 'number',\n      $opStr = $op;\n    if ($exclIsNumber && $isData) {\n      var $opExpr = '\\'' + $opStr + '\\'';\n      out += ' if ( ';\n      if ($isData) {\n        out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n      }\n      out += ' ( ' + ($schemaValue) + ' === undefined || ' + ($schemaExcl) + ' ' + ($op) + '= ' + ($schemaValue) + ' ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaExcl) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) || ' + ($data) + ' !== ' + ($data) + ') { ';\n    } else {\n      if ($exclIsNumber && $schema === undefined) {\n        $exclusive = true;\n        $errorKeyword = $exclusiveKeyword;\n        $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n        $schemaValue = $schemaExcl;\n        $notOp += '=';\n      } else {\n        if ($exclIsNumber) $schemaValue = Math[$isMax ? 'min' : 'max']($schemaExcl, $schema);\n        if ($schemaExcl === ($exclIsNumber ? $schemaValue : true)) {\n          $exclusive = true;\n          $errorKeyword = $exclusiveKeyword;\n          $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n          $notOp += '=';\n        } else {\n          $exclusive = false;\n          $opStr += '=';\n        }\n      }\n      var $opExpr = '\\'' + $opStr + '\\'';\n      out += ' if ( ';\n      if ($isData) {\n        out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n      }\n      out += ' ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' || ' + ($data) + ' !== ' + ($data) + ') { ';\n    }\n  }\n  $errorKeyword = $errorKeyword || $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { comparison: ' + ($opExpr) + ', limit: ' + ($schemaValue) + ', exclusive: ' + ($exclusive) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be ' + ($opStr) + ' ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue);\n      } else {\n        out += '' + ($schemaValue) + '\\'';\n      }\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/_limit.js?")},"./node_modules/ajv/lib/dotjs/_limitItems.js":
/*!***************************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/_limitItems.js ***!
  \***************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate__limitItems(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $op = $keyword == 'maxItems' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  out += ' ' + ($data) + '.length ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT have ';\n      if ($keyword == 'maxItems') {\n        out += 'more';\n      } else {\n        out += 'fewer';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' items\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/_limitItems.js?")},"./node_modules/ajv/lib/dotjs/_limitLength.js":
/*!****************************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/_limitLength.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate__limitLength(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $op = $keyword == 'maxLength' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  if (it.opts.unicode === false) {\n    out += ' ' + ($data) + '.length ';\n  } else {\n    out += ' ucs2length(' + ($data) + ') ';\n  }\n  out += ' ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitLength') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT be ';\n      if ($keyword == 'maxLength') {\n        out += 'longer';\n      } else {\n        out += 'shorter';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' characters\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/_limitLength.js?")},"./node_modules/ajv/lib/dotjs/_limitProperties.js":
/*!********************************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/_limitProperties.js ***!
  \********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate__limitProperties(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $op = $keyword == 'maxProperties' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  out += ' Object.keys(' + ($data) + ').length ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitProperties') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT have ';\n      if ($keyword == 'maxProperties') {\n        out += 'more';\n      } else {\n        out += 'fewer';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' properties\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/_limitProperties.js?")},"./node_modules/ajv/lib/dotjs/allOf.js":
/*!*********************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/allOf.js ***!
  \*********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_allOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $currentBaseId = $it.baseId,\n    $allSchemasEmpty = true;\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $i = -1,\n      l1 = arr1.length - 1;\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n      if ((it.opts.strictKeywords ? typeof $sch == 'object' && Object.keys($sch).length > 0 : it.util.schemaHasRules($sch, it.RULES.all))) {\n        $allSchemasEmpty = false;\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    if ($allSchemasEmpty) {\n      out += ' if (true) { ';\n    } else {\n      out += ' ' + ($closingBraces.slice(0, -1)) + ' ';\n    }\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/allOf.js?")},"./node_modules/ajv/lib/dotjs/anyOf.js":
/*!*********************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/anyOf.js ***!
  \*********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_anyOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $noEmptySchema = $schema.every(function($sch) {\n    return (it.opts.strictKeywords ? typeof $sch == 'object' && Object.keys($sch).length > 0 : it.util.schemaHasRules($sch, it.RULES.all));\n  });\n  if ($noEmptySchema) {\n    var $currentBaseId = $it.baseId;\n    out += ' var ' + ($errs) + ' = errors; var ' + ($valid) + ' = false;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var arr1 = $schema;\n    if (arr1) {\n      var $sch, $i = -1,\n        l1 = arr1.length - 1;\n      while ($i < l1) {\n        $sch = arr1[$i += 1];\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        out += ' ' + ($valid) + ' = ' + ($valid) + ' || ' + ($nextValid) + '; if (!' + ($valid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($closingBraces) + ' if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('anyOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should match some schema in anyOf\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n    if (it.opts.allErrors) {\n      out += ' } ';\n    }\n    out = it.util.cleanUpCode(out);\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/anyOf.js?")},"./node_modules/ajv/lib/dotjs/comment.js":
/*!***********************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/comment.js ***!
  \***********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_comment(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $schema = it.schema[$keyword];\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $comment = it.util.toQuotedString($schema);\n  if (it.opts.$comment === true) {\n    out += ' console.log(' + ($comment) + ');';\n  } else if (typeof it.opts.$comment == 'function') {\n    out += ' self._opts.$comment(' + ($comment) + ', ' + (it.util.toQuotedString($errSchemaPath)) + ', validate.root.schema);';\n  }\n  return out;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/comment.js?")},"./node_modules/ajv/lib/dotjs/const.js":
/*!*********************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/const.js ***!
  \*********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_const(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!$isData) {\n    out += ' var schema' + ($lvl) + ' = validate.schema' + ($schemaPath) + ';';\n  }\n  out += 'var ' + ($valid) + ' = equal(' + ($data) + ', schema' + ($lvl) + '); if (!' + ($valid) + ') {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('const') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { allowedValue: schema' + ($lvl) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be equal to constant\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' }';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/const.js?")},"./node_modules/ajv/lib/dotjs/contains.js":
/*!************************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/contains.js ***!
  \************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_contains(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $idx = 'i' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $currentBaseId = it.baseId,\n    $nonEmptySchema = (it.opts.strictKeywords ? typeof $schema == 'object' && Object.keys($schema).length > 0 : it.util.schemaHasRules($schema, it.RULES.all));\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if ($nonEmptySchema) {\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($nextValid) + ' = false; for (var ' + ($idx) + ' = 0; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n    var $passData = $data + '[' + $idx + ']';\n    $it.dataPathArr[$dataNxt] = $idx;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    out += ' if (' + ($nextValid) + ') break; }  ';\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($closingBraces) + ' if (!' + ($nextValid) + ') {';\n  } else {\n    out += ' if (' + ($data) + '.length == 0) {';\n  }\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('contains') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should contain a valid item\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } else { ';\n  if ($nonEmptySchema) {\n    out += '  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n  }\n  if (it.opts.allErrors) {\n    out += ' } ';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/contains.js?")},"./node_modules/ajv/lib/dotjs/custom.js":
/*!**********************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/custom.js ***!
  \**********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_custom(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $rule = this,\n    $definition = 'definition' + $lvl,\n    $rDef = $rule.definition,\n    $closingBraces = '';\n  var $compile, $inline, $macro, $ruleValidate, $validateCode;\n  if ($isData && $rDef.$data) {\n    $validateCode = 'keywordValidate' + $lvl;\n    var $validateSchema = $rDef.validateSchema;\n    out += ' var ' + ($definition) + ' = RULES.custom[\\'' + ($keyword) + '\\'].definition; var ' + ($validateCode) + ' = ' + ($definition) + '.validate;';\n  } else {\n    $ruleValidate = it.useCustomRule($rule, $schema, it.schema, it);\n    if (!$ruleValidate) return;\n    $schemaValue = 'validate.schema' + $schemaPath;\n    $validateCode = $ruleValidate.code;\n    $compile = $rDef.compile;\n    $inline = $rDef.inline;\n    $macro = $rDef.macro;\n  }\n  var $ruleErrs = $validateCode + '.errors',\n    $i = 'i' + $lvl,\n    $ruleErr = 'ruleErr' + $lvl,\n    $asyncKeyword = $rDef.async;\n  if ($asyncKeyword && !it.async) throw new Error('async keyword in sync schema');\n  if (!($inline || $macro)) {\n    out += '' + ($ruleErrs) + ' = null;';\n  }\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if ($isData && $rDef.$data) {\n    $closingBraces += '}';\n    out += ' if (' + ($schemaValue) + ' === undefined) { ' + ($valid) + ' = true; } else { ';\n    if ($validateSchema) {\n      $closingBraces += '}';\n      out += ' ' + ($valid) + ' = ' + ($definition) + '.validateSchema(' + ($schemaValue) + '); if (' + ($valid) + ') { ';\n    }\n  }\n  if ($inline) {\n    if ($rDef.statements) {\n      out += ' ' + ($ruleValidate.validate) + ' ';\n    } else {\n      out += ' ' + ($valid) + ' = ' + ($ruleValidate.validate) + '; ';\n    }\n  } else if ($macro) {\n    var $it = it.util.copy(it);\n    var $closingBraces = '';\n    $it.level++;\n    var $nextValid = 'valid' + $it.level;\n    $it.schema = $ruleValidate.validate;\n    $it.schemaPath = '';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var $code = it.validate($it).replace(/validate\\.schema/g, $validateCode);\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($code);\n  } else {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    out += '  ' + ($validateCode) + '.call( ';\n    if (it.opts.passContext) {\n      out += 'this';\n    } else {\n      out += 'self';\n    }\n    if ($compile || $rDef.schema === false) {\n      out += ' , ' + ($data) + ' ';\n    } else {\n      out += ' , ' + ($schemaValue) + ' , ' + ($data) + ' , validate.schema' + (it.schemaPath) + ' ';\n    }\n    out += ' , (dataPath || \\'\\')';\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + (it.errorPath);\n    }\n    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ' , rootData )  ';\n    var def_callRuleValidate = out;\n    out = $$outStack.pop();\n    if ($rDef.errors === false) {\n      out += ' ' + ($valid) + ' = ';\n      if ($asyncKeyword) {\n        out += 'await ';\n      }\n      out += '' + (def_callRuleValidate) + '; ';\n    } else {\n      if ($asyncKeyword) {\n        $ruleErrs = 'customErrors' + $lvl;\n        out += ' var ' + ($ruleErrs) + ' = null; try { ' + ($valid) + ' = await ' + (def_callRuleValidate) + '; } catch (e) { ' + ($valid) + ' = false; if (e instanceof ValidationError) ' + ($ruleErrs) + ' = e.errors; else throw e; } ';\n      } else {\n        out += ' ' + ($ruleErrs) + ' = null; ' + ($valid) + ' = ' + (def_callRuleValidate) + '; ';\n      }\n    }\n  }\n  if ($rDef.modifying) {\n    out += ' if (' + ($parentData) + ') ' + ($data) + ' = ' + ($parentData) + '[' + ($parentDataProperty) + '];';\n  }\n  out += '' + ($closingBraces);\n  if ($rDef.valid) {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  } else {\n    out += ' if ( ';\n    if ($rDef.valid === undefined) {\n      out += ' !';\n      if ($macro) {\n        out += '' + ($nextValid);\n      } else {\n        out += '' + ($valid);\n      }\n    } else {\n      out += ' ' + (!$rDef.valid) + ' ';\n    }\n    out += ') { ';\n    $errorKeyword = $rule.keyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \\'' + ($rule.keyword) + '\\' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should pass \"' + ($rule.keyword) + '\" keyword validation\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    var def_customError = out;\n    out = $$outStack.pop();\n    if ($inline) {\n      if ($rDef.errors) {\n        if ($rDef.errors != 'full') {\n          out += '  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\"; } ';\n          if (it.opts.verbose) {\n            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n          }\n          out += ' } ';\n        }\n      } else {\n        if ($rDef.errors === false) {\n          out += ' ' + (def_customError) + ' ';\n        } else {\n          out += ' if (' + ($errs) + ' == errors) { ' + (def_customError) + ' } else {  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\"; } ';\n          if (it.opts.verbose) {\n            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n          }\n          out += ' } } ';\n        }\n      }\n    } else if ($macro) {\n      out += '   var err =   '; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \\'' + ($rule.keyword) + '\\' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should pass \"' + ($rule.keyword) + '\" keyword validation\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError(vErrors); ';\n        } else {\n          out += ' validate.errors = vErrors; return false; ';\n        }\n      }\n    } else {\n      if ($rDef.errors === false) {\n        out += ' ' + (def_customError) + ' ';\n      } else {\n        out += ' if (Array.isArray(' + ($ruleErrs) + ')) { if (vErrors === null) vErrors = ' + ($ruleErrs) + '; else vErrors = vErrors.concat(' + ($ruleErrs) + '); errors = vErrors.length;  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + ';  ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\";  ';\n        if (it.opts.verbose) {\n          out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n        }\n        out += ' } } else { ' + (def_customError) + ' } ';\n      }\n    }\n    out += ' } ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  }\n  return out;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/custom.js?")},"./node_modules/ajv/lib/dotjs/dependencies.js":
/*!****************************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/dependencies.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_dependencies(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $schemaDeps = {},\n    $propertyDeps = {},\n    $ownProperties = it.opts.ownProperties;\n  for ($property in $schema) {\n    var $sch = $schema[$property];\n    var $deps = Array.isArray($sch) ? $propertyDeps : $schemaDeps;\n    $deps[$property] = $sch;\n  }\n  out += 'var ' + ($errs) + ' = errors;';\n  var $currentErrorPath = it.errorPath;\n  out += 'var missing' + ($lvl) + ';';\n  for (var $property in $propertyDeps) {\n    $deps = $propertyDeps[$property];\n    if ($deps.length) {\n      out += ' if ( ' + ($data) + (it.util.getProperty($property)) + ' !== undefined ';\n      if ($ownProperties) {\n        out += ' && Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($property)) + '\\') ';\n      }\n      if ($breakOnError) {\n        out += ' && ( ';\n        var arr1 = $deps;\n        if (arr1) {\n          var $propertyKey, $i = -1,\n            l1 = arr1.length - 1;\n          while ($i < l1) {\n            $propertyKey = arr1[$i += 1];\n            if ($i) {\n              out += ' || ';\n            }\n            var $prop = it.util.getProperty($propertyKey),\n              $useData = $data + $prop;\n            out += ' ( ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? $propertyKey : $prop)) + ') ) ';\n          }\n        }\n        out += ')) {  ';\n        var $propertyPath = 'missing' + $lvl,\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;\n        }\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('dependencies') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \\'' + (it.util.escapeQuotes($property)) + '\\', missingProperty: \\'' + ($missingProperty) + '\\', depsCount: ' + ($deps.length) + ', deps: \\'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(\", \"))) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should have ';\n            if ($deps.length == 1) {\n              out += 'property ' + (it.util.escapeQuotes($deps[0]));\n            } else {\n              out += 'properties ' + (it.util.escapeQuotes($deps.join(\", \")));\n            }\n            out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n      } else {\n        out += ' ) { ';\n        var arr2 = $deps;\n        if (arr2) {\n          var $propertyKey, i2 = -1,\n            l2 = arr2.length - 1;\n          while (i2 < l2) {\n            $propertyKey = arr2[i2 += 1];\n            var $prop = it.util.getProperty($propertyKey),\n              $missingProperty = it.util.escapeQuotes($propertyKey),\n              $useData = $data + $prop;\n            if (it.opts._errorDataPathProperty) {\n              it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n            }\n            out += ' if ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') {  var err =   '; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ('dependencies') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \\'' + (it.util.escapeQuotes($property)) + '\\', missingProperty: \\'' + ($missingProperty) + '\\', depsCount: ' + ($deps.length) + ', deps: \\'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(\", \"))) + '\\' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'should have ';\n                if ($deps.length == 1) {\n                  out += 'property ' + (it.util.escapeQuotes($deps[0]));\n                } else {\n                  out += 'properties ' + (it.util.escapeQuotes($deps.join(\", \")));\n                }\n                out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';\n          }\n        }\n      }\n      out += ' }   ';\n      if ($breakOnError) {\n        $closingBraces += '}';\n        out += ' else { ';\n      }\n    }\n  }\n  it.errorPath = $currentErrorPath;\n  var $currentBaseId = $it.baseId;\n  for (var $property in $schemaDeps) {\n    var $sch = $schemaDeps[$property];\n    if ((it.opts.strictKeywords ? typeof $sch == 'object' && Object.keys($sch).length > 0 : it.util.schemaHasRules($sch, it.RULES.all))) {\n      out += ' ' + ($nextValid) + ' = true; if ( ' + ($data) + (it.util.getProperty($property)) + ' !== undefined ';\n      if ($ownProperties) {\n        out += ' && Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($property)) + '\\') ';\n      }\n      out += ') { ';\n      $it.schema = $sch;\n      $it.schemaPath = $schemaPath + it.util.getProperty($property);\n      $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($property);\n      out += '  ' + (it.validate($it)) + ' ';\n      $it.baseId = $currentBaseId;\n      out += ' }  ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += '   ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/dependencies.js?")},"./node_modules/ajv/lib/dotjs/enum.js":
/*!********************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/enum.js ***!
  \********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_enum(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $i = 'i' + $lvl,\n    $vSchema = 'schema' + $lvl;\n  if (!$isData) {\n    out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + ';';\n  }\n  out += 'var ' + ($valid) + ';';\n  if ($isData) {\n    out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';\n  }\n  out += '' + ($valid) + ' = false;for (var ' + ($i) + '=0; ' + ($i) + '<' + ($vSchema) + '.length; ' + ($i) + '++) if (equal(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + '])) { ' + ($valid) + ' = true; break; }';\n  if ($isData) {\n    out += '  }  ';\n  }\n  out += ' if (!' + ($valid) + ') {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('enum') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { allowedValues: schema' + ($lvl) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be equal to one of the allowed values\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' }';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/enum.js?")},"./node_modules/ajv/lib/dotjs/format.js":
/*!**********************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/format.js ***!
  \**********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_format(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  if (it.opts.format === false) {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n    return out;\n  }\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $unknownFormats = it.opts.unknownFormats,\n    $allowUnknown = Array.isArray($unknownFormats);\n  if ($isData) {\n    var $format = 'format' + $lvl,\n      $isObject = 'isObject' + $lvl,\n      $formatType = 'formatType' + $lvl;\n    out += ' var ' + ($format) + ' = formats[' + ($schemaValue) + ']; var ' + ($isObject) + ' = typeof ' + ($format) + ' == \\'object\\' && !(' + ($format) + ' instanceof RegExp) && ' + ($format) + '.validate; var ' + ($formatType) + ' = ' + ($isObject) + ' && ' + ($format) + '.type || \\'string\\'; if (' + ($isObject) + ') { ';\n    if (it.async) {\n      out += ' var async' + ($lvl) + ' = ' + ($format) + '.async; ';\n    }\n    out += ' ' + ($format) + ' = ' + ($format) + '.validate; } if (  ';\n    if ($isData) {\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'string\\') || ';\n    }\n    out += ' (';\n    if ($unknownFormats != 'ignore') {\n      out += ' (' + ($schemaValue) + ' && !' + ($format) + ' ';\n      if ($allowUnknown) {\n        out += ' && self._opts.unknownFormats.indexOf(' + ($schemaValue) + ') == -1 ';\n      }\n      out += ') || ';\n    }\n    out += ' (' + ($format) + ' && ' + ($formatType) + ' == \\'' + ($ruleType) + '\\' && !(typeof ' + ($format) + ' == \\'function\\' ? ';\n    if (it.async) {\n      out += ' (async' + ($lvl) + ' ? await ' + ($format) + '(' + ($data) + ') : ' + ($format) + '(' + ($data) + ')) ';\n    } else {\n      out += ' ' + ($format) + '(' + ($data) + ') ';\n    }\n    out += ' : ' + ($format) + '.test(' + ($data) + '))))) {';\n  } else {\n    var $format = it.formats[$schema];\n    if (!$format) {\n      if ($unknownFormats == 'ignore') {\n        it.logger.warn('unknown format \"' + $schema + '\" ignored in schema at path \"' + it.errSchemaPath + '\"');\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n        return out;\n      } else if ($allowUnknown && $unknownFormats.indexOf($schema) >= 0) {\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n        return out;\n      } else {\n        throw new Error('unknown format \"' + $schema + '\" is used in schema at path \"' + it.errSchemaPath + '\"');\n      }\n    }\n    var $isObject = typeof $format == 'object' && !($format instanceof RegExp) && $format.validate;\n    var $formatType = $isObject && $format.type || 'string';\n    if ($isObject) {\n      var $async = $format.async === true;\n      $format = $format.validate;\n    }\n    if ($formatType != $ruleType) {\n      if ($breakOnError) {\n        out += ' if (true) { ';\n      }\n      return out;\n    }\n    if ($async) {\n      if (!it.async) throw new Error('async format in sync schema');\n      var $formatRef = 'formats' + it.util.getProperty($schema) + '.validate';\n      out += ' if (!(await ' + ($formatRef) + '(' + ($data) + '))) { ';\n    } else {\n      out += ' if (! ';\n      var $formatRef = 'formats' + it.util.getProperty($schema);\n      if ($isObject) $formatRef += '.validate';\n      if (typeof $format == 'function') {\n        out += ' ' + ($formatRef) + '(' + ($data) + ') ';\n      } else {\n        out += ' ' + ($formatRef) + '.test(' + ($data) + ') ';\n      }\n      out += ') { ';\n    }\n  }\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('format') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { format:  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += '  } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match format \"';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + (it.util.escapeQuotes($schema));\n      }\n      out += '\"\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + (it.util.toQuotedString($schema));\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/format.js?")},"./node_modules/ajv/lib/dotjs/if.js":
/*!******************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/if.js ***!
  \******************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_if(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $thenSch = it.schema['then'],\n    $elseSch = it.schema['else'],\n    $thenPresent = $thenSch !== undefined && (it.opts.strictKeywords ? typeof $thenSch == 'object' && Object.keys($thenSch).length > 0 : it.util.schemaHasRules($thenSch, it.RULES.all)),\n    $elsePresent = $elseSch !== undefined && (it.opts.strictKeywords ? typeof $elseSch == 'object' && Object.keys($elseSch).length > 0 : it.util.schemaHasRules($elseSch, it.RULES.all)),\n    $currentBaseId = $it.baseId;\n  if ($thenPresent || $elsePresent) {\n    var $ifClause;\n    $it.createErrors = false;\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($errs) + ' = errors; var ' + ($valid) + ' = true;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    out += '  ' + (it.validate($it)) + ' ';\n    $it.baseId = $currentBaseId;\n    $it.createErrors = true;\n    out += '  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; }  ';\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    if ($thenPresent) {\n      out += ' if (' + ($nextValid) + ') {  ';\n      $it.schema = it.schema['then'];\n      $it.schemaPath = it.schemaPath + '.then';\n      $it.errSchemaPath = it.errSchemaPath + '/then';\n      out += '  ' + (it.validate($it)) + ' ';\n      $it.baseId = $currentBaseId;\n      out += ' ' + ($valid) + ' = ' + ($nextValid) + '; ';\n      if ($thenPresent && $elsePresent) {\n        $ifClause = 'ifClause' + $lvl;\n        out += ' var ' + ($ifClause) + ' = \\'then\\'; ';\n      } else {\n        $ifClause = '\\'then\\'';\n      }\n      out += ' } ';\n      if ($elsePresent) {\n        out += ' else { ';\n      }\n    } else {\n      out += ' if (!' + ($nextValid) + ') { ';\n    }\n    if ($elsePresent) {\n      $it.schema = it.schema['else'];\n      $it.schemaPath = it.schemaPath + '.else';\n      $it.errSchemaPath = it.errSchemaPath + '/else';\n      out += '  ' + (it.validate($it)) + ' ';\n      $it.baseId = $currentBaseId;\n      out += ' ' + ($valid) + ' = ' + ($nextValid) + '; ';\n      if ($thenPresent && $elsePresent) {\n        $ifClause = 'ifClause' + $lvl;\n        out += ' var ' + ($ifClause) + ' = \\'else\\'; ';\n      } else {\n        $ifClause = '\\'else\\'';\n      }\n      out += ' } ';\n    }\n    out += ' if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('if') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { failingKeyword: ' + ($ifClause) + ' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should match \"\\' + ' + ($ifClause) + ' + \\'\" schema\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    out += ' }   ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n    out = it.util.cleanUpCode(out);\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/if.js?")},"./node_modules/ajv/lib/dotjs/index.js":
/*!*********************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/index.js ***!
  \*********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\n//all requires must be explicit because browserify won\'t work with dynamic requires\nmodule.exports = {\n  \'$ref\': __webpack_require__(/*! ./ref */ "./node_modules/ajv/lib/dotjs/ref.js"),\n  allOf: __webpack_require__(/*! ./allOf */ "./node_modules/ajv/lib/dotjs/allOf.js"),\n  anyOf: __webpack_require__(/*! ./anyOf */ "./node_modules/ajv/lib/dotjs/anyOf.js"),\n  \'$comment\': __webpack_require__(/*! ./comment */ "./node_modules/ajv/lib/dotjs/comment.js"),\n  const: __webpack_require__(/*! ./const */ "./node_modules/ajv/lib/dotjs/const.js"),\n  contains: __webpack_require__(/*! ./contains */ "./node_modules/ajv/lib/dotjs/contains.js"),\n  dependencies: __webpack_require__(/*! ./dependencies */ "./node_modules/ajv/lib/dotjs/dependencies.js"),\n  \'enum\': __webpack_require__(/*! ./enum */ "./node_modules/ajv/lib/dotjs/enum.js"),\n  format: __webpack_require__(/*! ./format */ "./node_modules/ajv/lib/dotjs/format.js"),\n  \'if\': __webpack_require__(/*! ./if */ "./node_modules/ajv/lib/dotjs/if.js"),\n  items: __webpack_require__(/*! ./items */ "./node_modules/ajv/lib/dotjs/items.js"),\n  maximum: __webpack_require__(/*! ./_limit */ "./node_modules/ajv/lib/dotjs/_limit.js"),\n  minimum: __webpack_require__(/*! ./_limit */ "./node_modules/ajv/lib/dotjs/_limit.js"),\n  maxItems: __webpack_require__(/*! ./_limitItems */ "./node_modules/ajv/lib/dotjs/_limitItems.js"),\n  minItems: __webpack_require__(/*! ./_limitItems */ "./node_modules/ajv/lib/dotjs/_limitItems.js"),\n  maxLength: __webpack_require__(/*! ./_limitLength */ "./node_modules/ajv/lib/dotjs/_limitLength.js"),\n  minLength: __webpack_require__(/*! ./_limitLength */ "./node_modules/ajv/lib/dotjs/_limitLength.js"),\n  maxProperties: __webpack_require__(/*! ./_limitProperties */ "./node_modules/ajv/lib/dotjs/_limitProperties.js"),\n  minProperties: __webpack_require__(/*! ./_limitProperties */ "./node_modules/ajv/lib/dotjs/_limitProperties.js"),\n  multipleOf: __webpack_require__(/*! ./multipleOf */ "./node_modules/ajv/lib/dotjs/multipleOf.js"),\n  not: __webpack_require__(/*! ./not */ "./node_modules/ajv/lib/dotjs/not.js"),\n  oneOf: __webpack_require__(/*! ./oneOf */ "./node_modules/ajv/lib/dotjs/oneOf.js"),\n  pattern: __webpack_require__(/*! ./pattern */ "./node_modules/ajv/lib/dotjs/pattern.js"),\n  properties: __webpack_require__(/*! ./properties */ "./node_modules/ajv/lib/dotjs/properties.js"),\n  propertyNames: __webpack_require__(/*! ./propertyNames */ "./node_modules/ajv/lib/dotjs/propertyNames.js"),\n  required: __webpack_require__(/*! ./required */ "./node_modules/ajv/lib/dotjs/required.js"),\n  uniqueItems: __webpack_require__(/*! ./uniqueItems */ "./node_modules/ajv/lib/dotjs/uniqueItems.js"),\n  validate: __webpack_require__(/*! ./validate */ "./node_modules/ajv/lib/dotjs/validate.js")\n};\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/index.js?')},"./node_modules/ajv/lib/dotjs/items.js":
/*!*********************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/items.js ***!
  \*********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_items(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $idx = 'i' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $currentBaseId = it.baseId;\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if (Array.isArray($schema)) {\n    var $additionalItems = it.schema.additionalItems;\n    if ($additionalItems === false) {\n      out += ' ' + ($valid) + ' = ' + ($data) + '.length <= ' + ($schema.length) + '; ';\n      var $currErrSchemaPath = $errSchemaPath;\n      $errSchemaPath = it.errSchemaPath + '/additionalItems';\n      out += '  if (!' + ($valid) + ') {   ';\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ('additionalItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schema.length) + ' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should NOT have more than ' + ($schema.length) + ' items\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n      out += ' } ';\n      $errSchemaPath = $currErrSchemaPath;\n      if ($breakOnError) {\n        $closingBraces += '}';\n        out += ' else { ';\n      }\n    }\n    var arr1 = $schema;\n    if (arr1) {\n      var $sch, $i = -1,\n        l1 = arr1.length - 1;\n      while ($i < l1) {\n        $sch = arr1[$i += 1];\n        if ((it.opts.strictKeywords ? typeof $sch == 'object' && Object.keys($sch).length > 0 : it.util.schemaHasRules($sch, it.RULES.all))) {\n          out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($i) + ') { ';\n          var $passData = $data + '[' + $i + ']';\n          $it.schema = $sch;\n          $it.schemaPath = $schemaPath + '[' + $i + ']';\n          $it.errSchemaPath = $errSchemaPath + '/' + $i;\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $i, it.opts.jsonPointers, true);\n          $it.dataPathArr[$dataNxt] = $i;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + ($nextValid) + ') { ';\n            $closingBraces += '}';\n          }\n        }\n      }\n    }\n    if (typeof $additionalItems == 'object' && (it.opts.strictKeywords ? typeof $additionalItems == 'object' && Object.keys($additionalItems).length > 0 : it.util.schemaHasRules($additionalItems, it.RULES.all))) {\n      $it.schema = $additionalItems;\n      $it.schemaPath = it.schemaPath + '.additionalItems';\n      $it.errSchemaPath = it.errSchemaPath + '/additionalItems';\n      out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($schema.length) + ') {  for (var ' + ($idx) + ' = ' + ($schema.length) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n      $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n      var $passData = $data + '[' + $idx + ']';\n      $it.dataPathArr[$dataNxt] = $idx;\n      var $code = it.validate($it);\n      $it.baseId = $currentBaseId;\n      if (it.util.varOccurences($code, $nextData) < 2) {\n        out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n      } else {\n        out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n      }\n      if ($breakOnError) {\n        out += ' if (!' + ($nextValid) + ') break; ';\n      }\n      out += ' } }  ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n  } else if ((it.opts.strictKeywords ? typeof $schema == 'object' && Object.keys($schema).length > 0 : it.util.schemaHasRules($schema, it.RULES.all))) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += '  for (var ' + ($idx) + ' = ' + (0) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n    var $passData = $data + '[' + $idx + ']';\n    $it.dataPathArr[$dataNxt] = $idx;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    if ($breakOnError) {\n      out += ' if (!' + ($nextValid) + ') break; ';\n    }\n    out += ' }';\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/items.js?")},"./node_modules/ajv/lib/dotjs/multipleOf.js":
/*!**************************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/multipleOf.js ***!
  \**************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_multipleOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  out += 'var division' + ($lvl) + ';if (';\n  if ($isData) {\n    out += ' ' + ($schemaValue) + ' !== undefined && ( typeof ' + ($schemaValue) + ' != \\'number\\' || ';\n  }\n  out += ' (division' + ($lvl) + ' = ' + ($data) + ' / ' + ($schemaValue) + ', ';\n  if (it.opts.multipleOfPrecision) {\n    out += ' Math.abs(Math.round(division' + ($lvl) + ') - division' + ($lvl) + ') > 1e-' + (it.opts.multipleOfPrecision) + ' ';\n  } else {\n    out += ' division' + ($lvl) + ' !== parseInt(division' + ($lvl) + ') ';\n  }\n  out += ' ) ';\n  if ($isData) {\n    out += '  )  ';\n  }\n  out += ' ) {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('multipleOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { multipleOf: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be multiple of ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue);\n      } else {\n        out += '' + ($schemaValue) + '\\'';\n      }\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/multipleOf.js?")},"./node_modules/ajv/lib/dotjs/not.js":
/*!*******************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/not.js ***!
  \*******************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_not(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  if ((it.opts.strictKeywords ? typeof $schema == 'object' && Object.keys($schema).length > 0 : it.util.schemaHasRules($schema, it.RULES.all))) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($errs) + ' = errors;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    $it.createErrors = false;\n    var $allErrorsOption;\n    if ($it.opts.allErrors) {\n      $allErrorsOption = $it.opts.allErrors;\n      $it.opts.allErrors = false;\n    }\n    out += ' ' + (it.validate($it)) + ' ';\n    $it.createErrors = true;\n    if ($allErrorsOption) $it.opts.allErrors = $allErrorsOption;\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' if (' + ($nextValid) + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('not') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n    if (it.opts.allErrors) {\n      out += ' } ';\n    }\n  } else {\n    out += '  var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('not') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if ($breakOnError) {\n      out += ' if (false) { ';\n    }\n  }\n  return out;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/not.js?")},"./node_modules/ajv/lib/dotjs/oneOf.js":
/*!*********************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/oneOf.js ***!
  \*********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_oneOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $currentBaseId = $it.baseId,\n    $prevValid = 'prevValid' + $lvl,\n    $passingSchemas = 'passingSchemas' + $lvl;\n  out += 'var ' + ($errs) + ' = errors , ' + ($prevValid) + ' = false , ' + ($valid) + ' = false , ' + ($passingSchemas) + ' = null; ';\n  var $wasComposite = it.compositeRule;\n  it.compositeRule = $it.compositeRule = true;\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $i = -1,\n      l1 = arr1.length - 1;\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n      if ((it.opts.strictKeywords ? typeof $sch == 'object' && Object.keys($sch).length > 0 : it.util.schemaHasRules($sch, it.RULES.all))) {\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n      } else {\n        out += ' var ' + ($nextValid) + ' = true; ';\n      }\n      if ($i) {\n        out += ' if (' + ($nextValid) + ' && ' + ($prevValid) + ') { ' + ($valid) + ' = false; ' + ($passingSchemas) + ' = [' + ($passingSchemas) + ', ' + ($i) + ']; } else { ';\n        $closingBraces += '}';\n      }\n      out += ' if (' + ($nextValid) + ') { ' + ($valid) + ' = ' + ($prevValid) + ' = true; ' + ($passingSchemas) + ' = ' + ($i) + '; }';\n    }\n  }\n  it.compositeRule = $it.compositeRule = $wasComposite;\n  out += '' + ($closingBraces) + 'if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('oneOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { passingSchemas: ' + ($passingSchemas) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match exactly one schema in oneOf\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; return false; ';\n    }\n  }\n  out += '} else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; }';\n  if (it.opts.allErrors) {\n    out += ' } ';\n  }\n  return out;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/oneOf.js?")},"./node_modules/ajv/lib/dotjs/pattern.js":
/*!***********************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/pattern.js ***!
  \***********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_pattern(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $regexp = $isData ? '(new RegExp(' + $schemaValue + '))' : it.usePattern($schema);\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'string\\') || ';\n  }\n  out += ' !' + ($regexp) + '.test(' + ($data) + ') ) {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('pattern') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { pattern:  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += '  } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match pattern \"';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + (it.util.escapeQuotes($schema));\n      }\n      out += '\"\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + (it.util.toQuotedString($schema));\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/pattern.js?")},"./node_modules/ajv/lib/dotjs/properties.js":
/*!**************************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/properties.js ***!
  \**************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_properties(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $key = 'key' + $lvl,\n    $idx = 'idx' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $dataProperties = 'dataProperties' + $lvl;\n  var $schemaKeys = Object.keys($schema || {}),\n    $pProperties = it.schema.patternProperties || {},\n    $pPropertyKeys = Object.keys($pProperties),\n    $aProperties = it.schema.additionalProperties,\n    $someProperties = $schemaKeys.length || $pPropertyKeys.length,\n    $noAdditional = $aProperties === false,\n    $additionalIsSchema = typeof $aProperties == 'object' && Object.keys($aProperties).length,\n    $removeAdditional = it.opts.removeAdditional,\n    $checkAdditional = $noAdditional || $additionalIsSchema || $removeAdditional,\n    $ownProperties = it.opts.ownProperties,\n    $currentBaseId = it.baseId;\n  var $required = it.schema.required;\n  if ($required && !(it.opts.$data && $required.$data) && $required.length < it.opts.loopRequired) var $requiredHash = it.util.toHash($required);\n  out += 'var ' + ($errs) + ' = errors;var ' + ($nextValid) + ' = true;';\n  if ($ownProperties) {\n    out += ' var ' + ($dataProperties) + ' = undefined;';\n  }\n  if ($checkAdditional) {\n    if ($ownProperties) {\n      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n    } else {\n      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n    }\n    if ($someProperties) {\n      out += ' var isAdditional' + ($lvl) + ' = !(false ';\n      if ($schemaKeys.length) {\n        if ($schemaKeys.length > 8) {\n          out += ' || validate.schema' + ($schemaPath) + '.hasOwnProperty(' + ($key) + ') ';\n        } else {\n          var arr1 = $schemaKeys;\n          if (arr1) {\n            var $propertyKey, i1 = -1,\n              l1 = arr1.length - 1;\n            while (i1 < l1) {\n              $propertyKey = arr1[i1 += 1];\n              out += ' || ' + ($key) + ' == ' + (it.util.toQuotedString($propertyKey)) + ' ';\n            }\n          }\n        }\n      }\n      if ($pPropertyKeys.length) {\n        var arr2 = $pPropertyKeys;\n        if (arr2) {\n          var $pProperty, $i = -1,\n            l2 = arr2.length - 1;\n          while ($i < l2) {\n            $pProperty = arr2[$i += 1];\n            out += ' || ' + (it.usePattern($pProperty)) + '.test(' + ($key) + ') ';\n          }\n        }\n      }\n      out += ' ); if (isAdditional' + ($lvl) + ') { ';\n    }\n    if ($removeAdditional == 'all') {\n      out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n    } else {\n      var $currentErrorPath = it.errorPath;\n      var $additionalProperty = '\\' + ' + $key + ' + \\'';\n      if (it.opts._errorDataPathProperty) {\n        it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n      }\n      if ($noAdditional) {\n        if ($removeAdditional) {\n          out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n        } else {\n          out += ' ' + ($nextValid) + ' = false; ';\n          var $currErrSchemaPath = $errSchemaPath;\n          $errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          var $$outStack = $$outStack || [];\n          $$outStack.push(out);\n          out = ''; /* istanbul ignore else */\n          if (it.createErrors !== false) {\n            out += ' { keyword: \\'' + ('additionalProperties') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { additionalProperty: \\'' + ($additionalProperty) + '\\' } ';\n            if (it.opts.messages !== false) {\n              out += ' , message: \\'';\n              if (it.opts._errorDataPathProperty) {\n                out += 'is an invalid additional property';\n              } else {\n                out += 'should NOT have additional properties';\n              }\n              out += '\\' ';\n            }\n            if (it.opts.verbose) {\n              out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n            }\n            out += ' } ';\n          } else {\n            out += ' {} ';\n          }\n          var __err = out;\n          out = $$outStack.pop();\n          if (!it.compositeRule && $breakOnError) {\n            /* istanbul ignore if */\n            if (it.async) {\n              out += ' throw new ValidationError([' + (__err) + ']); ';\n            } else {\n              out += ' validate.errors = [' + (__err) + ']; return false; ';\n            }\n          } else {\n            out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n          }\n          $errSchemaPath = $currErrSchemaPath;\n          if ($breakOnError) {\n            out += ' break; ';\n          }\n        }\n      } else if ($additionalIsSchema) {\n        if ($removeAdditional == 'failing') {\n          out += ' var ' + ($errs) + ' = errors;  ';\n          var $wasComposite = it.compositeRule;\n          it.compositeRule = $it.compositeRule = true;\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          out += ' if (!' + ($nextValid) + ') { errors = ' + ($errs) + '; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete ' + ($data) + '[' + ($key) + ']; }  ';\n          it.compositeRule = $it.compositeRule = $wasComposite;\n        } else {\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n        }\n      }\n      it.errorPath = $currentErrorPath;\n    }\n    if ($someProperties) {\n      out += ' } ';\n    }\n    out += ' }  ';\n    if ($breakOnError) {\n      out += ' if (' + ($nextValid) + ') { ';\n      $closingBraces += '}';\n    }\n  }\n  var $useDefaults = it.opts.useDefaults && !it.compositeRule;\n  if ($schemaKeys.length) {\n    var arr3 = $schemaKeys;\n    if (arr3) {\n      var $propertyKey, i3 = -1,\n        l3 = arr3.length - 1;\n      while (i3 < l3) {\n        $propertyKey = arr3[i3 += 1];\n        var $sch = $schema[$propertyKey];\n        if ((it.opts.strictKeywords ? typeof $sch == 'object' && Object.keys($sch).length > 0 : it.util.schemaHasRules($sch, it.RULES.all))) {\n          var $prop = it.util.getProperty($propertyKey),\n            $passData = $data + $prop,\n            $hasDefault = $useDefaults && $sch.default !== undefined;\n          $it.schema = $sch;\n          $it.schemaPath = $schemaPath + $prop;\n          $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($propertyKey);\n          $it.errorPath = it.util.getPath(it.errorPath, $propertyKey, it.opts.jsonPointers);\n          $it.dataPathArr[$dataNxt] = it.util.toQuotedString($propertyKey);\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            $code = it.util.varReplace($code, $nextData, $passData);\n            var $useData = $passData;\n          } else {\n            var $useData = $nextData;\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ';\n          }\n          if ($hasDefault) {\n            out += ' ' + ($code) + ' ';\n          } else {\n            if ($requiredHash && $requiredHash[$propertyKey]) {\n              out += ' if ( ' + ($useData) + ' === undefined ';\n              if ($ownProperties) {\n                out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n              }\n              out += ') { ' + ($nextValid) + ' = false; ';\n              var $currentErrorPath = it.errorPath,\n                $currErrSchemaPath = $errSchemaPath,\n                $missingProperty = it.util.escapeQuotes($propertyKey);\n              if (it.opts._errorDataPathProperty) {\n                it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n              }\n              $errSchemaPath = it.errSchemaPath + '/required';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'';\n                  if (it.opts._errorDataPathProperty) {\n                    out += 'is a required property';\n                  } else {\n                    out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) {\n                /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              $errSchemaPath = $currErrSchemaPath;\n              it.errorPath = $currentErrorPath;\n              out += ' } else { ';\n            } else {\n              if ($breakOnError) {\n                out += ' if ( ' + ($useData) + ' === undefined ';\n                if ($ownProperties) {\n                  out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n                }\n                out += ') { ' + ($nextValid) + ' = true; } else { ';\n              } else {\n                out += ' if (' + ($useData) + ' !== undefined ';\n                if ($ownProperties) {\n                  out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n                }\n                out += ' ) { ';\n              }\n            }\n            out += ' ' + ($code) + ' } ';\n          }\n        }\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($pPropertyKeys.length) {\n    var arr4 = $pPropertyKeys;\n    if (arr4) {\n      var $pProperty, i4 = -1,\n        l4 = arr4.length - 1;\n      while (i4 < l4) {\n        $pProperty = arr4[i4 += 1];\n        var $sch = $pProperties[$pProperty];\n        if ((it.opts.strictKeywords ? typeof $sch == 'object' && Object.keys($sch).length > 0 : it.util.schemaHasRules($sch, it.RULES.all))) {\n          $it.schema = $sch;\n          $it.schemaPath = it.schemaPath + '.patternProperties' + it.util.getProperty($pProperty);\n          $it.errSchemaPath = it.errSchemaPath + '/patternProperties/' + it.util.escapeFragment($pProperty);\n          if ($ownProperties) {\n            out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n          } else {\n            out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n          }\n          out += ' if (' + (it.usePattern($pProperty)) + '.test(' + ($key) + ')) { ';\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n          out += ' } ';\n          if ($breakOnError) {\n            out += ' else ' + ($nextValid) + ' = true; ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + ($nextValid) + ') { ';\n            $closingBraces += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/properties.js?")},"./node_modules/ajv/lib/dotjs/propertyNames.js":
/*!*****************************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/propertyNames.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_propertyNames(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  out += 'var ' + ($errs) + ' = errors;';\n  if ((it.opts.strictKeywords ? typeof $schema == 'object' && Object.keys($schema).length > 0 : it.util.schemaHasRules($schema, it.RULES.all))) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    var $key = 'key' + $lvl,\n      $idx = 'idx' + $lvl,\n      $i = 'i' + $lvl,\n      $invalidName = '\\' + ' + $key + ' + \\'',\n      $dataNxt = $it.dataLevel = it.dataLevel + 1,\n      $nextData = 'data' + $dataNxt,\n      $dataProperties = 'dataProperties' + $lvl,\n      $ownProperties = it.opts.ownProperties,\n      $currentBaseId = it.baseId;\n    if ($ownProperties) {\n      out += ' var ' + ($dataProperties) + ' = undefined; ';\n    }\n    if ($ownProperties) {\n      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n    } else {\n      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n    }\n    out += ' var startErrs' + ($lvl) + ' = errors; ';\n    var $passData = $key;\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' if (!' + ($nextValid) + ') { for (var ' + ($i) + '=startErrs' + ($lvl) + '; ' + ($i) + '<errors; ' + ($i) + '++) { vErrors[' + ($i) + '].propertyName = ' + ($key) + '; }   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('propertyNames') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { propertyName: \\'' + ($invalidName) + '\\' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'property name \\\\\\'' + ($invalidName) + '\\\\\\' is invalid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    if ($breakOnError) {\n      out += ' break; ';\n    }\n    out += ' } }';\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/propertyNames.js?")},"./node_modules/ajv/lib/dotjs/ref.js":
/*!*******************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/ref.js ***!
  \*******************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_ref(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $async, $refCode;\n  if ($schema == '#' || $schema == '#/') {\n    if (it.isRoot) {\n      $async = it.async;\n      $refCode = 'validate';\n    } else {\n      $async = it.root.schema.$async === true;\n      $refCode = 'root.refVal[0]';\n    }\n  } else {\n    var $refVal = it.resolveRef(it.baseId, $schema, it.isRoot);\n    if ($refVal === undefined) {\n      var $message = it.MissingRefError.message(it.baseId, $schema);\n      if (it.opts.missingRefs == 'fail') {\n        it.logger.error($message);\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('$ref') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { ref: \\'' + (it.util.escapeQuotes($schema)) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'can\\\\\\'t resolve reference ' + (it.util.escapeQuotes($schema)) + '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: ' + (it.util.toQuotedString($schema)) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        if ($breakOnError) {\n          out += ' if (false) { ';\n        }\n      } else if (it.opts.missingRefs == 'ignore') {\n        it.logger.warn($message);\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n      } else {\n        throw new it.MissingRefError(it.baseId, $schema, $message);\n      }\n    } else if ($refVal.inline) {\n      var $it = it.util.copy(it);\n      $it.level++;\n      var $nextValid = 'valid' + $it.level;\n      $it.schema = $refVal.schema;\n      $it.schemaPath = '';\n      $it.errSchemaPath = $schema;\n      var $code = it.validate($it).replace(/validate\\.schema/g, $refVal.code);\n      out += ' ' + ($code) + ' ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n      }\n    } else {\n      $async = $refVal.$async === true || (it.async && $refVal.$async !== false);\n      $refCode = $refVal.code;\n    }\n  }\n  if ($refCode) {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    if (it.opts.passContext) {\n      out += ' ' + ($refCode) + '.call(this, ';\n    } else {\n      out += ' ' + ($refCode) + '( ';\n    }\n    out += ' ' + ($data) + ', (dataPath || \\'\\')';\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + (it.errorPath);\n    }\n    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ', rootData)  ';\n    var __callValidate = out;\n    out = $$outStack.pop();\n    if ($async) {\n      if (!it.async) throw new Error('async schema referenced by sync schema');\n      if ($breakOnError) {\n        out += ' var ' + ($valid) + '; ';\n      }\n      out += ' try { await ' + (__callValidate) + '; ';\n      if ($breakOnError) {\n        out += ' ' + ($valid) + ' = true; ';\n      }\n      out += ' } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; ';\n      if ($breakOnError) {\n        out += ' ' + ($valid) + ' = false; ';\n      }\n      out += ' } ';\n      if ($breakOnError) {\n        out += ' if (' + ($valid) + ') { ';\n      }\n    } else {\n      out += ' if (!' + (__callValidate) + ') { if (vErrors === null) vErrors = ' + ($refCode) + '.errors; else vErrors = vErrors.concat(' + ($refCode) + '.errors); errors = vErrors.length; } ';\n      if ($breakOnError) {\n        out += ' else { ';\n      }\n    }\n  }\n  return out;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/ref.js?")},"./node_modules/ajv/lib/dotjs/required.js":
/*!************************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/required.js ***!
  \************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_required(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $vSchema = 'schema' + $lvl;\n  if (!$isData) {\n    if ($schema.length < it.opts.loopRequired && it.schema.properties && Object.keys(it.schema.properties).length) {\n      var $required = [];\n      var arr1 = $schema;\n      if (arr1) {\n        var $property, i1 = -1,\n          l1 = arr1.length - 1;\n        while (i1 < l1) {\n          $property = arr1[i1 += 1];\n          var $propertySch = it.schema.properties[$property];\n          if (!($propertySch && (it.opts.strictKeywords ? typeof $propertySch == 'object' && Object.keys($propertySch).length > 0 : it.util.schemaHasRules($propertySch, it.RULES.all)))) {\n            $required[$required.length] = $property;\n          }\n        }\n      }\n    } else {\n      var $required = $schema;\n    }\n  }\n  if ($isData || $required.length) {\n    var $currentErrorPath = it.errorPath,\n      $loopRequired = $isData || $required.length >= it.opts.loopRequired,\n      $ownProperties = it.opts.ownProperties;\n    if ($breakOnError) {\n      out += ' var missing' + ($lvl) + '; ';\n      if ($loopRequired) {\n        if (!$isData) {\n          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';\n        }\n        var $i = 'i' + $lvl,\n          $propertyPath = 'schema' + $lvl + '[' + $i + ']',\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);\n        }\n        out += ' var ' + ($valid) + ' = true; ';\n        if ($isData) {\n          out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';\n        }\n        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { ' + ($valid) + ' = ' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] !== undefined ';\n        if ($ownProperties) {\n          out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + ']) ';\n        }\n        out += '; if (!' + ($valid) + ') break; } ';\n        if ($isData) {\n          out += '  }  ';\n        }\n        out += '  if (!' + ($valid) + ') {   ';\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else { ';\n      } else {\n        out += ' if ( ';\n        var arr2 = $required;\n        if (arr2) {\n          var $propertyKey, $i = -1,\n            l2 = arr2.length - 1;\n          while ($i < l2) {\n            $propertyKey = arr2[$i += 1];\n            if ($i) {\n              out += ' || ';\n            }\n            var $prop = it.util.getProperty($propertyKey),\n              $useData = $data + $prop;\n            out += ' ( ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? $propertyKey : $prop)) + ') ) ';\n          }\n        }\n        out += ') {  ';\n        var $propertyPath = 'missing' + $lvl,\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;\n        }\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else { ';\n      }\n    } else {\n      if ($loopRequired) {\n        if (!$isData) {\n          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';\n        }\n        var $i = 'i' + $lvl,\n          $propertyPath = 'schema' + $lvl + '[' + $i + ']',\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);\n        }\n        if ($isData) {\n          out += ' if (' + ($vSchema) + ' && !Array.isArray(' + ($vSchema) + ')) {  var err =   '; /* istanbul ignore else */\n          if (it.createErrors !== false) {\n            out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n            if (it.opts.messages !== false) {\n              out += ' , message: \\'';\n              if (it.opts._errorDataPathProperty) {\n                out += 'is a required property';\n              } else {\n                out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n              }\n              out += '\\' ';\n            }\n            if (it.opts.verbose) {\n              out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n            }\n            out += ' } ';\n          } else {\n            out += ' {} ';\n          }\n          out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else if (' + ($vSchema) + ' !== undefined) { ';\n        }\n        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { if (' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] === undefined ';\n        if ($ownProperties) {\n          out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + ']) ';\n        }\n        out += ') {  var err =   '; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } } ';\n        if ($isData) {\n          out += '  }  ';\n        }\n      } else {\n        var arr3 = $required;\n        if (arr3) {\n          var $propertyKey, i3 = -1,\n            l3 = arr3.length - 1;\n          while (i3 < l3) {\n            $propertyKey = arr3[i3 += 1];\n            var $prop = it.util.getProperty($propertyKey),\n              $missingProperty = it.util.escapeQuotes($propertyKey),\n              $useData = $data + $prop;\n            if (it.opts._errorDataPathProperty) {\n              it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n            }\n            out += ' if ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') {  var err =   '; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'';\n                if (it.opts._errorDataPathProperty) {\n                  out += 'is a required property';\n                } else {\n                  out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n                }\n                out += '\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';\n          }\n        }\n      }\n    }\n    it.errorPath = $currentErrorPath;\n  } else if ($breakOnError) {\n    out += ' if (true) {';\n  }\n  return out;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/required.js?")},"./node_modules/ajv/lib/dotjs/uniqueItems.js":
/*!***************************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/uniqueItems.js ***!
  \***************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_uniqueItems(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (($schema || $isData) && it.opts.uniqueItems !== false) {\n    if ($isData) {\n      out += ' var ' + ($valid) + '; if (' + ($schemaValue) + ' === false || ' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \\'boolean\\') ' + ($valid) + ' = false; else { ';\n    }\n    out += ' var i = ' + ($data) + '.length , ' + ($valid) + ' = true , j; if (i > 1) { ';\n    var $itemType = it.schema.items && it.schema.items.type,\n      $typeIsArray = Array.isArray($itemType);\n    if (!$itemType || $itemType == 'object' || $itemType == 'array' || ($typeIsArray && ($itemType.indexOf('object') >= 0 || $itemType.indexOf('array') >= 0))) {\n      out += ' outer: for (;i--;) { for (j = i; j--;) { if (equal(' + ($data) + '[i], ' + ($data) + '[j])) { ' + ($valid) + ' = false; break outer; } } } ';\n    } else {\n      out += ' var itemIndices = {}, item; for (;i--;) { var item = ' + ($data) + '[i]; ';\n      var $method = 'checkDataType' + ($typeIsArray ? 's' : '');\n      out += ' if (' + (it.util[$method]($itemType, 'item', true)) + ') continue; ';\n      if ($typeIsArray) {\n        out += ' if (typeof item == \\'string\\') item = \\'\"\\' + item; ';\n      }\n      out += ' if (typeof itemIndices[item] == \\'number\\') { ' + ($valid) + ' = false; j = itemIndices[item]; break; } itemIndices[item] = i; } ';\n    }\n    out += ' } ';\n    if ($isData) {\n      out += '  }  ';\n    }\n    out += ' if (!' + ($valid) + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('uniqueItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { i: i, j: j } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT have duplicate items (items ## \\' + j + \\' and \\' + i + \\' are identical)\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema:  ';\n        if ($isData) {\n          out += 'validate.schema' + ($schemaPath);\n        } else {\n          out += '' + ($schema);\n        }\n        out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/uniqueItems.js?")},"./node_modules/ajv/lib/dotjs/validate.js":
/*!************************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/validate.js ***!
  \************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_validate(it, $keyword, $ruleType) {\n  var out = '';\n  var $async = it.schema.$async === true,\n    $refKeywords = it.util.schemaHasRulesExcept(it.schema, it.RULES.all, '$ref'),\n    $id = it.self._getId(it.schema);\n  if (it.opts.strictKeywords) {\n    var $unknownKwd = it.util.schemaUnknownRules(it.schema, it.RULES.keywords);\n    if ($unknownKwd) {\n      var $keywordsMsg = 'unknown keyword: ' + $unknownKwd;\n      if (it.opts.strictKeywords === 'log') it.logger.warn($keywordsMsg);\n      else throw new Error($keywordsMsg);\n    }\n  }\n  if (it.isTop) {\n    out += ' var validate = ';\n    if ($async) {\n      it.async = true;\n      out += 'async ';\n    }\n    out += 'function(data, dataPath, parentData, parentDataProperty, rootData) { \\'use strict\\'; ';\n    if ($id && (it.opts.sourceCode || it.opts.processCode)) {\n      out += ' ' + ('/\\*# sourceURL=' + $id + ' */') + ' ';\n    }\n  }\n  if (typeof it.schema == 'boolean' || !($refKeywords || it.schema.$ref)) {\n    var $keyword = 'false schema';\n    var $lvl = it.level;\n    var $dataLvl = it.dataLevel;\n    var $schema = it.schema[$keyword];\n    var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n    var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n    var $breakOnError = !it.opts.allErrors;\n    var $errorKeyword;\n    var $data = 'data' + ($dataLvl || '');\n    var $valid = 'valid' + $lvl;\n    if (it.schema === false) {\n      if (it.isTop) {\n        $breakOnError = true;\n      } else {\n        out += ' var ' + ($valid) + ' = false; ';\n      }\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'false schema') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'boolean schema is false\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n    } else {\n      if (it.isTop) {\n        if ($async) {\n          out += ' return data; ';\n        } else {\n          out += ' validate.errors = null; return true; ';\n        }\n      } else {\n        out += ' var ' + ($valid) + ' = true; ';\n      }\n    }\n    if (it.isTop) {\n      out += ' }; return validate; ';\n    }\n    return out;\n  }\n  if (it.isTop) {\n    var $top = it.isTop,\n      $lvl = it.level = 0,\n      $dataLvl = it.dataLevel = 0,\n      $data = 'data';\n    it.rootId = it.resolve.fullPath(it.self._getId(it.root.schema));\n    it.baseId = it.baseId || it.rootId;\n    delete it.isTop;\n    it.dataPathArr = [undefined];\n    if (it.schema.default !== undefined && it.opts.useDefaults && it.opts.strictDefaults) {\n      var $defaultMsg = 'default is ignored in the schema root';\n      if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);\n      else throw new Error($defaultMsg);\n    }\n    out += ' var vErrors = null; ';\n    out += ' var errors = 0;     ';\n    out += ' if (rootData === undefined) rootData = data; ';\n  } else {\n    var $lvl = it.level,\n      $dataLvl = it.dataLevel,\n      $data = 'data' + ($dataLvl || '');\n    if ($id) it.baseId = it.resolve.url(it.baseId, $id);\n    if ($async && !it.async) throw new Error('async schema in sync schema');\n    out += ' var errs_' + ($lvl) + ' = errors;';\n  }\n  var $valid = 'valid' + $lvl,\n    $breakOnError = !it.opts.allErrors,\n    $closingBraces1 = '',\n    $closingBraces2 = '';\n  var $errorKeyword;\n  var $typeSchema = it.schema.type,\n    $typeIsArray = Array.isArray($typeSchema);\n  if ($typeSchema && it.opts.nullable && it.schema.nullable === true) {\n    if ($typeIsArray) {\n      if ($typeSchema.indexOf('null') == -1) $typeSchema = $typeSchema.concat('null');\n    } else if ($typeSchema != 'null') {\n      $typeSchema = [$typeSchema, 'null'];\n      $typeIsArray = true;\n    }\n  }\n  if ($typeIsArray && $typeSchema.length == 1) {\n    $typeSchema = $typeSchema[0];\n    $typeIsArray = false;\n  }\n  if (it.schema.$ref && $refKeywords) {\n    if (it.opts.extendRefs == 'fail') {\n      throw new Error('$ref: validation keywords used in schema at path \"' + it.errSchemaPath + '\" (see option extendRefs)');\n    } else if (it.opts.extendRefs !== true) {\n      $refKeywords = false;\n      it.logger.warn('$ref: keywords ignored in schema at path \"' + it.errSchemaPath + '\"');\n    }\n  }\n  if (it.schema.$comment && it.opts.$comment) {\n    out += ' ' + (it.RULES.all.$comment.code(it, '$comment'));\n  }\n  if ($typeSchema) {\n    if (it.opts.coerceTypes) {\n      var $coerceToTypes = it.util.coerceToTypes(it.opts.coerceTypes, $typeSchema);\n    }\n    var $rulesGroup = it.RULES.types[$typeSchema];\n    if ($coerceToTypes || $typeIsArray || $rulesGroup === true || ($rulesGroup && !$shouldUseGroup($rulesGroup))) {\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type';\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type',\n        $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';\n      out += ' if (' + (it.util[$method]($typeSchema, $data, true)) + ') { ';\n      if ($coerceToTypes) {\n        var $dataType = 'dataType' + $lvl,\n          $coerced = 'coerced' + $lvl;\n        out += ' var ' + ($dataType) + ' = typeof ' + ($data) + '; ';\n        if (it.opts.coerceTypes == 'array') {\n          out += ' if (' + ($dataType) + ' == \\'object\\' && Array.isArray(' + ($data) + ')) ' + ($dataType) + ' = \\'array\\'; ';\n        }\n        out += ' var ' + ($coerced) + ' = undefined; ';\n        var $bracesCoercion = '';\n        var arr1 = $coerceToTypes;\n        if (arr1) {\n          var $type, $i = -1,\n            l1 = arr1.length - 1;\n          while ($i < l1) {\n            $type = arr1[$i += 1];\n            if ($i) {\n              out += ' if (' + ($coerced) + ' === undefined) { ';\n              $bracesCoercion += '}';\n            }\n            if (it.opts.coerceTypes == 'array' && $type != 'array') {\n              out += ' if (' + ($dataType) + ' == \\'array\\' && ' + ($data) + '.length == 1) { ' + ($coerced) + ' = ' + ($data) + ' = ' + ($data) + '[0]; ' + ($dataType) + ' = typeof ' + ($data) + ';  } ';\n            }\n            if ($type == 'string') {\n              out += ' if (' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\') ' + ($coerced) + ' = \\'\\' + ' + ($data) + '; else if (' + ($data) + ' === null) ' + ($coerced) + ' = \\'\\'; ';\n            } else if ($type == 'number' || $type == 'integer') {\n              out += ' if (' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' === null || (' + ($dataType) + ' == \\'string\\' && ' + ($data) + ' && ' + ($data) + ' == +' + ($data) + ' ';\n              if ($type == 'integer') {\n                out += ' && !(' + ($data) + ' % 1)';\n              }\n              out += ')) ' + ($coerced) + ' = +' + ($data) + '; ';\n            } else if ($type == 'boolean') {\n              out += ' if (' + ($data) + ' === \\'false\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === null) ' + ($coerced) + ' = false; else if (' + ($data) + ' === \\'true\\' || ' + ($data) + ' === 1) ' + ($coerced) + ' = true; ';\n            } else if ($type == 'null') {\n              out += ' if (' + ($data) + ' === \\'\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === false) ' + ($coerced) + ' = null; ';\n            } else if (it.opts.coerceTypes == 'array' && $type == 'array') {\n              out += ' if (' + ($dataType) + ' == \\'string\\' || ' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' == null) ' + ($coerced) + ' = [' + ($data) + ']; ';\n            }\n          }\n        }\n        out += ' ' + ($bracesCoercion) + ' if (' + ($coerced) + ' === undefined) {   ';\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else {  ';\n        var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n          $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n        out += ' ' + ($data) + ' = ' + ($coerced) + '; ';\n        if (!$dataLvl) {\n          out += 'if (' + ($parentData) + ' !== undefined)';\n        }\n        out += ' ' + ($parentData) + '[' + ($parentDataProperty) + '] = ' + ($coerced) + '; } ';\n      } else {\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n      }\n      out += ' } ';\n    }\n  }\n  if (it.schema.$ref && !$refKeywords) {\n    out += ' ' + (it.RULES.all.$ref.code(it, '$ref')) + ' ';\n    if ($breakOnError) {\n      out += ' } if (errors === ';\n      if ($top) {\n        out += '0';\n      } else {\n        out += 'errs_' + ($lvl);\n      }\n      out += ') { ';\n      $closingBraces2 += '}';\n    }\n  } else {\n    var arr2 = it.RULES;\n    if (arr2) {\n      var $rulesGroup, i2 = -1,\n        l2 = arr2.length - 1;\n      while (i2 < l2) {\n        $rulesGroup = arr2[i2 += 1];\n        if ($shouldUseGroup($rulesGroup)) {\n          if ($rulesGroup.type) {\n            out += ' if (' + (it.util.checkDataType($rulesGroup.type, $data)) + ') { ';\n          }\n          if (it.opts.useDefaults) {\n            if ($rulesGroup.type == 'object' && it.schema.properties) {\n              var $schema = it.schema.properties,\n                $schemaKeys = Object.keys($schema);\n              var arr3 = $schemaKeys;\n              if (arr3) {\n                var $propertyKey, i3 = -1,\n                  l3 = arr3.length - 1;\n                while (i3 < l3) {\n                  $propertyKey = arr3[i3 += 1];\n                  var $sch = $schema[$propertyKey];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + it.util.getProperty($propertyKey);\n                    if (it.compositeRule) {\n                      if (it.opts.strictDefaults) {\n                        var $defaultMsg = 'default is ignored for: ' + $passData;\n                        if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);\n                        else throw new Error($defaultMsg);\n                      }\n                    } else {\n                      out += ' if (' + ($passData) + ' === undefined ';\n                      if (it.opts.useDefaults == 'empty') {\n                        out += ' || ' + ($passData) + ' === null || ' + ($passData) + ' === \\'\\' ';\n                      }\n                      out += ' ) ' + ($passData) + ' = ';\n                      if (it.opts.useDefaults == 'shared') {\n                        out += ' ' + (it.useDefault($sch.default)) + ' ';\n                      } else {\n                        out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                      }\n                      out += '; ';\n                    }\n                  }\n                }\n              }\n            } else if ($rulesGroup.type == 'array' && Array.isArray(it.schema.items)) {\n              var arr4 = it.schema.items;\n              if (arr4) {\n                var $sch, $i = -1,\n                  l4 = arr4.length - 1;\n                while ($i < l4) {\n                  $sch = arr4[$i += 1];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + '[' + $i + ']';\n                    if (it.compositeRule) {\n                      if (it.opts.strictDefaults) {\n                        var $defaultMsg = 'default is ignored for: ' + $passData;\n                        if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);\n                        else throw new Error($defaultMsg);\n                      }\n                    } else {\n                      out += ' if (' + ($passData) + ' === undefined ';\n                      if (it.opts.useDefaults == 'empty') {\n                        out += ' || ' + ($passData) + ' === null || ' + ($passData) + ' === \\'\\' ';\n                      }\n                      out += ' ) ' + ($passData) + ' = ';\n                      if (it.opts.useDefaults == 'shared') {\n                        out += ' ' + (it.useDefault($sch.default)) + ' ';\n                      } else {\n                        out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                      }\n                      out += '; ';\n                    }\n                  }\n                }\n              }\n            }\n          }\n          var arr5 = $rulesGroup.rules;\n          if (arr5) {\n            var $rule, i5 = -1,\n              l5 = arr5.length - 1;\n            while (i5 < l5) {\n              $rule = arr5[i5 += 1];\n              if ($shouldUseRule($rule)) {\n                var $code = $rule.code(it, $rule.keyword, $rulesGroup.type);\n                if ($code) {\n                  out += ' ' + ($code) + ' ';\n                  if ($breakOnError) {\n                    $closingBraces1 += '}';\n                  }\n                }\n              }\n            }\n          }\n          if ($breakOnError) {\n            out += ' ' + ($closingBraces1) + ' ';\n            $closingBraces1 = '';\n          }\n          if ($rulesGroup.type) {\n            out += ' } ';\n            if ($typeSchema && $typeSchema === $rulesGroup.type && !$coerceToTypes) {\n              out += ' else { ';\n              var $schemaPath = it.schemaPath + '.type',\n                $errSchemaPath = it.errSchemaPath + '/type';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n                if ($typeIsArray) {\n                  out += '' + ($typeSchema.join(\",\"));\n                } else {\n                  out += '' + ($typeSchema);\n                }\n                out += '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should be ';\n                  if ($typeIsArray) {\n                    out += '' + ($typeSchema.join(\",\"));\n                  } else {\n                    out += '' + ($typeSchema);\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) {\n                /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              out += ' } ';\n            }\n          }\n          if ($breakOnError) {\n            out += ' if (errors === ';\n            if ($top) {\n              out += '0';\n            } else {\n              out += 'errs_' + ($lvl);\n            }\n            out += ') { ';\n            $closingBraces2 += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces2) + ' ';\n  }\n  if ($top) {\n    if ($async) {\n      out += ' if (errors === 0) return data;           ';\n      out += ' else throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; ';\n      out += ' return errors === 0;       ';\n    }\n    out += ' }; return validate;';\n  } else {\n    out += ' var ' + ($valid) + ' = errors === errs_' + ($lvl) + ';';\n  }\n  out = it.util.cleanUpCode(out);\n  if ($top) {\n    out = it.util.finalCleanUpCode(out, $async);\n  }\n\n  function $shouldUseGroup($rulesGroup) {\n    var rules = $rulesGroup.rules;\n    for (var i = 0; i < rules.length; i++)\n      if ($shouldUseRule(rules[i])) return true;\n  }\n\n  function $shouldUseRule($rule) {\n    return it.schema[$rule.keyword] !== undefined || ($rule.implements && $ruleImplementsSomeKeyword($rule));\n  }\n\n  function $ruleImplementsSomeKeyword($rule) {\n    var impl = $rule.implements;\n    for (var i = 0; i < impl.length; i++)\n      if (it.schema[impl[i]] !== undefined) return true;\n  }\n  return out;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/dotjs/validate.js?")},"./node_modules/ajv/lib/keyword.js":
/*!*****************************************!*\
  !*** ./node_modules/ajv/lib/keyword.js ***!
  \*****************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar IDENTIFIER = /^[a-z_$][a-z0-9_$-]*$/i;\nvar customRuleCode = __webpack_require__(/*! ./dotjs/custom */ \"./node_modules/ajv/lib/dotjs/custom.js\");\nvar definitionSchema = __webpack_require__(/*! ./definition_schema */ \"./node_modules/ajv/lib/definition_schema.js\");\n\nmodule.exports = {\n  add: addKeyword,\n  get: getKeyword,\n  remove: removeKeyword,\n  validate: validateKeyword\n};\n\n\n/**\n * Define custom keyword\n * @this  Ajv\n * @param {String} keyword custom keyword, should be unique (including different from all standard, custom and macro keywords).\n * @param {Object} definition keyword definition object with properties `type` (type(s) which the keyword applies to), `validate` or `compile`.\n * @return {Ajv} this for method chaining\n */\nfunction addKeyword(keyword, definition) {\n  /* jshint validthis: true */\n  /* eslint no-shadow: 0 */\n  var RULES = this.RULES;\n  if (RULES.keywords[keyword])\n    throw new Error('Keyword ' + keyword + ' is already defined');\n\n  if (!IDENTIFIER.test(keyword))\n    throw new Error('Keyword ' + keyword + ' is not a valid identifier');\n\n  if (definition) {\n    this.validateKeyword(definition, true);\n\n    var dataType = definition.type;\n    if (Array.isArray(dataType)) {\n      for (var i=0; i<dataType.length; i++)\n        _addRule(keyword, dataType[i], definition);\n    } else {\n      _addRule(keyword, dataType, definition);\n    }\n\n    var metaSchema = definition.metaSchema;\n    if (metaSchema) {\n      if (definition.$data && this._opts.$data) {\n        metaSchema = {\n          anyOf: [\n            metaSchema,\n            { '$ref': 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#' }\n          ]\n        };\n      }\n      definition.validateSchema = this.compile(metaSchema, true);\n    }\n  }\n\n  RULES.keywords[keyword] = RULES.all[keyword] = true;\n\n\n  function _addRule(keyword, dataType, definition) {\n    var ruleGroup;\n    for (var i=0; i<RULES.length; i++) {\n      var rg = RULES[i];\n      if (rg.type == dataType) {\n        ruleGroup = rg;\n        break;\n      }\n    }\n\n    if (!ruleGroup) {\n      ruleGroup = { type: dataType, rules: [] };\n      RULES.push(ruleGroup);\n    }\n\n    var rule = {\n      keyword: keyword,\n      definition: definition,\n      custom: true,\n      code: customRuleCode,\n      implements: definition.implements\n    };\n    ruleGroup.rules.push(rule);\n    RULES.custom[keyword] = rule;\n  }\n\n  return this;\n}\n\n\n/**\n * Get keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Object|Boolean} custom keyword definition, `true` if it is a predefined keyword, `false` otherwise.\n */\nfunction getKeyword(keyword) {\n  /* jshint validthis: true */\n  var rule = this.RULES.custom[keyword];\n  return rule ? rule.definition : this.RULES.keywords[keyword] || false;\n}\n\n\n/**\n * Remove keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Ajv} this for method chaining\n */\nfunction removeKeyword(keyword) {\n  /* jshint validthis: true */\n  var RULES = this.RULES;\n  delete RULES.keywords[keyword];\n  delete RULES.all[keyword];\n  delete RULES.custom[keyword];\n  for (var i=0; i<RULES.length; i++) {\n    var rules = RULES[i].rules;\n    for (var j=0; j<rules.length; j++) {\n      if (rules[j].keyword == keyword) {\n        rules.splice(j, 1);\n        break;\n      }\n    }\n  }\n  return this;\n}\n\n\n/**\n * Validate keyword definition\n * @this  Ajv\n * @param {Object} definition keyword definition object.\n * @param {Boolean} throwError true to throw exception if definition is invalid\n * @return {boolean} validation result\n */\nfunction validateKeyword(definition, throwError) {\n  validateKeyword.errors = null;\n  var v = this._validateKeyword = this._validateKeyword\n                                  || this.compile(definitionSchema, true);\n\n  if (v(definition)) return true;\n  validateKeyword.errors = v.errors;\n  if (throwError)\n    throw new Error('custom keyword definition is invalid: '  + this.errorsText(v.errors));\n  else\n    return false;\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/keyword.js?")},"./node_modules/ajv/lib/refs/data.json":
/*!*********************************************!*\
  !*** ./node_modules/ajv/lib/refs/data.json ***!
  \*********************************************/
/*! exports provided: $schema, $id, description, type, required, properties, additionalProperties, default */function(module){eval('module.exports = JSON.parse("{\\"$schema\\":\\"http://json-schema.org/draft-07/schema#\\",\\"$id\\":\\"https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#\\",\\"description\\":\\"Meta-schema for $data reference (JSON Schema extension proposal)\\",\\"type\\":\\"object\\",\\"required\\":[\\"$data\\"],\\"properties\\":{\\"$data\\":{\\"type\\":\\"string\\",\\"anyOf\\":[{\\"format\\":\\"relative-json-pointer\\"},{\\"format\\":\\"json-pointer\\"}]}},\\"additionalProperties\\":false}");\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/refs/data.json?')},"./node_modules/ajv/lib/refs/json-schema-draft-07.json":
/*!*************************************************************!*\
  !*** ./node_modules/ajv/lib/refs/json-schema-draft-07.json ***!
  \*************************************************************/
/*! exports provided: $schema, $id, title, definitions, type, properties, default */function(module){eval('module.exports = JSON.parse("{\\"$schema\\":\\"http://json-schema.org/draft-07/schema#\\",\\"$id\\":\\"http://json-schema.org/draft-07/schema#\\",\\"title\\":\\"Core schema meta-schema\\",\\"definitions\\":{\\"schemaArray\\":{\\"type\\":\\"array\\",\\"minItems\\":1,\\"items\\":{\\"$ref\\":\\"#\\"}},\\"nonNegativeInteger\\":{\\"type\\":\\"integer\\",\\"minimum\\":0},\\"nonNegativeIntegerDefault0\\":{\\"allOf\\":[{\\"$ref\\":\\"#/definitions/nonNegativeInteger\\"},{\\"default\\":0}]},\\"simpleTypes\\":{\\"enum\\":[\\"array\\",\\"boolean\\",\\"integer\\",\\"null\\",\\"number\\",\\"object\\",\\"string\\"]},\\"stringArray\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"string\\"},\\"uniqueItems\\":true,\\"default\\":[]}},\\"type\\":[\\"object\\",\\"boolean\\"],\\"properties\\":{\\"$id\\":{\\"type\\":\\"string\\",\\"format\\":\\"uri-reference\\"},\\"$schema\\":{\\"type\\":\\"string\\",\\"format\\":\\"uri\\"},\\"$ref\\":{\\"type\\":\\"string\\",\\"format\\":\\"uri-reference\\"},\\"$comment\\":{\\"type\\":\\"string\\"},\\"title\\":{\\"type\\":\\"string\\"},\\"description\\":{\\"type\\":\\"string\\"},\\"default\\":true,\\"readOnly\\":{\\"type\\":\\"boolean\\",\\"default\\":false},\\"examples\\":{\\"type\\":\\"array\\",\\"items\\":true},\\"multipleOf\\":{\\"type\\":\\"number\\",\\"exclusiveMinimum\\":0},\\"maximum\\":{\\"type\\":\\"number\\"},\\"exclusiveMaximum\\":{\\"type\\":\\"number\\"},\\"minimum\\":{\\"type\\":\\"number\\"},\\"exclusiveMinimum\\":{\\"type\\":\\"number\\"},\\"maxLength\\":{\\"$ref\\":\\"#/definitions/nonNegativeInteger\\"},\\"minLength\\":{\\"$ref\\":\\"#/definitions/nonNegativeIntegerDefault0\\"},\\"pattern\\":{\\"type\\":\\"string\\",\\"format\\":\\"regex\\"},\\"additionalItems\\":{\\"$ref\\":\\"#\\"},\\"items\\":{\\"anyOf\\":[{\\"$ref\\":\\"#\\"},{\\"$ref\\":\\"#/definitions/schemaArray\\"}],\\"default\\":true},\\"maxItems\\":{\\"$ref\\":\\"#/definitions/nonNegativeInteger\\"},\\"minItems\\":{\\"$ref\\":\\"#/definitions/nonNegativeIntegerDefault0\\"},\\"uniqueItems\\":{\\"type\\":\\"boolean\\",\\"default\\":false},\\"contains\\":{\\"$ref\\":\\"#\\"},\\"maxProperties\\":{\\"$ref\\":\\"#/definitions/nonNegativeInteger\\"},\\"minProperties\\":{\\"$ref\\":\\"#/definitions/nonNegativeIntegerDefault0\\"},\\"required\\":{\\"$ref\\":\\"#/definitions/stringArray\\"},\\"additionalProperties\\":{\\"$ref\\":\\"#\\"},\\"definitions\\":{\\"type\\":\\"object\\",\\"additionalProperties\\":{\\"$ref\\":\\"#\\"},\\"default\\":{}},\\"properties\\":{\\"type\\":\\"object\\",\\"additionalProperties\\":{\\"$ref\\":\\"#\\"},\\"default\\":{}},\\"patternProperties\\":{\\"type\\":\\"object\\",\\"additionalProperties\\":{\\"$ref\\":\\"#\\"},\\"propertyNames\\":{\\"format\\":\\"regex\\"},\\"default\\":{}},\\"dependencies\\":{\\"type\\":\\"object\\",\\"additionalProperties\\":{\\"anyOf\\":[{\\"$ref\\":\\"#\\"},{\\"$ref\\":\\"#/definitions/stringArray\\"}]}},\\"propertyNames\\":{\\"$ref\\":\\"#\\"},\\"const\\":true,\\"enum\\":{\\"type\\":\\"array\\",\\"items\\":true,\\"minItems\\":1,\\"uniqueItems\\":true},\\"type\\":{\\"anyOf\\":[{\\"$ref\\":\\"#/definitions/simpleTypes\\"},{\\"type\\":\\"array\\",\\"items\\":{\\"$ref\\":\\"#/definitions/simpleTypes\\"},\\"minItems\\":1,\\"uniqueItems\\":true}]},\\"format\\":{\\"type\\":\\"string\\"},\\"contentMediaType\\":{\\"type\\":\\"string\\"},\\"contentEncoding\\":{\\"type\\":\\"string\\"},\\"if\\":{\\"$ref\\":\\"#\\"},\\"then\\":{\\"$ref\\":\\"#\\"},\\"else\\":{\\"$ref\\":\\"#\\"},\\"allOf\\":{\\"$ref\\":\\"#/definitions/schemaArray\\"},\\"anyOf\\":{\\"$ref\\":\\"#/definitions/schemaArray\\"},\\"oneOf\\":{\\"$ref\\":\\"#/definitions/schemaArray\\"},\\"not\\":{\\"$ref\\":\\"#\\"}},\\"default\\":true}");\n\n//# sourceURL=webpack://preql/./node_modules/ajv/lib/refs/json-schema-draft-07.json?')},"./node_modules/fast-deep-equal/index.js":
/*!***********************************************!*\
  !*** ./node_modules/fast-deep-equal/index.js ***!
  \***********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a!==a && b!==b;\n};\n\n\n//# sourceURL=webpack://preql/./node_modules/fast-deep-equal/index.js?")},"./node_modules/fast-json-stable-stringify/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/fast-json-stable-stringify/index.js ***!
  \**********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nmodule.exports = function (data, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (node) {\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        if (node === undefined) return;\n        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n        if (typeof node !== 'object') return JSON.stringify(node);\n\n        var i, out;\n        if (Array.isArray(node)) {\n            out = '[';\n            for (i = 0; i < node.length; i++) {\n                if (i) out += ',';\n                out += stringify(node[i]) || 'null';\n            }\n            return out + ']';\n        }\n\n        if (node === null) return 'null';\n\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) return JSON.stringify('__cycle__');\n            throw new TypeError('Converting circular structure to JSON');\n        }\n\n        var seenIndex = seen.push(node) - 1;\n        var keys = Object.keys(node).sort(cmp && cmp(node));\n        out = '';\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = stringify(node[key]);\n\n            if (!value) continue;\n            if (out) out += ',';\n            out += JSON.stringify(key) + ':' + value;\n        }\n        seen.splice(seenIndex, 1);\n        return '{' + out + '}';\n    })(data);\n};\n\n\n//# sourceURL=webpack://preql/./node_modules/fast-json-stable-stringify/index.js?")},"./node_modules/json-schema-traverse/index.js":
/*!****************************************************!*\
  !*** ./node_modules/json-schema-traverse/index.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n\n\n//# sourceURL=webpack://preql/./node_modules/json-schema-traverse/index.js?")},"./node_modules/uri-js/dist/es5/uri.all.js":
/*!*************************************************!*\
  !*** ./node_modules/uri-js/dist/es5/uri.all.js ***!
  \*************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('/** @license URI.js v4.2.1 (c) 2011 Gary Court. License: http://github.com/garycourt/uri-js */\n(function (global, factory) {\n\t true ? factory(exports) :\n\tundefined;\n}(this, (function (exports) { \'use strict\';\n\nfunction merge() {\n    for (var _len = arguments.length, sets = Array(_len), _key = 0; _key < _len; _key++) {\n        sets[_key] = arguments[_key];\n    }\n\n    if (sets.length > 1) {\n        sets[0] = sets[0].slice(0, -1);\n        var xl = sets.length - 1;\n        for (var x = 1; x < xl; ++x) {\n            sets[x] = sets[x].slice(1, -1);\n        }\n        sets[xl] = sets[xl].slice(1);\n        return sets.join(\'\');\n    } else {\n        return sets[0];\n    }\n}\nfunction subexp(str) {\n    return "(?:" + str + ")";\n}\nfunction typeOf(o) {\n    return o === undefined ? "undefined" : o === null ? "null" : Object.prototype.toString.call(o).split(" ").pop().split("]").shift().toLowerCase();\n}\nfunction toUpperCase(str) {\n    return str.toUpperCase();\n}\nfunction toArray(obj) {\n    return obj !== undefined && obj !== null ? obj instanceof Array ? obj : typeof obj.length !== "number" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj) : [];\n}\nfunction assign(target, source) {\n    var obj = target;\n    if (source) {\n        for (var key in source) {\n            obj[key] = source[key];\n        }\n    }\n    return obj;\n}\n\nfunction buildExps(isIRI) {\n    var ALPHA$$ = "[A-Za-z]",\n        CR$ = "[\\\\x0D]",\n        DIGIT$$ = "[0-9]",\n        DQUOTE$$ = "[\\\\x22]",\n        HEXDIG$$ = merge(DIGIT$$, "[A-Fa-f]"),\n        //case-insensitive\n    LF$$ = "[\\\\x0A]",\n        SP$$ = "[\\\\x20]",\n        PCT_ENCODED$ = subexp(subexp("%[EFef]" + HEXDIG$$ + "%" + HEXDIG$$ + HEXDIG$$ + "%" + HEXDIG$$ + HEXDIG$$) + "|" + subexp("%[89A-Fa-f]" + HEXDIG$$ + "%" + HEXDIG$$ + HEXDIG$$) + "|" + subexp("%" + HEXDIG$$ + HEXDIG$$)),\n        //expanded\n    GEN_DELIMS$$ = "[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]",\n        SUB_DELIMS$$ = "[\\\\!\\\\$\\\\&\\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]",\n        RESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$),\n        UCSCHAR$$ = isIRI ? "[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]" : "[]",\n        //subset, excludes bidi control characters\n    IPRIVATE$$ = isIRI ? "[\\\\uE000-\\\\uF8FF]" : "[]",\n        //subset\n    UNRESERVED$$ = merge(ALPHA$$, DIGIT$$, "[\\\\-\\\\.\\\\_\\\\~]", UCSCHAR$$),\n        SCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, "[\\\\+\\\\-\\\\.]") + "*"),\n        USERINFO$ = subexp(subexp(PCT_ENCODED$ + "|" + merge(UNRESERVED$$, SUB_DELIMS$$, "[\\\\:]")) + "*"),\n        DEC_OCTET$ = subexp(subexp("25[0-5]") + "|" + subexp("2[0-4]" + DIGIT$$) + "|" + subexp("1" + DIGIT$$ + DIGIT$$) + "|" + subexp("[1-9]" + DIGIT$$) + "|" + DIGIT$$),\n        DEC_OCTET_RELAXED$ = subexp(subexp("25[0-5]") + "|" + subexp("2[0-4]" + DIGIT$$) + "|" + subexp("1" + DIGIT$$ + DIGIT$$) + "|" + subexp("0?[1-9]" + DIGIT$$) + "|0?0?" + DIGIT$$),\n        //relaxed parsing rules\n    IPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + "\\\\." + DEC_OCTET_RELAXED$ + "\\\\." + DEC_OCTET_RELAXED$ + "\\\\." + DEC_OCTET_RELAXED$),\n        H16$ = subexp(HEXDIG$$ + "{1,4}"),\n        LS32$ = subexp(subexp(H16$ + "\\\\:" + H16$) + "|" + IPV4ADDRESS$),\n        IPV6ADDRESS1$ = subexp(subexp(H16$ + "\\\\:") + "{6}" + LS32$),\n        //                           6( h16 ":" ) ls32\n    IPV6ADDRESS2$ = subexp("\\\\:\\\\:" + subexp(H16$ + "\\\\:") + "{5}" + LS32$),\n        //                      "::" 5( h16 ":" ) ls32\n    IPV6ADDRESS3$ = subexp(subexp(H16$) + "?\\\\:\\\\:" + subexp(H16$ + "\\\\:") + "{4}" + LS32$),\n        //[               h16 ] "::" 4( h16 ":" ) ls32\n    IPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + "\\\\:") + "{0,1}" + H16$) + "?\\\\:\\\\:" + subexp(H16$ + "\\\\:") + "{3}" + LS32$),\n        //[ *1( h16 ":" ) h16 ] "::" 3( h16 ":" ) ls32\n    IPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + "\\\\:") + "{0,2}" + H16$) + "?\\\\:\\\\:" + subexp(H16$ + "\\\\:") + "{2}" + LS32$),\n        //[ *2( h16 ":" ) h16 ] "::" 2( h16 ":" ) ls32\n    IPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + "\\\\:") + "{0,3}" + H16$) + "?\\\\:\\\\:" + H16$ + "\\\\:" + LS32$),\n        //[ *3( h16 ":" ) h16 ] "::"    h16 ":"   ls32\n    IPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + "\\\\:") + "{0,4}" + H16$) + "?\\\\:\\\\:" + LS32$),\n        //[ *4( h16 ":" ) h16 ] "::"              ls32\n    IPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + "\\\\:") + "{0,5}" + H16$) + "?\\\\:\\\\:" + H16$),\n        //[ *5( h16 ":" ) h16 ] "::"              h16\n    IPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + "\\\\:") + "{0,6}" + H16$) + "?\\\\:\\\\:"),\n        //[ *6( h16 ":" ) h16 ] "::"\n    IPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join("|")),\n        ZONEID$ = subexp(subexp(UNRESERVED$$ + "|" + PCT_ENCODED$) + "+"),\n        //RFC 6874\n    IPV6ADDRZ$ = subexp(IPV6ADDRESS$ + "\\\\%25" + ZONEID$),\n        //RFC 6874\n    IPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp("\\\\%25|\\\\%(?!" + HEXDIG$$ + "{2})") + ZONEID$),\n        //RFC 6874, with relaxed parsing rules\n    IPVFUTURE$ = subexp("[vV]" + HEXDIG$$ + "+\\\\." + merge(UNRESERVED$$, SUB_DELIMS$$, "[\\\\:]") + "+"),\n        IP_LITERAL$ = subexp("\\\\[" + subexp(IPV6ADDRZ_RELAXED$ + "|" + IPV6ADDRESS$ + "|" + IPVFUTURE$) + "\\\\]"),\n        //RFC 6874\n    REG_NAME$ = subexp(subexp(PCT_ENCODED$ + "|" + merge(UNRESERVED$$, SUB_DELIMS$$)) + "*"),\n        HOST$ = subexp(IP_LITERAL$ + "|" + IPV4ADDRESS$ + "(?!" + REG_NAME$ + ")" + "|" + REG_NAME$),\n        PORT$ = subexp(DIGIT$$ + "*"),\n        AUTHORITY$ = subexp(subexp(USERINFO$ + "@") + "?" + HOST$ + subexp("\\\\:" + PORT$) + "?"),\n        PCHAR$ = subexp(PCT_ENCODED$ + "|" + merge(UNRESERVED$$, SUB_DELIMS$$, "[\\\\:\\\\@]")),\n        SEGMENT$ = subexp(PCHAR$ + "*"),\n        SEGMENT_NZ$ = subexp(PCHAR$ + "+"),\n        SEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + "|" + merge(UNRESERVED$$, SUB_DELIMS$$, "[\\\\@]")) + "+"),\n        PATH_ABEMPTY$ = subexp(subexp("\\\\/" + SEGMENT$) + "*"),\n        PATH_ABSOLUTE$ = subexp("\\\\/" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + "?"),\n        //simplified\n    PATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$),\n        //simplified\n    PATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$),\n        //simplified\n    PATH_EMPTY$ = "(?!" + PCHAR$ + ")",\n        PATH$ = subexp(PATH_ABEMPTY$ + "|" + PATH_ABSOLUTE$ + "|" + PATH_NOSCHEME$ + "|" + PATH_ROOTLESS$ + "|" + PATH_EMPTY$),\n        QUERY$ = subexp(subexp(PCHAR$ + "|" + merge("[\\\\/\\\\?]", IPRIVATE$$)) + "*"),\n        FRAGMENT$ = subexp(subexp(PCHAR$ + "|[\\\\/\\\\?]") + "*"),\n        HIER_PART$ = subexp(subexp("\\\\/\\\\/" + AUTHORITY$ + PATH_ABEMPTY$) + "|" + PATH_ABSOLUTE$ + "|" + PATH_ROOTLESS$ + "|" + PATH_EMPTY$),\n        URI$ = subexp(SCHEME$ + "\\\\:" + HIER_PART$ + subexp("\\\\?" + QUERY$) + "?" + subexp("\\\\#" + FRAGMENT$) + "?"),\n        RELATIVE_PART$ = subexp(subexp("\\\\/\\\\/" + AUTHORITY$ + PATH_ABEMPTY$) + "|" + PATH_ABSOLUTE$ + "|" + PATH_NOSCHEME$ + "|" + PATH_EMPTY$),\n        RELATIVE$ = subexp(RELATIVE_PART$ + subexp("\\\\?" + QUERY$) + "?" + subexp("\\\\#" + FRAGMENT$) + "?"),\n        URI_REFERENCE$ = subexp(URI$ + "|" + RELATIVE$),\n        ABSOLUTE_URI$ = subexp(SCHEME$ + "\\\\:" + HIER_PART$ + subexp("\\\\?" + QUERY$) + "?"),\n        GENERIC_REF$ = "^(" + SCHEME$ + ")\\\\:" + subexp(subexp("\\\\/\\\\/(" + subexp("(" + USERINFO$ + ")@") + "?(" + HOST$ + ")" + subexp("\\\\:(" + PORT$ + ")") + "?)") + "?(" + PATH_ABEMPTY$ + "|" + PATH_ABSOLUTE$ + "|" + PATH_ROOTLESS$ + "|" + PATH_EMPTY$ + ")") + subexp("\\\\?(" + QUERY$ + ")") + "?" + subexp("\\\\#(" + FRAGMENT$ + ")") + "?$",\n        RELATIVE_REF$ = "^(){0}" + subexp(subexp("\\\\/\\\\/(" + subexp("(" + USERINFO$ + ")@") + "?(" + HOST$ + ")" + subexp("\\\\:(" + PORT$ + ")") + "?)") + "?(" + PATH_ABEMPTY$ + "|" + PATH_ABSOLUTE$ + "|" + PATH_NOSCHEME$ + "|" + PATH_EMPTY$ + ")") + subexp("\\\\?(" + QUERY$ + ")") + "?" + subexp("\\\\#(" + FRAGMENT$ + ")") + "?$",\n        ABSOLUTE_REF$ = "^(" + SCHEME$ + ")\\\\:" + subexp(subexp("\\\\/\\\\/(" + subexp("(" + USERINFO$ + ")@") + "?(" + HOST$ + ")" + subexp("\\\\:(" + PORT$ + ")") + "?)") + "?(" + PATH_ABEMPTY$ + "|" + PATH_ABSOLUTE$ + "|" + PATH_ROOTLESS$ + "|" + PATH_EMPTY$ + ")") + subexp("\\\\?(" + QUERY$ + ")") + "?$",\n        SAMEDOC_REF$ = "^" + subexp("\\\\#(" + FRAGMENT$ + ")") + "?$",\n        AUTHORITY_REF$ = "^" + subexp("(" + USERINFO$ + ")@") + "?(" + HOST$ + ")" + subexp("\\\\:(" + PORT$ + ")") + "?$";\n    return {\n        NOT_SCHEME: new RegExp(merge("[^]", ALPHA$$, DIGIT$$, "[\\\\+\\\\-\\\\.]"), "g"),\n        NOT_USERINFO: new RegExp(merge("[^\\\\%\\\\:]", UNRESERVED$$, SUB_DELIMS$$), "g"),\n        NOT_HOST: new RegExp(merge("[^\\\\%\\\\[\\\\]\\\\:]", UNRESERVED$$, SUB_DELIMS$$), "g"),\n        NOT_PATH: new RegExp(merge("[^\\\\%\\\\/\\\\:\\\\@]", UNRESERVED$$, SUB_DELIMS$$), "g"),\n        NOT_PATH_NOSCHEME: new RegExp(merge("[^\\\\%\\\\/\\\\@]", UNRESERVED$$, SUB_DELIMS$$), "g"),\n        NOT_QUERY: new RegExp(merge("[^\\\\%]", UNRESERVED$$, SUB_DELIMS$$, "[\\\\:\\\\@\\\\/\\\\?]", IPRIVATE$$), "g"),\n        NOT_FRAGMENT: new RegExp(merge("[^\\\\%]", UNRESERVED$$, SUB_DELIMS$$, "[\\\\:\\\\@\\\\/\\\\?]"), "g"),\n        ESCAPE: new RegExp(merge("[^]", UNRESERVED$$, SUB_DELIMS$$), "g"),\n        UNRESERVED: new RegExp(UNRESERVED$$, "g"),\n        OTHER_CHARS: new RegExp(merge("[^\\\\%]", UNRESERVED$$, RESERVED$$), "g"),\n        PCT_ENCODED: new RegExp(PCT_ENCODED$, "g"),\n        IPV4ADDRESS: new RegExp("^(" + IPV4ADDRESS$ + ")$"),\n        IPV6ADDRESS: new RegExp("^\\\\[?(" + IPV6ADDRESS$ + ")" + subexp(subexp("\\\\%25|\\\\%(?!" + HEXDIG$$ + "{2})") + "(" + ZONEID$ + ")") + "?\\\\]?$") //RFC 6874, with relaxed parsing rules\n    };\n}\nvar URI_PROTOCOL = buildExps(false);\n\nvar IRI_PROTOCOL = buildExps(true);\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i["return"]) _i["return"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError("Invalid attempt to destructure non-iterable instance");\n    }\n  };\n}();\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\n/** Highest positive signed 32-bit float value */\n\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nvar base = 36;\nvar tMin = 1;\nvar tMax = 26;\nvar skew = 38;\nvar damp = 700;\nvar initialBias = 72;\nvar initialN = 128; // 0x80\nvar delimiter = \'-\'; // \'\\x2D\'\n\n/** Regular expressions */\nvar regexPunycode = /^xn--/;\nvar regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nvar regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nvar errors = {\n\t\'overflow\': \'Overflow: input needs wider integers to process\',\n\t\'not-basic\': \'Illegal input >= 0x80 (not a basic code point)\',\n\t\'invalid-input\': \'Invalid input\'\n};\n\n/** Convenience shortcuts */\nvar baseMinusTMin = base - tMin;\nvar floor = Math.floor;\nvar stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error$1(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tvar result = [];\n\tvar length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tvar parts = string.split(\'@\');\n\tvar result = \'\';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + \'@\';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, \'\\x2E\');\n\tvar labels = string.split(\'.\');\n\tvar encoded = map(labels, fn).join(\'.\');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tvar output = [];\n\tvar counter = 0;\n\tvar length = string.length;\n\twhile (counter < length) {\n\t\tvar value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It\'s a high surrogate, and there is a next character.\n\t\t\tvar extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) {\n\t\t\t\t// Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It\'s an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nvar ucs2encode = function ucs2encode(array) {\n\treturn String.fromCodePoint.apply(String, toConsumableArray(array));\n};\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nvar basicToDigit = function basicToDigit(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nvar digitToBasic = function digitToBasic(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nvar adapt = function adapt(delta, numPoints, firstTime) {\n\tvar k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (; /* no initialization */delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nvar decode = function decode(input) {\n\t// Don\'t use UCS-2.\n\tvar output = [];\n\tvar inputLength = input.length;\n\tvar i = 0;\n\tvar n = initialN;\n\tvar bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tvar basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (var j = 0; j < basic; ++j) {\n\t\t// if it\'s not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror$1(\'not-basic\');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (var index = basic > 0 ? basic + 1 : 0; index < inputLength;) /* no final expression */{\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tvar oldi = i;\n\t\tfor (var w = 1, k = base;; /* no condition */k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror$1(\'invalid-input\');\n\t\t\t}\n\n\t\t\tvar digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror$1(\'overflow\');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tvar t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tvar baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror$1(\'overflow\');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\t\t}\n\n\t\tvar out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we\'ll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror$1(\'overflow\');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\t}\n\n\treturn String.fromCodePoint.apply(String, output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nvar encode = function encode(input) {\n\tvar output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tvar inputLength = input.length;\n\n\t// Initialize the state.\n\tvar n = initialN;\n\tvar delta = 0;\n\tvar bias = initialBias;\n\n\t// Handle the basic code points.\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = input[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar _currentValue2 = _step.value;\n\n\t\t\tif (_currentValue2 < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(_currentValue2));\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar basicLength = output.length;\n\tvar handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it\'s empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tvar m = maxInt;\n\t\tvar _iteratorNormalCompletion2 = true;\n\t\tvar _didIteratorError2 = false;\n\t\tvar _iteratorError2 = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator2 = input[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\tvar currentValue = _step2.value;\n\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder\'s <n,i> state to <m,0>,\n\t\t\t// but guard against overflow.\n\t\t} catch (err) {\n\t\t\t_didIteratorError2 = true;\n\t\t\t_iteratorError2 = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t_iterator2.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror$1(\'overflow\');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tvar _iteratorNormalCompletion3 = true;\n\t\tvar _didIteratorError3 = false;\n\t\tvar _iteratorError3 = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator3 = input[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\tvar _currentValue = _step3.value;\n\n\t\t\t\tif (_currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror$1(\'overflow\');\n\t\t\t\t}\n\t\t\t\tif (_currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\t\tvar q = delta;\n\t\t\t\t\tfor (var k = base;; /* no condition */k += base) {\n\t\t\t\t\t\tvar t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar qMinusT = q - t;\n\t\t\t\t\t\tvar baseMinusT = base - t;\n\t\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError3 = true;\n\t\t\t_iteratorError3 = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t_iterator3.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\t}\n\treturn output.join(\'\');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn\'t matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nvar toUnicode = function toUnicode(input) {\n\treturn mapDomain(input, function (string) {\n\t\treturn regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn\'t matter if you call it with a domain that\'s already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nvar toASCII = function toASCII(input) {\n\treturn mapDomain(input, function (string) {\n\t\treturn regexNonASCII.test(string) ? \'xn--\' + encode(string) : string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nvar punycode = {\n\t/**\n  * A string representing the current Punycode.js version number.\n  * @memberOf punycode\n  * @type String\n  */\n\t\'version\': \'2.1.0\',\n\t/**\n  * An object of methods to convert from JavaScript\'s internal character\n  * representation (UCS-2) to Unicode code points, and back.\n  * @see <https://mathiasbynens.be/notes/javascript-encoding>\n  * @memberOf punycode\n  * @type Object\n  */\n\t\'ucs2\': {\n\t\t\'decode\': ucs2decode,\n\t\t\'encode\': ucs2encode\n\t},\n\t\'decode\': decode,\n\t\'encode\': encode,\n\t\'toASCII\': toASCII,\n\t\'toUnicode\': toUnicode\n};\n\n/**\n * URI.js\n *\n * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.\n * @author <a href="mailto:gary.court@gmail.com">Gary Court</a>\n * @see http://github.com/garycourt/uri-js\n */\n/**\n * Copyright 2011 Gary Court. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are\n * permitted provided that the following conditions are met:\n *\n *    1. Redistributions of source code must retain the above copyright notice, this list of\n *       conditions and the following disclaimer.\n *\n *    2. Redistributions in binary form must reproduce the above copyright notice, this list\n *       of conditions and the following disclaimer in the documentation and/or other materials\n *       provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS\'\' AND ANY EXPRESS OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those of the\n * authors and should not be interpreted as representing official policies, either expressed\n * or implied, of Gary Court.\n */\nvar SCHEMES = {};\nfunction pctEncChar(chr) {\n    var c = chr.charCodeAt(0);\n    var e = void 0;\n    if (c < 16) e = "%0" + c.toString(16).toUpperCase();else if (c < 128) e = "%" + c.toString(16).toUpperCase();else if (c < 2048) e = "%" + (c >> 6 | 192).toString(16).toUpperCase() + "%" + (c & 63 | 128).toString(16).toUpperCase();else e = "%" + (c >> 12 | 224).toString(16).toUpperCase() + "%" + (c >> 6 & 63 | 128).toString(16).toUpperCase() + "%" + (c & 63 | 128).toString(16).toUpperCase();\n    return e;\n}\nfunction pctDecChars(str) {\n    var newStr = "";\n    var i = 0;\n    var il = str.length;\n    while (i < il) {\n        var c = parseInt(str.substr(i + 1, 2), 16);\n        if (c < 128) {\n            newStr += String.fromCharCode(c);\n            i += 3;\n        } else if (c >= 194 && c < 224) {\n            if (il - i >= 6) {\n                var c2 = parseInt(str.substr(i + 4, 2), 16);\n                newStr += String.fromCharCode((c & 31) << 6 | c2 & 63);\n            } else {\n                newStr += str.substr(i, 6);\n            }\n            i += 6;\n        } else if (c >= 224) {\n            if (il - i >= 9) {\n                var _c = parseInt(str.substr(i + 4, 2), 16);\n                var c3 = parseInt(str.substr(i + 7, 2), 16);\n                newStr += String.fromCharCode((c & 15) << 12 | (_c & 63) << 6 | c3 & 63);\n            } else {\n                newStr += str.substr(i, 9);\n            }\n            i += 9;\n        } else {\n            newStr += str.substr(i, 3);\n            i += 3;\n        }\n    }\n    return newStr;\n}\nfunction _normalizeComponentEncoding(components, protocol) {\n    function decodeUnreserved(str) {\n        var decStr = pctDecChars(str);\n        return !decStr.match(protocol.UNRESERVED) ? str : decStr;\n    }\n    if (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, "");\n    if (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    if (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    if (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    if (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    if (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    return components;\n}\n\nfunction _stripLeadingZeros(str) {\n    return str.replace(/^0*(.*)/, "$1") || "0";\n}\nfunction _normalizeIPv4(host, protocol) {\n    var matches = host.match(protocol.IPV4ADDRESS) || [];\n\n    var _matches = slicedToArray(matches, 2),\n        address = _matches[1];\n\n    if (address) {\n        return address.split(".").map(_stripLeadingZeros).join(".");\n    } else {\n        return host;\n    }\n}\nfunction _normalizeIPv6(host, protocol) {\n    var matches = host.match(protocol.IPV6ADDRESS) || [];\n\n    var _matches2 = slicedToArray(matches, 3),\n        address = _matches2[1],\n        zone = _matches2[2];\n\n    if (address) {\n        var _address$toLowerCase$ = address.toLowerCase().split(\'::\').reverse(),\n            _address$toLowerCase$2 = slicedToArray(_address$toLowerCase$, 2),\n            last = _address$toLowerCase$2[0],\n            first = _address$toLowerCase$2[1];\n\n        var firstFields = first ? first.split(":").map(_stripLeadingZeros) : [];\n        var lastFields = last.split(":").map(_stripLeadingZeros);\n        var isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);\n        var fieldCount = isLastFieldIPv4Address ? 7 : 8;\n        var lastFieldsStart = lastFields.length - fieldCount;\n        var fields = Array(fieldCount);\n        for (var x = 0; x < fieldCount; ++x) {\n            fields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || \'\';\n        }\n        if (isLastFieldIPv4Address) {\n            fields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);\n        }\n        var allZeroFields = fields.reduce(function (acc, field, index) {\n            if (!field || field === "0") {\n                var lastLongest = acc[acc.length - 1];\n                if (lastLongest && lastLongest.index + lastLongest.length === index) {\n                    lastLongest.length++;\n                } else {\n                    acc.push({ index: index, length: 1 });\n                }\n            }\n            return acc;\n        }, []);\n        var longestZeroFields = allZeroFields.sort(function (a, b) {\n            return b.length - a.length;\n        })[0];\n        var newHost = void 0;\n        if (longestZeroFields && longestZeroFields.length > 1) {\n            var newFirst = fields.slice(0, longestZeroFields.index);\n            var newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);\n            newHost = newFirst.join(":") + "::" + newLast.join(":");\n        } else {\n            newHost = fields.join(":");\n        }\n        if (zone) {\n            newHost += "%" + zone;\n        }\n        return newHost;\n    } else {\n        return host;\n    }\n}\nvar URI_PARSE = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i;\nvar NO_MATCH_IS_UNDEFINED = "".match(/(){0}/)[1] === undefined;\nfunction parse(uriString) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var components = {};\n    var protocol = options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL;\n    if (options.reference === "suffix") uriString = (options.scheme ? options.scheme + ":" : "") + "//" + uriString;\n    var matches = uriString.match(URI_PARSE);\n    if (matches) {\n        if (NO_MATCH_IS_UNDEFINED) {\n            //store each component\n            components.scheme = matches[1];\n            components.userinfo = matches[3];\n            components.host = matches[4];\n            components.port = parseInt(matches[5], 10);\n            components.path = matches[6] || "";\n            components.query = matches[7];\n            components.fragment = matches[8];\n            //fix port number\n            if (isNaN(components.port)) {\n                components.port = matches[5];\n            }\n        } else {\n            //IE FIX for improper RegExp matching\n            //store each component\n            components.scheme = matches[1] || undefined;\n            components.userinfo = uriString.indexOf("@") !== -1 ? matches[3] : undefined;\n            components.host = uriString.indexOf("//") !== -1 ? matches[4] : undefined;\n            components.port = parseInt(matches[5], 10);\n            components.path = matches[6] || "";\n            components.query = uriString.indexOf("?") !== -1 ? matches[7] : undefined;\n            components.fragment = uriString.indexOf("#") !== -1 ? matches[8] : undefined;\n            //fix port number\n            if (isNaN(components.port)) {\n                components.port = uriString.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? matches[4] : undefined;\n            }\n        }\n        if (components.host) {\n            //normalize IP hosts\n            components.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);\n        }\n        //determine reference type\n        if (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {\n            components.reference = "same-document";\n        } else if (components.scheme === undefined) {\n            components.reference = "relative";\n        } else if (components.fragment === undefined) {\n            components.reference = "absolute";\n        } else {\n            components.reference = "uri";\n        }\n        //check for reference errors\n        if (options.reference && options.reference !== "suffix" && options.reference !== components.reference) {\n            components.error = components.error || "URI is not a " + options.reference + " reference.";\n        }\n        //find scheme handler\n        var schemeHandler = SCHEMES[(options.scheme || components.scheme || "").toLowerCase()];\n        //check if scheme can\'t handle IRIs\n        if (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n            //if host component is a domain name\n            if (components.host && (options.domainHost || schemeHandler && schemeHandler.domainHost)) {\n                //convert Unicode IDN -> ASCII IDN\n                try {\n                    components.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());\n                } catch (e) {\n                    components.error = components.error || "Host\'s domain name can not be converted to ASCII via punycode: " + e;\n                }\n            }\n            //convert IRI -> URI\n            _normalizeComponentEncoding(components, URI_PROTOCOL);\n        } else {\n            //normalize encodings\n            _normalizeComponentEncoding(components, protocol);\n        }\n        //perform scheme specific parsing\n        if (schemeHandler && schemeHandler.parse) {\n            schemeHandler.parse(components, options);\n        }\n    } else {\n        components.error = components.error || "URI can not be parsed.";\n    }\n    return components;\n}\n\nfunction _recomposeAuthority(components, options) {\n    var protocol = options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL;\n    var uriTokens = [];\n    if (components.userinfo !== undefined) {\n        uriTokens.push(components.userinfo);\n        uriTokens.push("@");\n    }\n    if (components.host !== undefined) {\n        //normalize IP hosts, add brackets and escape zone separator for IPv6\n        uriTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, function (_, $1, $2) {\n            return "[" + $1 + ($2 ? "%25" + $2 : "") + "]";\n        }));\n    }\n    if (typeof components.port === "number") {\n        uriTokens.push(":");\n        uriTokens.push(components.port.toString(10));\n    }\n    return uriTokens.length ? uriTokens.join("") : undefined;\n}\n\nvar RDS1 = /^\\.\\.?\\//;\nvar RDS2 = /^\\/\\.(\\/|$)/;\nvar RDS3 = /^\\/\\.\\.(\\/|$)/;\nvar RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/;\nfunction removeDotSegments(input) {\n    var output = [];\n    while (input.length) {\n        if (input.match(RDS1)) {\n            input = input.replace(RDS1, "");\n        } else if (input.match(RDS2)) {\n            input = input.replace(RDS2, "/");\n        } else if (input.match(RDS3)) {\n            input = input.replace(RDS3, "/");\n            output.pop();\n        } else if (input === "." || input === "..") {\n            input = "";\n        } else {\n            var im = input.match(RDS5);\n            if (im) {\n                var s = im[0];\n                input = input.slice(s.length);\n                output.push(s);\n            } else {\n                throw new Error("Unexpected dot segment condition");\n            }\n        }\n    }\n    return output.join("");\n}\n\nfunction serialize(components) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var protocol = options.iri ? IRI_PROTOCOL : URI_PROTOCOL;\n    var uriTokens = [];\n    //find scheme handler\n    var schemeHandler = SCHEMES[(options.scheme || components.scheme || "").toLowerCase()];\n    //perform scheme specific serialization\n    if (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);\n    if (components.host) {\n        //if host component is an IPv6 address\n        if (protocol.IPV6ADDRESS.test(components.host)) {}\n        //TODO: normalize IPv6 address as per RFC 5952\n\n        //if host component is a domain name\n        else if (options.domainHost || schemeHandler && schemeHandler.domainHost) {\n                //convert IDN via punycode\n                try {\n                    components.host = !options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host);\n                } catch (e) {\n                    components.error = components.error || "Host\'s domain name can not be converted to " + (!options.iri ? "ASCII" : "Unicode") + " via punycode: " + e;\n                }\n            }\n    }\n    //normalize encoding\n    _normalizeComponentEncoding(components, protocol);\n    if (options.reference !== "suffix" && components.scheme) {\n        uriTokens.push(components.scheme);\n        uriTokens.push(":");\n    }\n    var authority = _recomposeAuthority(components, options);\n    if (authority !== undefined) {\n        if (options.reference !== "suffix") {\n            uriTokens.push("//");\n        }\n        uriTokens.push(authority);\n        if (components.path && components.path.charAt(0) !== "/") {\n            uriTokens.push("/");\n        }\n    }\n    if (components.path !== undefined) {\n        var s = components.path;\n        if (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n            s = removeDotSegments(s);\n        }\n        if (authority === undefined) {\n            s = s.replace(/^\\/\\//, "/%2F"); //don\'t allow the path to start with "//"\n        }\n        uriTokens.push(s);\n    }\n    if (components.query !== undefined) {\n        uriTokens.push("?");\n        uriTokens.push(components.query);\n    }\n    if (components.fragment !== undefined) {\n        uriTokens.push("#");\n        uriTokens.push(components.fragment);\n    }\n    return uriTokens.join(""); //merge tokens into a string\n}\n\nfunction resolveComponents(base, relative) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var skipNormalization = arguments[3];\n\n    var target = {};\n    if (!skipNormalization) {\n        base = parse(serialize(base, options), options); //normalize base components\n        relative = parse(serialize(relative, options), options); //normalize relative components\n    }\n    options = options || {};\n    if (!options.tolerant && relative.scheme) {\n        target.scheme = relative.scheme;\n        //target.authority = relative.authority;\n        target.userinfo = relative.userinfo;\n        target.host = relative.host;\n        target.port = relative.port;\n        target.path = removeDotSegments(relative.path || "");\n        target.query = relative.query;\n    } else {\n        if (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n            //target.authority = relative.authority;\n            target.userinfo = relative.userinfo;\n            target.host = relative.host;\n            target.port = relative.port;\n            target.path = removeDotSegments(relative.path || "");\n            target.query = relative.query;\n        } else {\n            if (!relative.path) {\n                target.path = base.path;\n                if (relative.query !== undefined) {\n                    target.query = relative.query;\n                } else {\n                    target.query = base.query;\n                }\n            } else {\n                if (relative.path.charAt(0) === "/") {\n                    target.path = removeDotSegments(relative.path);\n                } else {\n                    if ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n                        target.path = "/" + relative.path;\n                    } else if (!base.path) {\n                        target.path = relative.path;\n                    } else {\n                        target.path = base.path.slice(0, base.path.lastIndexOf("/") + 1) + relative.path;\n                    }\n                    target.path = removeDotSegments(target.path);\n                }\n                target.query = relative.query;\n            }\n            //target.authority = base.authority;\n            target.userinfo = base.userinfo;\n            target.host = base.host;\n            target.port = base.port;\n        }\n        target.scheme = base.scheme;\n    }\n    target.fragment = relative.fragment;\n    return target;\n}\n\nfunction resolve(baseURI, relativeURI, options) {\n    var schemelessOptions = assign({ scheme: \'null\' }, options);\n    return serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);\n}\n\nfunction normalize(uri, options) {\n    if (typeof uri === "string") {\n        uri = serialize(parse(uri, options), options);\n    } else if (typeOf(uri) === "object") {\n        uri = parse(serialize(uri, options), options);\n    }\n    return uri;\n}\n\nfunction equal(uriA, uriB, options) {\n    if (typeof uriA === "string") {\n        uriA = serialize(parse(uriA, options), options);\n    } else if (typeOf(uriA) === "object") {\n        uriA = serialize(uriA, options);\n    }\n    if (typeof uriB === "string") {\n        uriB = serialize(parse(uriB, options), options);\n    } else if (typeOf(uriB) === "object") {\n        uriB = serialize(uriB, options);\n    }\n    return uriA === uriB;\n}\n\nfunction escapeComponent(str, options) {\n    return str && str.toString().replace(!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE, pctEncChar);\n}\n\nfunction unescapeComponent(str, options) {\n    return str && str.toString().replace(!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED, pctDecChars);\n}\n\nvar handler = {\n    scheme: "http",\n    domainHost: true,\n    parse: function parse(components, options) {\n        //report missing host\n        if (!components.host) {\n            components.error = components.error || "HTTP URIs must have a host.";\n        }\n        return components;\n    },\n    serialize: function serialize(components, options) {\n        //normalize the default port\n        if (components.port === (String(components.scheme).toLowerCase() !== "https" ? 80 : 443) || components.port === "") {\n            components.port = undefined;\n        }\n        //normalize the empty path\n        if (!components.path) {\n            components.path = "/";\n        }\n        //NOTE: We do not parse query strings for HTTP URIs\n        //as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n        //and not the HTTP spec.\n        return components;\n    }\n};\n\nvar handler$1 = {\n    scheme: "https",\n    domainHost: handler.domainHost,\n    parse: handler.parse,\n    serialize: handler.serialize\n};\n\nvar O = {};\nvar isIRI = true;\n//RFC 3986\nvar UNRESERVED$$ = "[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~" + (isIRI ? "\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF" : "") + "]";\nvar HEXDIG$$ = "[0-9A-Fa-f]"; //case-insensitive\nvar PCT_ENCODED$ = subexp(subexp("%[EFef]" + HEXDIG$$ + "%" + HEXDIG$$ + HEXDIG$$ + "%" + HEXDIG$$ + HEXDIG$$) + "|" + subexp("%[89A-Fa-f]" + HEXDIG$$ + "%" + HEXDIG$$ + HEXDIG$$) + "|" + subexp("%" + HEXDIG$$ + HEXDIG$$)); //expanded\n//RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =\n//const ATEXT$$ = "[A-Za-z0-9\\\\!\\\\#\\\\$\\\\%\\\\&\\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]";\n//const WSP$$ = "[\\\\x20\\\\x09]";\n//const OBS_QTEXT$$ = "[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F]";  //(%d1-8 / %d11-12 / %d14-31 / %d127)\n//const QTEXT$$ = merge("[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext\n//const VCHAR$$ = "[\\\\x21-\\\\x7E]";\n//const WSP$$ = "[\\\\x20\\\\x09]";\n//const OBS_QP$ = subexp("\\\\\\\\" + merge("[\\\\x00\\\\x0D\\\\x0A]", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext\n//const FWS$ = subexp(subexp(WSP$$ + "*" + "\\\\x0D\\\\x0A") + "?" + WSP$$ + "+");\n//const QUOTED_PAIR$ = subexp(subexp("\\\\\\\\" + subexp(VCHAR$$ + "|" + WSP$$)) + "|" + OBS_QP$);\n//const QUOTED_STRING$ = subexp(\'\\\\"\' + subexp(FWS$ + "?" + QCONTENT$) + "*" + FWS$ + "?" + \'\\\\"\');\nvar ATEXT$$ = "[A-Za-z0-9\\\\!\\\\$\\\\%\\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]";\nvar QTEXT$$ = "[\\\\!\\\\$\\\\%\\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]";\nvar VCHAR$$ = merge(QTEXT$$, "[\\\\\\"\\\\\\\\]");\nvar SOME_DELIMS$$ = "[\\\\!\\\\$\\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]";\nvar UNRESERVED = new RegExp(UNRESERVED$$, "g");\nvar PCT_ENCODED = new RegExp(PCT_ENCODED$, "g");\nvar NOT_LOCAL_PART = new RegExp(merge("[^]", ATEXT$$, "[\\\\.]", \'[\\\\"]\', VCHAR$$), "g");\nvar NOT_HFNAME = new RegExp(merge("[^]", UNRESERVED$$, SOME_DELIMS$$), "g");\nvar NOT_HFVALUE = NOT_HFNAME;\nfunction decodeUnreserved(str) {\n    var decStr = pctDecChars(str);\n    return !decStr.match(UNRESERVED) ? str : decStr;\n}\nvar handler$2 = {\n    scheme: "mailto",\n    parse: function parse$$1(components, options) {\n        var mailtoComponents = components;\n        var to = mailtoComponents.to = mailtoComponents.path ? mailtoComponents.path.split(",") : [];\n        mailtoComponents.path = undefined;\n        if (mailtoComponents.query) {\n            var unknownHeaders = false;\n            var headers = {};\n            var hfields = mailtoComponents.query.split("&");\n            for (var x = 0, xl = hfields.length; x < xl; ++x) {\n                var hfield = hfields[x].split("=");\n                switch (hfield[0]) {\n                    case "to":\n                        var toAddrs = hfield[1].split(",");\n                        for (var _x = 0, _xl = toAddrs.length; _x < _xl; ++_x) {\n                            to.push(toAddrs[_x]);\n                        }\n                        break;\n                    case "subject":\n                        mailtoComponents.subject = unescapeComponent(hfield[1], options);\n                        break;\n                    case "body":\n                        mailtoComponents.body = unescapeComponent(hfield[1], options);\n                        break;\n                    default:\n                        unknownHeaders = true;\n                        headers[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);\n                        break;\n                }\n            }\n            if (unknownHeaders) mailtoComponents.headers = headers;\n        }\n        mailtoComponents.query = undefined;\n        for (var _x2 = 0, _xl2 = to.length; _x2 < _xl2; ++_x2) {\n            var addr = to[_x2].split("@");\n            addr[0] = unescapeComponent(addr[0]);\n            if (!options.unicodeSupport) {\n                //convert Unicode IDN -> ASCII IDN\n                try {\n                    addr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());\n                } catch (e) {\n                    mailtoComponents.error = mailtoComponents.error || "Email address\'s domain name can not be converted to ASCII via punycode: " + e;\n                }\n            } else {\n                addr[1] = unescapeComponent(addr[1], options).toLowerCase();\n            }\n            to[_x2] = addr.join("@");\n        }\n        return mailtoComponents;\n    },\n    serialize: function serialize$$1(mailtoComponents, options) {\n        var components = mailtoComponents;\n        var to = toArray(mailtoComponents.to);\n        if (to) {\n            for (var x = 0, xl = to.length; x < xl; ++x) {\n                var toAddr = String(to[x]);\n                var atIdx = toAddr.lastIndexOf("@");\n                var localPart = toAddr.slice(0, atIdx).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);\n                var domain = toAddr.slice(atIdx + 1);\n                //convert IDN via punycode\n                try {\n                    domain = !options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain);\n                } catch (e) {\n                    components.error = components.error || "Email address\'s domain name can not be converted to " + (!options.iri ? "ASCII" : "Unicode") + " via punycode: " + e;\n                }\n                to[x] = localPart + "@" + domain;\n            }\n            components.path = to.join(",");\n        }\n        var headers = mailtoComponents.headers = mailtoComponents.headers || {};\n        if (mailtoComponents.subject) headers["subject"] = mailtoComponents.subject;\n        if (mailtoComponents.body) headers["body"] = mailtoComponents.body;\n        var fields = [];\n        for (var name in headers) {\n            if (headers[name] !== O[name]) {\n                fields.push(name.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) + "=" + headers[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar));\n            }\n        }\n        if (fields.length) {\n            components.query = fields.join("&");\n        }\n        return components;\n    }\n};\n\nvar URN_PARSE = /^([^\\:]+)\\:(.*)/;\n//RFC 2141\nvar handler$3 = {\n    scheme: "urn",\n    parse: function parse$$1(components, options) {\n        var matches = components.path && components.path.match(URN_PARSE);\n        var urnComponents = components;\n        if (matches) {\n            var scheme = options.scheme || urnComponents.scheme || "urn";\n            var nid = matches[1].toLowerCase();\n            var nss = matches[2];\n            var urnScheme = scheme + ":" + (options.nid || nid);\n            var schemeHandler = SCHEMES[urnScheme];\n            urnComponents.nid = nid;\n            urnComponents.nss = nss;\n            urnComponents.path = undefined;\n            if (schemeHandler) {\n                urnComponents = schemeHandler.parse(urnComponents, options);\n            }\n        } else {\n            urnComponents.error = urnComponents.error || "URN can not be parsed.";\n        }\n        return urnComponents;\n    },\n    serialize: function serialize$$1(urnComponents, options) {\n        var scheme = options.scheme || urnComponents.scheme || "urn";\n        var nid = urnComponents.nid;\n        var urnScheme = scheme + ":" + (options.nid || nid);\n        var schemeHandler = SCHEMES[urnScheme];\n        if (schemeHandler) {\n            urnComponents = schemeHandler.serialize(urnComponents, options);\n        }\n        var uriComponents = urnComponents;\n        var nss = urnComponents.nss;\n        uriComponents.path = (nid || options.nid) + ":" + nss;\n        return uriComponents;\n    }\n};\n\nvar UUID = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/;\n//RFC 4122\nvar handler$4 = {\n    scheme: "urn:uuid",\n    parse: function parse(urnComponents, options) {\n        var uuidComponents = urnComponents;\n        uuidComponents.uuid = uuidComponents.nss;\n        uuidComponents.nss = undefined;\n        if (!options.tolerant && (!uuidComponents.uuid || !uuidComponents.uuid.match(UUID))) {\n            uuidComponents.error = uuidComponents.error || "UUID is not valid.";\n        }\n        return uuidComponents;\n    },\n    serialize: function serialize(uuidComponents, options) {\n        var urnComponents = uuidComponents;\n        //normalize UUID\n        urnComponents.nss = (uuidComponents.uuid || "").toLowerCase();\n        return urnComponents;\n    }\n};\n\nSCHEMES[handler.scheme] = handler;\nSCHEMES[handler$1.scheme] = handler$1;\nSCHEMES[handler$2.scheme] = handler$2;\nSCHEMES[handler$3.scheme] = handler$3;\nSCHEMES[handler$4.scheme] = handler$4;\n\nexports.SCHEMES = SCHEMES;\nexports.pctEncChar = pctEncChar;\nexports.pctDecChars = pctDecChars;\nexports.parse = parse;\nexports.removeDotSegments = removeDotSegments;\nexports.serialize = serialize;\nexports.resolveComponents = resolveComponents;\nexports.resolve = resolve;\nexports.normalize = normalize;\nexports.equal = equal;\nexports.escapeComponent = escapeComponent;\nexports.unescapeComponent = unescapeComponent;\n\nObject.defineProperty(exports, \'__esModule\', { value: true });\n\n})));\n//# sourceMappingURL=uri.all.js.map\n\n\n//# sourceURL=webpack://preql/./node_modules/uri-js/dist/es5/uri.all.js?')},"./source/APIObjectKinds/Attribute/kind.ts":
/*!*************************************************!*\
  !*** ./source/APIObjectKinds/Attribute/kind.ts ***!
  \*************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst ajv_1 = __importDefault(__webpack_require__(/*! ../../ajv */ "./source/ajv.ts"));\nconst PreqlError_1 = __importDefault(__webpack_require__(/*! ../../PreqlError */ "./source/PreqlError.ts"));\nconst schema_1 = __importDefault(__webpack_require__(/*! ./schema */ "./source/APIObjectKinds/Attribute/schema.ts"));\nconst structureValidator = ajv_1.default.compile(schema_1.default);\n/**\n * Represents an atomic piece of data that is associated with an object. In a\n * relational database, this is a column; in a document-oriented database, this\n * might be called a "field."\n */\nconst kind = {\n    validateStructure: (obj) => structureValidator(obj.spec),\n    validateSemantics: async (obj, etcd) => {\n        const databasePath = obj.spec.databaseName.toLowerCase();\n        const entityPath = `${obj.spec.databaseName}.$${obj.spec.entityName}`.toLowerCase();\n        const structPath = [obj.spec.databaseName, obj.spec.structName].join(".").toLowerCase();\n        const characterSetPath = (obj.spec.characterSet || "").toLowerCase();\n        const collationPath = (obj.spec.collation || "").toLowerCase();\n        if (!(etcd.pathIndex[databasePath])) {\n            throw new PreqlError_1.default("58f2e994-a54a-48e2-8d53-d7015f934beb", `No Databases found that are named \'${obj.spec.databaseName}\' for Attribute `\n                + `\'${obj.metadata.name}\' to attach to.`);\n        }\n        if (obj.spec.entityName && !etcd.pathIndex[entityPath]) {\n            throw new PreqlError_1.default("d5b8e0a0-5e69-44bc-8c93-d238c4b3f133", `No Entities found that are named \'${obj.spec.entityName}\' for Attribute `\n                + `\'${obj.metadata.name}\' to be associated with.`);\n        }\n        if (!etcd.pathIndex[structPath]) {\n            throw new PreqlError_1.default("1d985193-ce84-4051-a0cc-af9984094d4f", `No Structs found that are named \'${obj.spec.structName}\' for Attribute `\n                + `\'${obj.metadata.name}\' to attach to.`);\n        }\n        if (obj.spec.characterSet && !etcd.pathIndex[characterSetPath]) {\n            throw new PreqlError_1.default("9f1e04b9-60bf-4832-ba09-72537231fe1f", `No CharacterSets found that are named \'${obj.spec.characterSet}\' for Attribute `\n                + `\'${obj.metadata.name}\' to use.`);\n        }\n        if (obj.spec.collation && !etcd.pathIndex[collationPath]) {\n            throw new PreqlError_1.default("53298ed2-c4cf-41c7-b8fb-bf386388f1b8", `No Collations found that are named \'${obj.spec.collation}\' for Attribute `\n                + `\'${obj.metadata.name}\' to use.`);\n        }\n        const datatype = etcd\n            .kindNameIndex[`datatype:${obj.spec.type.toLowerCase()}`];\n        if (!datatype) {\n            throw new PreqlError_1.default("6d125c9f-957a-4ce0-9e2a-074ee31fa5f1", `No DataTypes found that are named \'${obj.spec.type}\' for Attribute `\n                + `\'${obj.metadata.name}\' to use.`);\n        }\n        if ((obj.spec.characterSet || obj.spec.collation)\n            && datatype.spec.jsonEquivalent.toLowerCase() !== "string") {\n            throw new PreqlError_1.default("c939691d-523f-476d-a751-b878a6613a75", "Character sets and collations may not apply to Attribute "\n                + `\'${obj.metadata.name}\', because it is not fundamentally a `\n                + "string type.");\n        }\n    },\n};\nexports.default = kind;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/Attribute/kind.ts?')},"./source/APIObjectKinds/Attribute/schema.ts":
/*!***************************************************!*\
  !*** ./source/APIObjectKinds/Attribute/schema.ts ***!
  \***************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst identifierRegexString_1 = __importDefault(__webpack_require__(/*! ../../identifierRegexString */ "./source/identifierRegexString.ts"));\nconst objectIdentifierRegexString_1 = __importDefault(__webpack_require__(/*! ../../objectIdentifierRegexString */ "./source/objectIdentifierRegexString.ts"));\n/**\n * The JSON schema for the `spec` section of a PreQL `Attribute`.\n *\n * @see /source/APIObjectKinds/Attribute/kind.\n */\nconst schema = {\n    $schema: "http://json-schema.org/draft-07/schema#",\n    $async: true,\n    title: "PreQL Attribute Schema",\n    type: "object",\n    additionalProperties: false,\n    properties: {\n        name: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        pluralName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        structName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        entityName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        databaseName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        default: {\n            type: [\n                "number",\n                "string",\n            ],\n        },\n        nullable: {\n            type: "boolean",\n            default: true,\n        },\n        type: {\n            type: "string",\n            unicodePattern: "^(\\\\p{L}|\\\\p{N}|\\\\.|-){1,253}$",\n        },\n        // Mostly used for LDAP: Whether an entity can have multiple of these attributes.\n        // See: http://www.openldap.org/doc/admin22/schema.html\n        // If multiValued with an RDBMS target, it should be broken into its own separate table,\n        // and implement a FKC linking it to the parent table.\n        multiValued: {\n            type: "boolean",\n            default: false,\n        },\n        sparse: {\n            type: "boolean",\n            default: false,\n        },\n        characterSet: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        collation: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        objectIdentifier: {\n            type: "string",\n            pattern: objectIdentifierRegexString_1.default,\n        },\n        otherNames: {\n            type: "array",\n            items: {\n                type: "string",\n                pattern: identifierRegexString_1.default,\n            },\n        },\n        matchingRules: {\n            type: "array",\n            items: {\n                type: "string",\n                pattern: objectIdentifierRegexString_1.default,\n            },\n        },\n        orderingRules: {\n            type: "array",\n            items: {\n                type: "string",\n                pattern: objectIdentifierRegexString_1.default,\n            },\n        },\n        substringRules: {\n            type: "array",\n            items: {\n                type: "string",\n                pattern: objectIdentifierRegexString_1.default,\n            },\n        },\n    },\n    required: [\n        "name",\n        "structName",\n        "databaseName",\n        "type",\n    ],\n};\nexports.default = schema;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/Attribute/schema.ts?')},"./source/APIObjectKinds/CharacterSet/kind.ts":
/*!****************************************************!*\
  !*** ./source/APIObjectKinds/CharacterSet/kind.ts ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst ajv_1 = __importDefault(__webpack_require__(/*! ../../ajv */ "./source/ajv.ts"));\nconst PreqlError_1 = __importDefault(__webpack_require__(/*! ../../PreqlError */ "./source/PreqlError.ts"));\nconst schema_1 = __importDefault(__webpack_require__(/*! ./schema */ "./source/APIObjectKinds/CharacterSet/schema.ts"));\nconst structureValidator = ajv_1.default.compile(schema_1.default);\n/**\n * Represents a specific way of encoding characters into bytes.\n *\n * This kind exists because different DBMSs have different names for the same\n * character sets. This kind maps an arbitrarily-named character set to its\n * real equivalents in the targeted DBMS language.\n */\nconst kind = {\n    validateStructure: (obj) => structureValidator(obj.spec),\n    validateSemantics: async (obj, etcd) => {\n        if (!(obj.spec.defaultCollation))\n            return;\n        if (!etcd.pathIndex[obj.spec.defaultCollation.toLowerCase()]) {\n            throw new PreqlError_1.default("359299a4-d4f3-45c2-a4e0-e4d9064d3c76", `No Collations found that are named \'${obj.spec.defaultCollation}\' `\n                + `to be the default collation for CharacterSet \'${obj.metadata.name}\'.`);\n        }\n    },\n};\nexports.default = kind;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/CharacterSet/kind.ts?')},"./source/APIObjectKinds/CharacterSet/schema.ts":
/*!******************************************************!*\
  !*** ./source/APIObjectKinds/CharacterSet/schema.ts ***!
  \******************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst identifierRegexString_1 = __importDefault(__webpack_require__(/*! ../../identifierRegexString */ "./source/identifierRegexString.ts"));\nconst iso3166CountryCodes_1 = __importDefault(__webpack_require__(/*! ../../iso3166CountryCodes */ "./source/iso3166CountryCodes.ts"));\nconst iso639LanguageCodes_1 = __importDefault(__webpack_require__(/*! ../../iso639LanguageCodes */ "./source/iso639LanguageCodes.ts"));\n/**\n * The JSON schema for the `spec` section of a PreQL `CharacterSet`.\n *\n * @see /source/APIObjectKinds/CharacterSet/kind.\n */\nconst schema = {\n    $schema: "http://json-schema.org/draft-07/schema#",\n    $async: true,\n    title: "PreQL CharacterSet Specification Schema",\n    type: "object",\n    additionalProperties: false,\n    properties: {\n        name: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        targetEquivalents: {\n            type: "object",\n            description: "Maps targets to their character set, such as mysql => utf8mb4.",\n            additionalProperties: {\n                type: "string",\n            },\n        },\n        country: {\n            type: "string",\n            enum: iso3166CountryCodes_1.default,\n        },\n        language: {\n            type: "string",\n            enum: iso639LanguageCodes_1.default,\n        },\n        defaultCollation: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        maximumCharacterLength: {\n            type: "number",\n            minimum: 1,\n        },\n    },\n    required: [\n        "name",\n        "targetEquivalents",\n    ],\n};\nexports.default = schema;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/CharacterSet/schema.ts?')},"./source/APIObjectKinds/Collation/kind.ts":
/*!*************************************************!*\
  !*** ./source/APIObjectKinds/Collation/kind.ts ***!
  \*************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst ajv_1 = __importDefault(__webpack_require__(/*! ../../ajv */ "./source/ajv.ts"));\nconst PreqlError_1 = __importDefault(__webpack_require__(/*! ../../PreqlError */ "./source/PreqlError.ts"));\nconst schema_1 = __importDefault(__webpack_require__(/*! ./schema */ "./source/APIObjectKinds/Collation/schema.ts"));\nconst structureValidator = ajv_1.default.compile(schema_1.default);\n/**\n * Represents a way or set of rules for arranging character strings, numbers,\n * currencies, dates, times, and other data sequentially.\n *\n * This kind exists because different DBMSs have different names for the same\n * collations. This kind maps an arbitrarily-named collation to its\n * real equivalents in the targeted DBMS language.\n */\nconst kind = {\n    validateStructure: (obj) => structureValidator(obj.spec),\n    validateSemantics: async (obj, etcd) => {\n        if (!(obj.spec.characterSet))\n            return;\n        if (!etcd.pathIndex[obj.spec.characterSet.toLowerCase()]) {\n            throw new PreqlError_1.default("f191539e-7758-4a56-81ea-bba873dbfad1", `No CharacterSet found that is named \'${obj.spec.characterSet}\' `\n                + `to be for CharacterSet for Collation \'${obj.metadata.name}\'.`);\n        }\n    },\n};\nexports.default = kind;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/Collation/kind.ts?')},"./source/APIObjectKinds/Collation/schema.ts":
/*!***************************************************!*\
  !*** ./source/APIObjectKinds/Collation/schema.ts ***!
  \***************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst identifierRegexString_1 = __importDefault(__webpack_require__(/*! ../../identifierRegexString */ "./source/identifierRegexString.ts"));\nconst iso3166CountryCodes_1 = __importDefault(__webpack_require__(/*! ../../iso3166CountryCodes */ "./source/iso3166CountryCodes.ts"));\nconst iso639LanguageCodes_1 = __importDefault(__webpack_require__(/*! ../../iso639LanguageCodes */ "./source/iso639LanguageCodes.ts"));\n/**\n * The JSON schema for the `spec` section of a PreQL `Collation`.\n *\n * @see /source/APIObjectKinds/Collation/kind.\n */\nconst schema = {\n    $schema: "http://json-schema.org/draft-07/schema#",\n    $async: true,\n    title: "PreQL Collation Specification Schema",\n    type: "object",\n    additionalProperties: false,\n    properties: {\n        name: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        targetEquivalents: {\n            type: "object",\n            description: "Maps targets to their collation, such as tsql => Latin1_General_100_CS_AS.",\n            additionalProperties: {\n                type: "string",\n            },\n        },\n        country: {\n            type: "string",\n            enum: iso3166CountryCodes_1.default,\n        },\n        language: {\n            type: "string",\n            enum: iso639LanguageCodes_1.default,\n        },\n        caseSensitive: {\n            type: "boolean",\n        },\n        accentSensitive: {\n            type: "boolean",\n        },\n        kanaSensitive: {\n            type: "boolean",\n        },\n        widthSensitive: {\n            type: "boolean",\n        },\n        variationSelectorSensitive: {\n            type: "boolean",\n        },\n        binary: {\n            type: "boolean",\n        },\n        characterSet: {\n            type: "string",\n        },\n    },\n    required: [\n        "name",\n        "targetEquivalents",\n    ],\n};\nexports.default = schema;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/Collation/schema.ts?')},"./source/APIObjectKinds/DataType/kind.ts":
/*!************************************************!*\
  !*** ./source/APIObjectKinds/DataType/kind.ts ***!
  \************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst schema_1 = __importDefault(__webpack_require__(/*! ./schema */ "./source/APIObjectKinds/DataType/schema.ts"));\nconst PreqlError_1 = __importDefault(__webpack_require__(/*! ../../PreqlError */ "./source/PreqlError.ts"));\nconst ajv_1 = __importDefault(__webpack_require__(/*! ../../ajv */ "./source/ajv.ts"));\nconst structureValidator = ajv_1.default.compile(schema_1.default);\n/**\n * Represents a way of encoding a type of data in digital storage. More\n * precisely, it is a rule for a computer on how to store and interpret\n * bytes of data.\n */\nconst kind = {\n    validateStructure: (obj) => structureValidator(obj.spec),\n    validateSemantics: async (obj) => {\n        // Validate regexes\n        if (obj.spec.regexes && obj.spec.regexes.pcre) {\n            Object.entries(obj.spec.regexes.pcre)\n                .forEach((group) => {\n                group[1].forEach((re, index) => {\n                    try {\n                        // eslint-disable-next-line\n                        new RegExp(re.pattern);\n                    }\n                    catch (e) {\n                        throw new PreqlError_1.default("9f65eaff-b915-4889-9d6c-8e3a757b5b4e", `Invalid regular expression for data type \'${obj.metadata.name}\'. `\n                            + `Group \'${group[0]}\', index: ${index}.`);\n                    }\n                });\n            });\n        }\n    },\n};\nexports.default = kind;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/DataType/kind.ts?')},"./source/APIObjectKinds/DataType/schema.ts":
/*!**************************************************!*\
  !*** ./source/APIObjectKinds/DataType/schema.ts ***!
  \**************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst identifierRegexString_1 = __importDefault(__webpack_require__(/*! ../../identifierRegexString */ "./source/identifierRegexString.ts"));\nconst targetsMapSchema = {\n    type: "object",\n    additionalProperties: {\n        type: "object",\n        properties: {\n            nativeType: {\n                type: "string",\n            },\n            // ignoreRegexes: {\n            //     type: "boolean",\n            //     default: false,\n            // },\n            // ignoreSetters: {\n            //     type: "boolean",\n            //     default: false,\n            // },\n            ldapMatchingRule: {\n                type: "string",\n            },\n            ldapOrderingRule: {\n                type: "string",\n            },\n            ldapSubstringMatchingRule: {\n                type: "string",\n            },\n            // See: http://www.openldap.org/doc/admin22/schema.html\n            sup: {\n                type: "string",\n            },\n        },\n        required: [\n            "nativeType",\n        ],\n    },\n};\nconst booleanSchema = {\n    $schema: "http://json-schema.org/draft-07/schema#",\n    $async: true,\n    title: "PreQL String Data Type Specification Schema",\n    type: "object",\n    additionalProperties: false,\n    properties: {\n        jsonEquivalent: {\n            const: "boolean",\n        },\n        targets: targetsMapSchema,\n    },\n    required: [\n        "jsonEquivalent",\n        "targets",\n    ],\n};\nconst stringSchema = {\n    $schema: "http://json-schema.org/draft-07/schema#",\n    $async: true,\n    title: "PreQL String Data Type Specification Schema",\n    type: "object",\n    additionalProperties: false,\n    properties: {\n        jsonEquivalent: {\n            const: "string",\n        },\n        targets: targetsMapSchema,\n        minLength: {\n            type: "number",\n            minimum: 0,\n        },\n        maxLength: {\n            type: "number",\n            minimum: 1,\n        },\n        regexes: {\n            type: "object",\n            description: "A map of regex kinds.",\n            propertyNames: {\n                pattern: "^[A-Za-z0-9]+$",\n                minLength: 1,\n                maxLength: 32,\n            },\n            additionalProperties: {\n                type: "object",\n                description: "A map of match groups. If all regexes under one match "\n                    + "group match the value, the value matches.",\n                additionalProperties: {\n                    type: "array",\n                    items: {\n                        type: "object",\n                        properties: {\n                            pattern: {\n                                type: "string",\n                            },\n                            positive: {\n                                type: "boolean",\n                                default: true,\n                            },\n                        },\n                        required: [\n                            "pattern",\n                        ],\n                    },\n                },\n            },\n        },\n        setters: {\n            type: "array",\n            items: {\n                anyOf: [\n                    // trim\n                    {\n                        type: "object",\n                        properties: {\n                            type: {\n                                type: "string",\n                                enum: ["trim"],\n                            },\n                            side: {\n                                type: "string",\n                                enum: [\n                                    "left",\n                                    "right",\n                                    "both",\n                                ],\n                                default: "both",\n                            },\n                        },\n                        required: [\n                            "type",\n                        ],\n                    },\n                    // substring\n                    {\n                        type: "object",\n                        properties: {\n                            type: {\n                                type: "string",\n                                enum: ["substring"],\n                            },\n                            fromIndex: {\n                                type: "number",\n                                minimum: 0,\n                            },\n                            toIndex: {\n                                type: "number",\n                                minimum: 1,\n                            },\n                        },\n                        required: [\n                            "type",\n                            "fromIndex",\n                        ],\n                    },\n                    // replace\n                    {\n                        type: "object",\n                        properties: {\n                            type: {\n                                type: "string",\n                                enum: ["replace"],\n                            },\n                            from: {\n                                type: "string",\n                            },\n                            to: {\n                                type: "string",\n                            },\n                        },\n                        required: [\n                            "type",\n                            "from",\n                            "to",\n                        ],\n                    },\n                    // case\n                    {\n                        type: "object",\n                        properties: {\n                            type: {\n                                type: "string",\n                                enum: ["case"],\n                            },\n                            casing: {\n                                type: "string",\n                                enum: [\n                                    "upper",\n                                    "lower",\n                                    "title",\n                                    "sentence",\n                                ],\n                            },\n                        },\n                        required: [\n                            "type",\n                            "casing",\n                        ],\n                    },\n                    // pad\n                    {\n                        type: "object",\n                        properties: {\n                            type: {\n                                type: "string",\n                                enum: ["pad"],\n                            },\n                            side: {\n                                type: "string",\n                                enum: [\n                                    "left",\n                                    "right",\n                                ],\n                            },\n                            padLength: {\n                                type: "number",\n                                minimum: 1,\n                            },\n                            padString: {\n                                type: "string",\n                                minLength: 1,\n                            },\n                        },\n                        required: [\n                            "type",\n                            "side",\n                            "padLength",\n                            "padString",\n                        ],\n                    },\n                    // now\n                    {\n                        type: "object",\n                        properties: {\n                            type: {\n                                type: "string",\n                                enum: ["now"],\n                            },\n                        },\n                        required: [\n                            "type",\n                        ],\n                    },\n                ],\n            },\n        },\n    },\n    required: [\n        "jsonEquivalent",\n        "targets",\n    ],\n};\nconst numberSchema = {\n    $schema: "http://json-schema.org/draft-07/schema#",\n    $async: true,\n    title: "PreQL Number Data Type Specification Schema",\n    type: "object",\n    additionalProperties: false,\n    properties: {\n        jsonEquivalent: {\n            type: "string",\n            enum: [\n                "number",\n                "integer",\n            ],\n        },\n        minimum: {\n            type: "number",\n        },\n        maximum: {\n            type: "number",\n        },\n        overflowBehavior: {\n            type: "string",\n            enum: [\n                "ZERO",\n                "MIN",\n                "MAX",\n                "IGNORE",\n                "ERROR",\n            ],\n        },\n        underflowBehavior: {\n            type: "string",\n            enum: [\n                "ZERO",\n                "MIN",\n                "MAX",\n                "IGNORE",\n                "ERROR",\n            ],\n        },\n        targets: targetsMapSchema,\n    },\n    required: [\n        "jsonEquivalent",\n        "targets",\n    ],\n};\nconst enumSchema = {\n    $schema: "http://json-schema.org/draft-07/schema#",\n    $async: true,\n    title: "PreQL Enum Data Type Specification Schema",\n    type: "object",\n    additionalProperties: false,\n    properties: {\n        jsonEquivalent: {\n            const: "string",\n        },\n        name: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        values: {\n            type: "array",\n            items: {\n                type: "string",\n                minLength: 1,\n                maxLength: 32,\n            },\n        },\n    },\n    required: [\n        "jsonEquivalent",\n        "name",\n        "values",\n    ],\n};\n/**\n * The JSON schema for the `spec` section of a PreQL `DataType`.\n *\n * @see /source/APIObjectKinds/DataType/kind.\n */\nconst schema = {\n    $schema: "http://json-schema.org/draft-07/schema#",\n    $async: true,\n    title: "PreQL Data Type Specification Schema",\n    oneOf: [\n        numberSchema,\n        enumSchema,\n        stringSchema,\n        booleanSchema,\n    ],\n};\nexports.default = schema;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/DataType/schema.ts?')},"./source/APIObjectKinds/Database/kind.ts":
/*!************************************************!*\
  !*** ./source/APIObjectKinds/Database/kind.ts ***!
  \************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst ajv_1 = __importDefault(__webpack_require__(/*! ../../ajv */ "./source/ajv.ts"));\nconst PreqlError_1 = __importDefault(__webpack_require__(/*! ../../PreqlError */ "./source/PreqlError.ts"));\nconst schema_1 = __importDefault(__webpack_require__(/*! ./schema */ "./source/APIObjectKinds/Database/schema.ts"));\nconst structureValidator = ajv_1.default.compile(schema_1.default);\n/**\n * Represents a virtually isolated, but not necessarily physically isolated,\n * store of data that exists within a DBMS. Such stores of data are may have\n * constraints between objects, such as `Attribute`s or `Struct`s within them,\n * but are generally independent of other such objects in other databases.\n *\n * In relational databases, these are sometimes called "schema."\n */\nconst kind = {\n    validateStructure: (obj) => structureValidator(obj.spec),\n    validateSemantics: async (obj, etcd) => {\n        // Validate CharacterSet\n        if (obj.spec.characterSet && !etcd.pathIndex[obj.spec.characterSet.toLowerCase()]) {\n            throw new PreqlError_1.default("e4d5bf3b-1063-42dd-8ce6-15e6f98fbb5f", `No CharacterSets found that are named \'${obj.spec.characterSet}\' for Database `\n                + `\'${obj.metadata.name}\' to use.`);\n        }\n        // Validate Collation\n        if (obj.spec.collation && !etcd.pathIndex[obj.spec.collation.toLowerCase()]) {\n            throw new PreqlError_1.default("a3cc2f42-099f-43ee-be57-c8d2aa842712", `No Collations found that are named \'${obj.spec.collation}\' for Database `\n                + `\'${obj.metadata.name}\' to use.`);\n        }\n    },\n};\nexports.default = kind;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/Database/kind.ts?')},"./source/APIObjectKinds/Database/schema.ts":
/*!**************************************************!*\
  !*** ./source/APIObjectKinds/Database/schema.ts ***!
  \**************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst identifierRegexString_1 = __importDefault(__webpack_require__(/*! ../../identifierRegexString */ "./source/identifierRegexString.ts"));\n/**\n * The JSON schema for the `spec` section of a PreQL `Database`.\n *\n * @see /source/APIObjectKinds/Database/kind.\n */\nconst schema = {\n    $schema: "http://json-schema.org/draft-07/schema#",\n    $async: true,\n    title: "PreQL Database Specification Schema",\n    type: "object",\n    additionalProperties: false,\n    properties: {\n        name: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        characterSet: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        collation: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        serverName: {\n            type: "string",\n            // eslint-disable-next-line max-len\n            unicodePattern: "^(?:(\\\\p{L}|\\\\p{N})(?:(\\\\p{L}|\\\\p{N}|-){0,61}(\\\\p{L}|\\\\p{N}))?\\\\.)*(?:(\\\\p{L}|\\\\p{N})(?:(\\\\p{L}|\\\\p{N}|-){0,61}(\\\\p{L}|\\\\p{N}))?\\\\.?)$",\n        },\n        maximumSizeInBytes: {\n            type: "number",\n            minimum: 1,\n        },\n    },\n    required: [\n        "name",\n    ],\n};\nexports.default = schema;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/Database/schema.ts?')},"./source/APIObjectKinds/Entity/kind.ts":
/*!**********************************************!*\
  !*** ./source/APIObjectKinds/Entity/kind.ts ***!
  \**********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst ajv_1 = __importDefault(__webpack_require__(/*! ../../ajv */ "./source/ajv.ts"));\nconst PreqlError_1 = __importDefault(__webpack_require__(/*! ../../PreqlError */ "./source/PreqlError.ts"));\nconst schema_1 = __importDefault(__webpack_require__(/*! ./schema */ "./source/APIObjectKinds/Entity/schema.ts"));\nconst structureValidator = ajv_1.default.compile(schema_1.default);\n/**\n * An object in the real world that is represented by one or more `Struct`s.\n *\n * In a relational database, an `Entity` is virtually meaningless, because\n * relational databases only use structurally rigid tables of data that are\n * innately limited in their ability to describe real world objects alone,\n * but many Object-Relational Mapping (ORM) libraries have the ability to\n * transform these tables into more complex objects in memory or on disk,\n * which are often referred to as "entities." This API object kind describes\n * such entities.\n *\n * In document-oriented databases, this maps to a whole document, whereas\n * each subdocument is a `Struct`, and the document itself is indicated by\n * the `rootStruct` field of the `Entity` API object.\n *\n * @see /source/APIObjectKinds/Struct/kind.\n */\nconst kind = {\n    validateStructure: (obj) => structureValidator(obj.spec),\n    validateSemantics: async (obj, etcd) => {\n        if (!etcd.pathIndex[obj.spec.databaseName.toLowerCase()]) {\n            throw new PreqlError_1.default("eacff4b7-03b2-4495-8153-6f75ddff8854", `No Databases found that are named \'${obj.spec.databaseName}\' for Entity `\n                + `\'${obj.metadata.name}\' to attach to.`);\n        }\n        if (!etcd.pathIndex[`${obj.spec.databaseName}.${obj.spec.rootStruct}`.toLowerCase()]) {\n            throw new PreqlError_1.default("3498526b-f3f4-4c6a-9484-7972d1cc4c29", `No Structs found that are named \'${obj.spec.rootStruct}\' for Entity `\n                + `\'${obj.metadata.name}\' to use as the root Struct.`);\n        }\n    },\n};\nexports.default = kind;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/Entity/kind.ts?')},"./source/APIObjectKinds/Entity/schema.ts":
/*!************************************************!*\
  !*** ./source/APIObjectKinds/Entity/schema.ts ***!
  \************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst identifierRegexString_1 = __importDefault(__webpack_require__(/*! ../../identifierRegexString */ "./source/identifierRegexString.ts"));\n/**\n * The JSON schema for the `spec` section of a PreQL `Entity`.\n *\n * @see /source/APIObjectKinds/Entity/kind.\n */\nconst schema = {\n    $schema: "http://json-schema.org/draft-07/schema#",\n    $async: true,\n    title: "PreQL Entity Specification Schema",\n    type: "object",\n    additionalProperties: false,\n    properties: {\n        name: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        pluralName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        databaseName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        rootStruct: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n    },\n    required: [\n        "name",\n        "databaseName",\n        "rootStruct",\n    ],\n};\nexports.default = schema;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/Entity/schema.ts?')},"./source/APIObjectKinds/Entry/kind.ts":
/*!*********************************************!*\
  !*** ./source/APIObjectKinds/Entry/kind.ts ***!
  \*********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ajv_1 = __importDefault(__webpack_require__(/*! ../../ajv */ \"./source/ajv.ts\"));\nconst PreqlError_1 = __importDefault(__webpack_require__(/*! ../../PreqlError */ \"./source/PreqlError.ts\"));\nconst schema_1 = __importDefault(__webpack_require__(/*! ./schema */ \"./source/APIObjectKinds/Entry/schema.ts\"));\nconst structureValidator = ajv_1.default.compile(schema_1.default);\n/**\n * A simple object whose properties exactly match the `Attribute`s of a\n * `Struct`. It is said to be an \"instance\" of a \"class.\" In a relational\n * database, this would be a row. In a document-oriented database, this\n * is a specific document--not a type of document or category of documents.\n */\nconst kind = {\n    validateStructure: (obj) => structureValidator(obj.spec),\n    validateSemantics: async (obj, etcd) => {\n        const structAttributes = {};\n        etcd.kindIndex.attribute\n            .filter((attr) => (attr.spec.databaseName === obj.spec.databaseName\n            && attr.spec.structName === obj.spec.structName))\n            .forEach((attr) => {\n            structAttributes[attr.spec.name] = attr;\n        });\n        if (Object.keys(obj.spec.values).length === 0) {\n            throw new PreqlError_1.default(\"60c92bba-e86a-4654-b767-a108b19a3425\", `Entry ${obj.metadata.name} must have at least one attribute `\n                + \"in the `.spec.values` object.\");\n        }\n        Object.keys(obj.spec.values).forEach((key) => {\n            // Check that an attribute with that name exists.\n            const matchingAttribute = structAttributes[key];\n            if (!matchingAttribute) {\n                throw new PreqlError_1.default(\"a16cfa1b-e48b-4911-b918-92861a241d7b\", `Attribute '${key}' does not exist on Struct '${obj.spec.structName}' `\n                    + `for Entry '${obj.metadata.name}' to populate.`);\n            }\n            // Check that the attribute's data type is compatible with the Entry's attribute's type.\n            const kindNameKey = `datatype:${matchingAttribute.spec.type}`;\n            const datatype = etcd.kindNameIndex[kindNameKey];\n            if (!datatype) {\n                // This error should never occur.\n                throw new PreqlError_1.default(\"8f5ddbcc-2740-4617-985a-fa2ce339bef8\", `Unrecognized data type '${matchingAttribute.spec.type}'.`);\n            }\n            const valueType = typeof obj.spec.values[key];\n            const attributeJSONType = datatype.spec.jsonEquivalent.toLowerCase();\n            if (attributeJSONType === \"integer\") {\n                if (valueType !== \"number\") {\n                    throw new Error(`Type used in Attribute '${key}' in Entry '${obj.metadata.name}' `\n                        + \"is not an integer, which is the legitimate type of that attribute.\");\n                }\n                if (!(Number.isSafeInteger(obj.spec.values[key]))) {\n                    throw new PreqlError_1.default(\"2a22429e-8bd4-4f06-b01d-c114581fc922\", `Number used in Attribute '${key}' in Entry '${obj.metadata.name}' `\n                        + \"is either too big or small to be safely used as an integer.\");\n                }\n            }\n            else if (valueType !== attributeJSONType) {\n                throw new PreqlError_1.default(\"d8da9998-6f93-406b-a900-a52e51ad7431\", `Type '${valueType}' used in Attribute '${key}' in Entry `\n                    + `'${obj.metadata.name}' is not compatible with the `\n                    + `legitimate type of that Attribute, which is a(n) '${datatype.metadata.name}'.`);\n            }\n            // Check regexes\n            if (valueType === \"string\" && datatype.spec.regexes && datatype.spec.regexes.pcre) {\n                const match = Object.entries(datatype.spec.regexes.pcre)\n                    .some((group) => {\n                    if (!datatype.spec.regexes)\n                        return false;\n                    return Object.entries(datatype.spec.regexes.pcre[group[0]])\n                        .every((re) => {\n                        const regex = new RegExp(re[1].pattern, \"u\");\n                        if (re[1].positive) { // Make sure it matches.\n                            return regex.test(obj.spec.values[key]);\n                        }\n                        // Or, make sure it doesn't match.\n                        return !regex.test(obj.spec.values[key]);\n                    });\n                });\n                if (!match) {\n                    throw new PreqlError_1.default(\"db04d1b5-88a5-47fe-8b37-2b11d26a149c\", `None of the regular expressions for data type '${datatype.metadata.name}' `\n                        + `matched the value of '${key}' for Entry '${obj.metadata.name}'.`);\n                }\n            }\n            // Check minimums and maximums\n            if (valueType === \"number\") {\n                if (datatype.spec.minimum && obj.spec.values[key] < datatype.spec.minimum) {\n                    throw new PreqlError_1.default(\"b9d92500-6ac6-4a4f-80d6-dc63de8a1643\", `Value of '${key}' for Entry '${obj.metadata.name}' was `\n                        + `${obj.spec.values[key]}, but the permissible minimum for `\n                        + `the data type '${datatype.metadata.name}' is ${datatype.spec.minimum}.`);\n                }\n                if (datatype.spec.maximum && obj.spec.values[key] > datatype.spec.maximum) {\n                    throw new PreqlError_1.default(\"15327242-05eb-4cd0-ab78-47f2525bc5b8\", `Value of '${key}' for Entry '${obj.metadata.name}' was `\n                        + `${obj.spec.values[key]}, but the permissible maximum for `\n                        + `the data type '${datatype.metadata.name}' is ${datatype.spec.maximum}.`);\n                }\n            }\n        });\n        Object.values(structAttributes)\n            .forEach((attr) => {\n            if (!(attr.spec.nullable) && !(attr.spec.name in obj.spec.values)) {\n                throw new PreqlError_1.default(\"390b1998-90a7-487d-9145-2a2b5e2c123f\", `Attribute '${attr.spec.name}' in Struct '${attr.spec.databaseName}'.`\n                    + `'${attr.spec.structName}' cannot be null for entry '${obj.metadata.name}'.`);\n            }\n        });\n    },\n};\nexports.default = kind;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/Entry/kind.ts?")},"./source/APIObjectKinds/Entry/schema.ts":
/*!***********************************************!*\
  !*** ./source/APIObjectKinds/Entry/schema.ts ***!
  \***********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst identifierRegexString_1 = __importDefault(__webpack_require__(/*! ../../identifierRegexString */ "./source/identifierRegexString.ts"));\n/**\n * The JSON schema for the `spec` section of a PreQL `Entry`.\n *\n * @see /source/APIObjectKinds/Entry/kind.\n */\nconst schema = {\n    $schema: "http://json-schema.org/draft-07/schema#",\n    $async: true,\n    title: "PreQL Entry Specification Schema",\n    type: "object",\n    additionalProperties: false,\n    properties: {\n        databaseName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        structName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        id: {\n            type: "number",\n            minimum: 1,\n        },\n        layer: {\n            type: "number",\n            minimum: 0,\n            default: 0,\n        },\n        distinguishedName: {\n            type: "string",\n            // TODO: Obviously, more validation is needed than this.\n            unicodePattern: "^[^#].*=.+",\n        },\n        values: {\n            type: "object",\n            propertyNames: {\n                pattern: identifierRegexString_1.default,\n            },\n            additionalProperties: {\n                type: [\n                    "boolean",\n                    "number",\n                    "string",\n                ],\n            },\n        },\n    },\n    required: [\n        "databaseName",\n        "structName",\n        "id",\n    ],\n};\nexports.default = schema;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/Entry/schema.ts?')},"./source/APIObjectKinds/ForeignKey/kind.ts":
/*!**************************************************!*\
  !*** ./source/APIObjectKinds/ForeignKey/kind.ts ***!
  \**************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst ajv_1 = __importDefault(__webpack_require__(/*! ../../ajv */ "./source/ajv.ts"));\nconst PreqlError_1 = __importDefault(__webpack_require__(/*! ../../PreqlError */ "./source/PreqlError.ts"));\nconst prohibitedIdentifiers_1 = __importDefault(__webpack_require__(/*! ../../prohibitedIdentifiers */ "./source/prohibitedIdentifiers.ts"));\nconst schema_1 = __importDefault(__webpack_require__(/*! ./schema */ "./source/APIObjectKinds/ForeignKey/schema.ts"));\nconst structureValidator = ajv_1.default.compile(schema_1.default);\n/**\n * Represents a special kind of `Attribute` that "points" to another\n * another `Struct`. It "points" to this other `Struct` by having the same\n * value as a corresponding `Attribute` in the other `Struct`. Many relational\n * databases automatically enforce these constraints by requiring the\n * `ForeignKey` to point to at least one `Struct`, and preventing the deletion\n * of `Struct`s to which `ForeignKey`s point. In document-oriented databases,\n * `ForeignKey`s are less common, since documents are usually expected to be\n * self-contained.\n *\n * In PreQL, you may not choose the data type of the `ForeignKey`. It is\n * selected for you automatically, because, usually, every DBMS has a\n * data type that is obvious superior for use as a `ForeignKey`. In most\n * relational databases, this will typically be some sort of integer.\n *\n * In document-oriented databases, the effect of `ForeignKey`s is to make\n * their `Struct`s "subdocuments" of another `Struct` within the same\n * `Entity`.\n */\nconst kind = {\n    validateStructure: (obj) => structureValidator(obj.spec),\n    validateSemantics: async (obj, etcd) => {\n        if (prohibitedIdentifiers_1.default.indexOf(obj.spec.name) !== -1) {\n            throw new PreqlError_1.default("74935c2f-ff54-42dc-923d-c66f1c9adcb2", `Attribute name \'${obj.spec.name}\' is prohibited.`);\n        }\n        const databasePath = obj.spec.databaseName.toLowerCase();\n        const childStructPath = `${obj.spec.databaseName}.${obj.spec.childStructName}`.toLowerCase();\n        const parentStructPath = `${obj.spec.databaseName}.${obj.spec.parentStructName}`.toLowerCase();\n        if (!etcd.pathIndex[databasePath]) {\n            throw new PreqlError_1.default("b8fa5bfb-0033-45ec-b455-44ca82be6c46", `No Databases found that are named \'${obj.spec.databaseName}\' for ${obj.kind} `\n                + `\'${obj.metadata.name}\' to attach to.`);\n        }\n        if (!etcd.pathIndex[childStructPath]) {\n            throw new PreqlError_1.default("797317ff-ac7e-421f-92ce-e476624c04cc", `No Structs found that are named \'${obj.spec.childStructName}\' for ${obj.kind} `\n                + `\'${obj.metadata.name}\' to attach to.`);\n        }\n        if (!etcd.pathIndex[parentStructPath]) {\n            throw new PreqlError_1.default("9a15aca4-830c-4b30-bc6b-af76b5b663df", `No Structs found that are named \'${obj.spec.parentStructName}\' for ${obj.kind} `\n                + `\'${obj.metadata.name}\' to attach to.`);\n        }\n    },\n};\nexports.default = kind;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/ForeignKey/kind.ts?')},"./source/APIObjectKinds/ForeignKey/schema.ts":
/*!****************************************************!*\
  !*** ./source/APIObjectKinds/ForeignKey/schema.ts ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst identifierRegexString_1 = __importDefault(__webpack_require__(/*! ../../identifierRegexString */ "./source/identifierRegexString.ts"));\nconst objectIdentifierRegexString_1 = __importDefault(__webpack_require__(/*! ../../objectIdentifierRegexString */ "./source/objectIdentifierRegexString.ts"));\nconst foreignKeyChangeAction = {\n    type: "string",\n    enum: [\n        "no action",\n        "cascade",\n        "set null",\n    ],\n    default: "no action",\n};\n/**\n * The JSON schema for the `spec` section of a PreQL `ForeignKey`.\n *\n * @see /source/APIObjectKinds/ForeignKey/kind.\n */\nconst schema = {\n    $schema: "http://json-schema.org/draft-07/schema#",\n    $async: true,\n    title: "PreQL Foreign Key Specification Schema",\n    type: "object",\n    additionalProperties: false,\n    properties: {\n        databaseName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        parentStructName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        childStructName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        name: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        nullable: {\n            type: "boolean",\n            default: true,\n        },\n        onDeleteAction: foreignKeyChangeAction,\n        onUpdateAction: foreignKeyChangeAction,\n        objectIdentifier: {\n            type: "string",\n            pattern: objectIdentifierRegexString_1.default,\n        },\n        otherNames: {\n            type: "array",\n            items: {\n                type: "string",\n                pattern: identifierRegexString_1.default,\n            },\n        },\n    },\n    required: [\n        "databaseName",\n        "parentStructName",\n        "childStructName",\n        "name",\n    ],\n};\nexports.default = schema;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/ForeignKey/schema.ts?')},"./source/APIObjectKinds/PlainIndex/kind.ts":
/*!**************************************************!*\
  !*** ./source/APIObjectKinds/PlainIndex/kind.ts ***!
  \**************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst ajv_1 = __importDefault(__webpack_require__(/*! ../../ajv */ "./source/ajv.ts"));\nconst validateIndex_1 = __importDefault(__webpack_require__(/*! ../validateIndex */ "./source/APIObjectKinds/validateIndex.ts"));\nconst schema_1 = __importDefault(__webpack_require__(/*! ./schema */ "./source/APIObjectKinds/PlainIndex/schema.ts"));\nconst structureValidator = ajv_1.default.compile(schema_1.default);\n/**\n * Represents a pre-sorting of data on the basis of selected `Attribute`s in a\n * DBMS to speed up queries.\n */\nconst kind = {\n    validateStructure: (obj) => structureValidator(obj.spec),\n    validateSemantics: validateIndex_1.default,\n};\nexports.default = kind;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/PlainIndex/kind.ts?')},"./source/APIObjectKinds/PlainIndex/schema.ts":
/*!****************************************************!*\
  !*** ./source/APIObjectKinds/PlainIndex/schema.ts ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst identifierRegexString_1 = __importDefault(__webpack_require__(/*! ../../identifierRegexString */ "./source/identifierRegexString.ts"));\n/**\n * The JSON schema for the `spec` section of a PreQL `PlainIndex`.\n *\n * @see /source/APIObjectKinds/PlainIndex/kind.\n */\nconst schema = {\n    $schema: "http://json-schema.org/draft-07/schema#",\n    $async: true,\n    title: "PreQL Primary Index Specification Schema",\n    type: "object",\n    additionalProperties: false,\n    properties: {\n        name: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        structName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        entityName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        databaseName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        // eslint-disable-next-line max-len\n        // See: https://docs.microsoft.com/en-us/sql/relational-databases/indexes/clustered-and-nonclustered-indexes-described?view=sql-server-2017\n        clustered: {\n            type: "boolean",\n            default: false,\n        },\n        sparse: {\n            type: "boolean",\n            default: false,\n        },\n        // eslint-disable-next-line max-len\n        // See: https://docs.microsoft.com/en-us/sql/relational-databases/indexes/create-indexes-with-included-columns?view=sql-server-2017\n        keyAttributes: {\n            type: "array",\n            items: {\n                type: "object",\n                properties: {\n                    name: {\n                        type: "string",\n                        pattern: identifierRegexString_1.default,\n                    },\n                    ascending: {\n                        type: "boolean",\n                        default: true,\n                    },\n                },\n                required: [\n                    "name",\n                ],\n            },\n        },\n        includedAttributes: {\n            type: "array",\n            items: {\n                type: "object",\n                properties: {\n                    name: {\n                        type: "string",\n                        pattern: identifierRegexString_1.default,\n                    },\n                    ascending: {\n                        type: "boolean",\n                        default: true,\n                    },\n                },\n                required: [\n                    "name",\n                ],\n            },\n        },\n    },\n    required: [\n        "name",\n        "structName",\n        "databaseName",\n        "keyAttributes",\n    ],\n};\nexports.default = schema;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/PlainIndex/schema.ts?')},"./source/APIObjectKinds/Postamble/kind.ts":
/*!*************************************************!*\
  !*** ./source/APIObjectKinds/Postamble/kind.ts ***!
  \*************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst ajv_1 = __importDefault(__webpack_require__(/*! ../../ajv */ "./source/ajv.ts"));\nconst schema_1 = __importDefault(__webpack_require__(/*! ./schema */ "./source/APIObjectKinds/Postamble/schema.ts"));\nconst structureValidator = ajv_1.default.compile(schema_1.default);\n/**\n * Arbitrary, commented-out text at the end of a generated script.\n */\nconst kind = {\n    validateStructure: (obj) => structureValidator(obj.spec),\n    validateSemantics: () => Promise.resolve(),\n};\nexports.default = kind;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/Postamble/kind.ts?')},"./source/APIObjectKinds/Postamble/schema.ts":
/*!***************************************************!*\
  !*** ./source/APIObjectKinds/Postamble/schema.ts ***!
  \***************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\n/**\n * The JSON schema for the `spec` section of a PreQL `Postamble`.\n *\n * @see /source/APIObjectKinds/Postamble/kind.\n */\nconst schema = {\n    $schema: "http://json-schema.org/draft-07/schema#",\n    $async: true,\n    title: "PreQL Postamble Specification Schema",\n    description: "This gets added to the bottom of a generated script.",\n    type: "object",\n    additionalProperties: false,\n    properties: {\n        uncommentedText: {\n            type: "string",\n        },\n    },\n    required: [\n        "uncommentedText",\n    ],\n};\nexports.default = schema;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/Postamble/schema.ts?')},"./source/APIObjectKinds/Preamble/kind.ts":
/*!************************************************!*\
  !*** ./source/APIObjectKinds/Preamble/kind.ts ***!
  \************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst ajv_1 = __importDefault(__webpack_require__(/*! ../../ajv */ "./source/ajv.ts"));\nconst schema_1 = __importDefault(__webpack_require__(/*! ./schema */ "./source/APIObjectKinds/Preamble/schema.ts"));\nconst structureValidator = ajv_1.default.compile(schema_1.default);\n/**\n * Arbitrary, commented-out text at the start of a generated script.\n */\nconst kind = {\n    validateStructure: (obj) => structureValidator(obj.spec),\n    validateSemantics: () => Promise.resolve(),\n};\nexports.default = kind;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/Preamble/kind.ts?')},"./source/APIObjectKinds/Preamble/schema.ts":
/*!**************************************************!*\
  !*** ./source/APIObjectKinds/Preamble/schema.ts ***!
  \**************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\n/**\n * The JSON schema for the `spec` section of a PreQL `Preamble`.\n *\n * @see /source/APIObjectKinds/Preamble/kind.\n */\nconst schema = {\n    $schema: "http://json-schema.org/draft-07/schema#",\n    $async: true,\n    title: "PreQL Preamble Specification Schema",\n    description: "This gets added to the top of a generated script.",\n    type: "object",\n    additionalProperties: false,\n    properties: {\n        uncommentedText: {\n            type: "string",\n        },\n    },\n    required: [\n        "uncommentedText",\n    ],\n};\nexports.default = schema;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/Preamble/schema.ts?')},"./source/APIObjectKinds/Server/kind.ts":
/*!**********************************************!*\
  !*** ./source/APIObjectKinds/Server/kind.ts ***!
  \**********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst schema_1 = __importDefault(__webpack_require__(/*! ./schema */ "./source/APIObjectKinds/Server/schema.ts"));\nconst ajv_1 = __importDefault(__webpack_require__(/*! ../../ajv */ "./source/ajv.ts"));\nconst PreqlError_1 = __importDefault(__webpack_require__(/*! ../../PreqlError */ "./source/PreqlError.ts"));\nconst structureValidator = ajv_1.default.compile(schema_1.default);\n/**\n * A physical or virtual computer that hosts a DBMS.\n */\nconst kind = {\n    validateStructure: (obj) => structureValidator(obj.spec),\n    validateSemantics: async (obj, etcd) => {\n        // Validate CharacterSet\n        if (obj.spec.characterSet && !etcd.pathIndex[obj.spec.characterSet.toLowerCase()]) {\n            throw new PreqlError_1.default("5f9536b1-4802-4324-aedc-6ad4a59d405d", `No CharacterSets found that are named \'${obj.spec.characterSet}\' for Server `\n                + `\'${obj.metadata.name}\' to use.`);\n        }\n        // Validate Collation\n        if (obj.spec.collation && !etcd.pathIndex[obj.spec.collation.toLowerCase()]) {\n            throw new PreqlError_1.default("7b8ab323-1e2b-4bf6-81c1-619b3a523b58", `No Collations found that are named \'${obj.spec.collation}\' for Server `\n                + `\'${obj.metadata.name}\' to use.`);\n        }\n    },\n};\nexports.default = kind;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/Server/kind.ts?')},"./source/APIObjectKinds/Server/schema.ts":
/*!************************************************!*\
  !*** ./source/APIObjectKinds/Server/schema.ts ***!
  \************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst Locale_1 = __importDefault(__webpack_require__(/*! ../../JSONSchema/Locale */ "./source/JSONSchema/Locale.ts"));\nconst timezones_1 = __importDefault(__webpack_require__(/*! ../../timezones */ "./source/timezones.ts"));\n/**\n * The JSON schema for the `spec` section of a PreQL `Server`.\n *\n * @see /source/APIObjectKinds/Server/kind.\n */\nconst schema = {\n    $schema: "http://json-schema.org/draft-07/schema#",\n    $async: true,\n    title: "PreQL Server Specification Schema",\n    description: "This is not really used for anything.",\n    type: "object",\n    additionalProperties: false,\n    properties: {\n        name: {\n            type: "string",\n        },\n        protocol: {\n            // RFC 3987: scheme = ALPHA *( ALPHA / DIGIT / "+" / "-" / "." )\n            type: "string",\n            pattern: "^[A-Za-z][A-Za-z0-9\\\\+\\\\-\\\\.]*$",\n        },\n        hostname: {\n            type: "string",\n            // eslint-disable-next-line max-len\n            unicodePattern: "^(?:(\\\\p{L}|\\\\p{N})(?:(\\\\p{L}|\\\\p{N}|-){0,61}(\\\\p{L}|\\\\p{N}))?\\\\.)*(?:(\\\\p{L}|\\\\p{N})(?:(\\\\p{L}|\\\\p{N}|-){0,61}(\\\\p{L}|\\\\p{N}))?\\\\.?)$",\n            maxLength: 253,\n        },\n        port: {\n            type: "number",\n            minimum: 0,\n            maximum: 65535,\n        },\n        tlsSupported: {\n            type: "boolean",\n        },\n        starttlsSupported: {\n            type: "boolean",\n        },\n        characterSet: {\n            type: "string",\n        },\n        collation: {\n            type: "string",\n        },\n        timezone: {\n            type: "string",\n            enum: timezones_1.default,\n        },\n        locale: {\n            type: "object",\n            properties: {\n                dateAndTimeFormat: Locale_1.default,\n                language: Locale_1.default,\n                monetaryFormat: Locale_1.default,\n                numberFormat: Locale_1.default,\n            },\n            required: [],\n        },\n        options: {\n            type: "object",\n            additionalProperties: {\n                type: "string",\n            },\n        },\n    },\n    required: [\n        "name",\n        "hostname",\n        "protocol",\n    ],\n};\nexports.default = schema;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/Server/schema.ts?')},"./source/APIObjectKinds/SpatialIndex/kind.ts":
/*!****************************************************!*\
  !*** ./source/APIObjectKinds/SpatialIndex/kind.ts ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst ajv_1 = __importDefault(__webpack_require__(/*! ../../ajv */ "./source/ajv.ts"));\nconst validateIndex_1 = __importDefault(__webpack_require__(/*! ../validateIndex */ "./source/APIObjectKinds/validateIndex.ts"));\nconst schema_1 = __importDefault(__webpack_require__(/*! ./schema */ "./source/APIObjectKinds/SpatialIndex/schema.ts"));\nconst structureValidator = ajv_1.default.compile(schema_1.default);\n/**\n * Represents a pre-sorting of data on the basis of selected `Attribute`s in a\n * DBMS that describe coordinates in space to speed up queries. The space\n * described may be, but is not restricted to, three-dimensional space,\n * two-dimensional space, and geographic location on a planet.\n */\nconst kind = {\n    validateStructure: (obj) => structureValidator(obj.spec),\n    validateSemantics: validateIndex_1.default,\n};\nexports.default = kind;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/SpatialIndex/kind.ts?')},"./source/APIObjectKinds/SpatialIndex/schema.ts":
/*!******************************************************!*\
  !*** ./source/APIObjectKinds/SpatialIndex/schema.ts ***!
  \******************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst identifierRegexString_1 = __importDefault(__webpack_require__(/*! ../../identifierRegexString */ "./source/identifierRegexString.ts"));\n/**\n * The JSON schema for the `spec` section of a PreQL `SpatialIndex`.\n *\n * @see /source/APIObjectKinds/SpatialIndex/kind.\n */\nconst schema = {\n    $schema: "http://json-schema.org/draft-07/schema#",\n    $async: true,\n    title: "PreQL Primary Index Specification Schema",\n    type: "object",\n    additionalProperties: false,\n    properties: {\n        name: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        structName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        entityName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        databaseName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        // eslint-disable-next-line max-len\n        // See: https://docs.microsoft.com/en-us/sql/relational-databases/indexes/clustered-and-nonclustered-indexes-described?view=sql-server-2017\n        clustered: {\n            type: "boolean",\n            default: false,\n        },\n        sparse: {\n            type: "boolean",\n            default: false,\n        },\n        // eslint-disable-next-line max-len\n        // See: https://docs.microsoft.com/en-us/sql/relational-databases/indexes/create-indexes-with-included-columns?view=sql-server-2017\n        keyAttributes: {\n            type: "array",\n            items: {\n                type: "object",\n                properties: {\n                    name: {\n                        type: "string",\n                        pattern: identifierRegexString_1.default,\n                    },\n                    ascending: {\n                        type: "boolean",\n                        default: true,\n                    },\n                },\n                required: [\n                    "name",\n                ],\n            },\n        },\n        includedAttributes: {\n            type: "array",\n            items: {\n                type: "object",\n                properties: {\n                    name: {\n                        type: "string",\n                        pattern: identifierRegexString_1.default,\n                    },\n                    ascending: {\n                        type: "boolean",\n                        default: true,\n                    },\n                },\n                required: [\n                    "name",\n                ],\n            },\n        },\n    },\n    required: [\n        "name",\n        "structName",\n        "databaseName",\n        "keyAttributes",\n    ],\n};\nexports.default = schema;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/SpatialIndex/schema.ts?')},"./source/APIObjectKinds/Struct/kind.ts":
/*!**********************************************!*\
  !*** ./source/APIObjectKinds/Struct/kind.ts ***!
  \**********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst ajv_1 = __importDefault(__webpack_require__(/*! ../../ajv */ "./source/ajv.ts"));\nconst PreqlError_1 = __importDefault(__webpack_require__(/*! ../../PreqlError */ "./source/PreqlError.ts"));\nconst schema_1 = __importDefault(__webpack_require__(/*! ./schema */ "./source/APIObjectKinds/Struct/schema.ts"));\nconst structureValidator = ajv_1.default.compile(schema_1.default);\n/**\n * A collection of a finite number of `Attribute`s that describes a category\n * of `Entry`. In a relational database, this is a table. In a\n * document-oriented database, this may be a "document" or "subdocument."\n * In JSON, this is referred to as an "object." It does not describe an\n * instance of something, but a category of an instance.\n */\nconst kind = {\n    validateStructure: (obj) => structureValidator(obj.spec),\n    validateSemantics: async (obj, etcd) => {\n        const databasePath = obj.spec.databaseName.toLowerCase();\n        const entityPath = `${obj.spec.databaseName}.$${obj.spec.entityName}`.toLowerCase();\n        const characterSetPath = (obj.spec.characterSet || "").toLowerCase();\n        const collationPath = (obj.spec.collation || "").toLowerCase();\n        if (!etcd.pathIndex[databasePath]) {\n            throw new PreqlError_1.default("3d98139e-db3d-42de-83a7-1ef389c6ed2c", `No Databases found that are named \'${obj.spec.databaseName}\' for Struct `\n                + `\'${obj.metadata.name}\' to attach to.`);\n        }\n        if (obj.spec.entityName && !etcd.pathIndex[entityPath]) {\n            throw new PreqlError_1.default("6fe4e182-ef83-48a4-a282-2a418009174c", `No Entities found that are named \'${obj.spec.entityName}\' for Struct `\n                + `\'${obj.metadata.name}\' to be associated with.`);\n        }\n        const attributeFound = (etcd.kindIndex.attribute || [])\n            .some((attr) => (attr.spec.databaseName === obj.spec.databaseName\n            && attr.spec.structName === obj.spec.name));\n        const foreignKeyFound = (etcd.kindIndex.foreignkey || [])\n            .some((attr) => (attr.spec.databaseName === obj.spec.databaseName\n            && attr.spec.childStructName === obj.spec.name));\n        if (!attributeFound && !foreignKeyFound) {\n            throw new PreqlError_1.default("2affcfab-2f7b-46be-84cf-4797dc8be7a6", "No Attributes or ForeignKeys found for Struct"\n                + `\'${obj.metadata.name}\'. Every Struct must have at least `\n                + "one Attribute or ForeignKey.");\n        }\n        if (obj.spec.characterSet && !etcd.pathIndex[characterSetPath]) {\n            throw new PreqlError_1.default("0d5be372-5fb4-401e-869b-06f5108d9f2b", `No CharacterSets found that are named \'${obj.spec.characterSet}\' for Struct `\n                + `\'${obj.metadata.name}\' to use.`);\n        }\n        if (obj.spec.collation && !etcd.pathIndex[collationPath]) {\n            throw new PreqlError_1.default("33313e20-bf74-4aa9-8c0a-a8e2637b5d4e", `No Collations found that are named \'${obj.spec.collation}\' for Struct `\n                + `\'${obj.metadata.name}\' to use.`);\n        }\n    },\n};\nexports.default = kind;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/Struct/kind.ts?')},"./source/APIObjectKinds/Struct/schema.ts":
/*!************************************************!*\
  !*** ./source/APIObjectKinds/Struct/schema.ts ***!
  \************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst identifierRegexString_1 = __importDefault(__webpack_require__(/*! ../../identifierRegexString */ "./source/identifierRegexString.ts"));\nconst objectIdentifierRegexString_1 = __importDefault(__webpack_require__(/*! ../../objectIdentifierRegexString */ "./source/objectIdentifierRegexString.ts"));\n/**\n * The JSON schema for the `spec` section of a PreQL `Struct`.\n *\n * @see /source/APIObjectKinds/Struct/kind.\n */\nconst schema = {\n    $schema: "http://json-schema.org/draft-07/schema#",\n    $async: true,\n    title: "PreQL Struct Specification Schema",\n    type: "object",\n    additionalProperties: false,\n    properties: {\n        name: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        pluralName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        entityName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        databaseName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        characterSet: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        collation: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        objectIdentifier: {\n            type: "string",\n            pattern: objectIdentifierRegexString_1.default,\n        },\n    },\n    required: [\n        "name",\n        // \'entityName\',\n        "databaseName",\n    ],\n};\nexports.default = schema;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/Struct/schema.ts?')},"./source/APIObjectKinds/TextIndex/kind.ts":
/*!*************************************************!*\
  !*** ./source/APIObjectKinds/TextIndex/kind.ts ***!
  \*************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ajv_1 = __importDefault(__webpack_require__(/*! ../../ajv */ \"./source/ajv.ts\"));\nconst PreqlError_1 = __importDefault(__webpack_require__(/*! ../../PreqlError */ \"./source/PreqlError.ts\"));\nconst schema_1 = __importDefault(__webpack_require__(/*! ./schema */ \"./source/APIObjectKinds/TextIndex/schema.ts\"));\nconst structureValidator = ajv_1.default.compile(schema_1.default);\n/**\n * Represents a pre-sorting of data on the basis of selected textual\n * `Attribute`s in a DBMS on the basis of the words or phrases they contain\n * to speed up queries.\n */\nconst kind = {\n    validateStructure: (obj) => structureValidator(obj.spec),\n    validateSemantics: async (obj, etcd) => {\n        const databasePath = obj.spec.databaseName.toLowerCase();\n        const entityPath = `${obj.spec.databaseName}.$${obj.spec.entityName}`.toLowerCase();\n        const structPath = [obj.spec.databaseName, obj.spec.structName].join(\".\").toLowerCase();\n        if (!etcd.pathIndex[databasePath]) {\n            throw new PreqlError_1.default(\"37caf6cd-29d8-45ef-8697-f73ce1ee23ae\", `No Databases found that are named '${obj.spec.databaseName}' for ${obj.kind} `\n                + `'${obj.metadata.name}' to attach to.`);\n        }\n        if (obj.spec.entityName && !etcd.pathIndex[entityPath]) {\n            throw new PreqlError_1.default(\"8f3b2610-3308-4b65-b180-ead4f452c9c1\", `No Entities found that are named '${obj.spec.entityName}' for ${obj.kind} `\n                + `'${obj.metadata.name}' to be associated with.`);\n        }\n        if (!etcd.pathIndex[structPath]) {\n            throw new PreqlError_1.default(\"bc7692ff-9eb1-4258-b9ac-d95b1448153f\", `No Structs found that are named '${obj.spec.structName}' for ${obj.kind} `\n                + `'${obj.metadata.name}' to attach to.`);\n        }\n        obj.spec.keyAttributes\n            .map((attr) => (`${obj.spec.databaseName}.${obj.spec.structName}.${attr.name}`.toLowerCase()))\n            .forEach((path) => {\n            const attr = etcd.pathIndex[path];\n            if (!attr) {\n                throw new PreqlError_1.default(\"d80009c9-894d-4c0f-8871-1335e826cf16\", `Attribute with path '${path}' not found for ${obj.kind} `\n                    + `'${obj.metadata.name}' to index.`);\n            }\n            const kindAndName = `datatype:${attr.spec.type.toLowerCase()}`;\n            const dataType = etcd.kindNameIndex[kindAndName];\n            if (!dataType) {\n                throw new PreqlError_1.default(\"06fc9208-5772-47d6-8747-dffa6ac58d42\", `No such DataType '${attr.spec.type}'.`);\n            }\n            if (dataType.spec.jsonEquivalent !== \"string\") {\n                throw new PreqlError_1.default(\"8ab69478-d407-4a60-95ce-d3dd248cc5ce\", `TextIndex '${obj.metadata.name}' cannot use Attribute `\n                    + `'${attr.metadata.name}' because it DataType `\n                    + `'${dataType.metadata.name}' is not fundamentally string-like, `\n                    + \"as determined by the DataType's `jsonEquivalent` property.\");\n            }\n        });\n        if (obj.spec.includedAttributes) {\n            obj.spec.includedAttributes\n                .map((attr) => (`${obj.spec.databaseName}.${obj.spec.structName}.${attr.name}`.toLowerCase()))\n                .forEach((path) => {\n                const attr = etcd.pathIndex[path];\n                if (!attr) {\n                    throw new PreqlError_1.default(\"e1b74181-e619-459f-850b-28731f243610\", `Attribute with path '${path}' not found for ${obj.kind} `\n                        + `'${obj.metadata.name}' to include.`);\n                }\n                const kindAndName = `datatype:${attr.spec.type.toLowerCase()}`;\n                const dataType = etcd.kindNameIndex[kindAndName];\n                if (!dataType) {\n                    throw new PreqlError_1.default(\"d8f0c648-fbb0-4d3e-8df2-e017f7d2a1ee\", `No such DataType '${attr.spec.type}'.`);\n                }\n                if (dataType.spec.jsonEquivalent !== \"string\") {\n                    throw new PreqlError_1.default(\"a40a63ba-547e-4caa-98cb-2f6b2bfff20d\", `TextIndex '${obj.metadata.name}' cannot use Attribute `\n                        + `'${attr.metadata.name}' because it DataType `\n                        + `'${dataType.metadata.name}' is not fundamentally string-like, `\n                        + \"as determined by the DataType's `jsonEquivalent` property.\");\n                }\n            });\n        }\n    },\n};\nexports.default = kind;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/TextIndex/kind.ts?")},"./source/APIObjectKinds/TextIndex/schema.ts":
/*!***************************************************!*\
  !*** ./source/APIObjectKinds/TextIndex/schema.ts ***!
  \***************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst identifierRegexString_1 = __importDefault(__webpack_require__(/*! ../../identifierRegexString */ "./source/identifierRegexString.ts"));\n/**\n * The JSON schema for the `spec` section of a PreQL `TextIndex`.\n *\n * @see /source/APIObjectKinds/TextIndex/kind.\n */\nconst schema = {\n    $schema: "http://json-schema.org/draft-07/schema#",\n    $async: true,\n    title: "PreQL Text Index Specification Schema",\n    type: "object",\n    additionalProperties: false,\n    properties: {\n        name: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        structName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        entityName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        databaseName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        // eslint-disable-next-line max-len\n        // See: https://docs.microsoft.com/en-us/sql/relational-databases/indexes/clustered-and-nonclustered-indexes-described?view=sql-server-2017\n        clustered: {\n            type: "boolean",\n            default: false,\n        },\n        sparse: {\n            type: "boolean",\n            default: false,\n        },\n        // eslint-disable-next-line max-len\n        // See: https://docs.microsoft.com/en-us/sql/relational-databases/indexes/create-indexes-with-included-columns?view=sql-server-2017\n        keyAttributes: {\n            type: "array",\n            items: {\n                type: "object",\n                properties: {\n                    name: {\n                        type: "string",\n                        pattern: identifierRegexString_1.default,\n                    },\n                    ascending: {\n                        type: "boolean",\n                        default: true,\n                    },\n                },\n                required: [\n                    "name",\n                ],\n            },\n        },\n        includedAttributes: {\n            type: "array",\n            items: {\n                type: "object",\n                properties: {\n                    name: {\n                        type: "string",\n                        pattern: identifierRegexString_1.default,\n                    },\n                    ascending: {\n                        type: "boolean",\n                        default: true,\n                    },\n                },\n                required: [\n                    "name",\n                ],\n            },\n        },\n    },\n    required: [\n        "name",\n        "structName",\n        "databaseName",\n        "keyAttributes",\n    ],\n};\nexports.default = schema;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/TextIndex/schema.ts?')},"./source/APIObjectKinds/UniqueIndex/kind.ts":
/*!***************************************************!*\
  !*** ./source/APIObjectKinds/UniqueIndex/kind.ts ***!
  \***************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst ajv_1 = __importDefault(__webpack_require__(/*! ../../ajv */ "./source/ajv.ts"));\nconst validateIndex_1 = __importDefault(__webpack_require__(/*! ../validateIndex */ "./source/APIObjectKinds/validateIndex.ts"));\nconst schema_1 = __importDefault(__webpack_require__(/*! ./schema */ "./source/APIObjectKinds/UniqueIndex/schema.ts"));\nconst structureValidator = ajv_1.default.compile(schema_1.default);\n/**\n * Represents a pre-sorting of data on the basis of selected `Attribute`s in a\n * DBMS to speed up queries, but with an additional constraint that all\n * instances of a `Struct` in a DBMS have unique values for the indexed\n * `Attribute`.\n */\nconst kind = {\n    validateStructure: (obj) => structureValidator(obj.spec),\n    validateSemantics: validateIndex_1.default,\n};\nexports.default = kind;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/UniqueIndex/kind.ts?')},"./source/APIObjectKinds/UniqueIndex/schema.ts":
/*!*****************************************************!*\
  !*** ./source/APIObjectKinds/UniqueIndex/schema.ts ***!
  \*****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst identifierRegexString_1 = __importDefault(__webpack_require__(/*! ../../identifierRegexString */ "./source/identifierRegexString.ts"));\n/**\n * The JSON schema for the `spec` section of a PreQL `UniqueIndex`.\n *\n * @see /source/APIObjectKinds/UniqueIndex/kind.\n */\nconst schema = {\n    $schema: "http://json-schema.org/draft-07/schema#",\n    $async: true,\n    title: "PreQL Unique Index Specification Schema",\n    type: "object",\n    additionalProperties: false,\n    properties: {\n        name: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        structName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        entityName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        databaseName: {\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        // eslint-disable-next-line\n        // See: https://docs.microsoft.com/en-us/sql/relational-databases/indexes/clustered-and-nonclustered-indexes-described?view=sql-server-2017\n        clustered: {\n            type: "boolean",\n            default: false,\n        },\n        sparse: {\n            type: "boolean",\n            default: false,\n        },\n        // eslint-disable-next-line\n        // See: https://docs.microsoft.com/en-us/sql/relational-databases/indexes/create-indexes-with-included-columns?view=sql-server-2017\n        keyAttributes: {\n            type: "array",\n            items: {\n                type: "object",\n                properties: {\n                    name: {\n                        type: "string",\n                        pattern: identifierRegexString_1.default,\n                    },\n                    ascending: {\n                        type: "boolean",\n                        default: true,\n                    },\n                },\n                required: [\n                    "name",\n                ],\n            },\n        },\n        includedAttributes: {\n            type: "array",\n            items: {\n                type: "object",\n                properties: {\n                    name: {\n                        type: "string",\n                        pattern: identifierRegexString_1.default,\n                    },\n                    ascending: {\n                        type: "boolean",\n                        default: true,\n                    },\n                },\n                required: [\n                    "name",\n                ],\n            },\n        },\n    },\n    required: [\n        "name",\n        "structName",\n        "databaseName",\n        "keyAttributes",\n    ],\n};\nexports.default = schema;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/UniqueIndex/schema.ts?')},"./source/APIObjectKinds/index.ts":
/*!****************************************!*\
  !*** ./source/APIObjectKinds/index.ts ***!
  \****************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst kind_1 = __importDefault(__webpack_require__(/*! ./Attribute/kind */ "./source/APIObjectKinds/Attribute/kind.ts"));\nconst kind_2 = __importDefault(__webpack_require__(/*! ./CharacterSet/kind */ "./source/APIObjectKinds/CharacterSet/kind.ts"));\nconst kind_3 = __importDefault(__webpack_require__(/*! ./Collation/kind */ "./source/APIObjectKinds/Collation/kind.ts"));\nconst kind_4 = __importDefault(__webpack_require__(/*! ./Database/kind */ "./source/APIObjectKinds/Database/kind.ts"));\nconst kind_5 = __importDefault(__webpack_require__(/*! ./DataType/kind */ "./source/APIObjectKinds/DataType/kind.ts"));\nconst kind_6 = __importDefault(__webpack_require__(/*! ./Entity/kind */ "./source/APIObjectKinds/Entity/kind.ts"));\nconst kind_7 = __importDefault(__webpack_require__(/*! ./Entry/kind */ "./source/APIObjectKinds/Entry/kind.ts"));\nconst kind_8 = __importDefault(__webpack_require__(/*! ./ForeignKey/kind */ "./source/APIObjectKinds/ForeignKey/kind.ts"));\nconst kind_9 = __importDefault(__webpack_require__(/*! ./PlainIndex/kind */ "./source/APIObjectKinds/PlainIndex/kind.ts"));\nconst kind_10 = __importDefault(__webpack_require__(/*! ./Postamble/kind */ "./source/APIObjectKinds/Postamble/kind.ts"));\nconst kind_11 = __importDefault(__webpack_require__(/*! ./Preamble/kind */ "./source/APIObjectKinds/Preamble/kind.ts"));\nconst kind_12 = __importDefault(__webpack_require__(/*! ./Server/kind */ "./source/APIObjectKinds/Server/kind.ts"));\nconst kind_13 = __importDefault(__webpack_require__(/*! ./SpatialIndex/kind */ "./source/APIObjectKinds/SpatialIndex/kind.ts"));\nconst kind_14 = __importDefault(__webpack_require__(/*! ./Struct/kind */ "./source/APIObjectKinds/Struct/kind.ts"));\nconst kind_15 = __importDefault(__webpack_require__(/*! ./TextIndex/kind */ "./source/APIObjectKinds/TextIndex/kind.ts"));\nconst kind_16 = __importDefault(__webpack_require__(/*! ./UniqueIndex/kind */ "./source/APIObjectKinds/UniqueIndex/kind.ts"));\nconst kinds = {\n    database: kind_4.default,\n    entity: kind_6.default,\n    struct: kind_14.default,\n    attribute: kind_1.default,\n    plainindex: kind_9.default,\n    uniqueindex: kind_16.default,\n    textindex: kind_15.default,\n    spatialindex: kind_13.default,\n    server: kind_12.default,\n    preamble: kind_11.default,\n    postamble: kind_10.default,\n    foreignkey: kind_8.default,\n    datatype: kind_5.default,\n    entry: kind_7.default,\n    characterset: kind_2.default,\n    collation: kind_3.default,\n};\nexports.default = kinds;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/index.ts?')},"./source/APIObjectKinds/validateIndex.ts":
/*!************************************************!*\
  !*** ./source/APIObjectKinds/validateIndex.ts ***!
  \************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PreqlError_1 = __importDefault(__webpack_require__(/*! ../PreqlError */ \"./source/PreqlError.ts\"));\n/**\n * Since all of the index object kinds are so similar, this semantic validation\n * has been deduplicated into this function. This function validates that an\n * index-like API object is semantically valid.\n *\n * @param obj {APIObject} The object to be validated.\n * @param etcd {APIObjectDatabase} The database of objects against which to validate the object.\n * @returns {Promise} A `Promise` that resolves if it is valid, or rejects if not.\n */\nasync function validateIndex(obj, etcd) {\n    const databasePath = obj.spec.databaseName.toLowerCase();\n    const entityPath = `${obj.spec.databaseName}.$${obj.spec.entityName}`.toLowerCase();\n    const structPath = [obj.spec.databaseName, obj.spec.structName].join(\".\").toLowerCase();\n    if (!etcd.pathIndex[databasePath]) {\n        throw new PreqlError_1.default(\"37caf6cd-29d8-45ef-8697-f73ce1ee23ae\", `No Databases found that are named '${obj.spec.databaseName}' for ${obj.kind} `\n            + `'${obj.metadata.name}' to attach to.`);\n    }\n    if (obj.spec.entityName && !etcd.pathIndex[entityPath]) {\n        throw new PreqlError_1.default(\"8f3b2610-3308-4b65-b180-ead4f452c9c1\", `No Entities found that are named '${obj.spec.entityName}' for ${obj.kind} `\n            + `'${obj.metadata.name}' to be associated with.`);\n    }\n    if (!etcd.pathIndex[structPath]) {\n        throw new PreqlError_1.default(\"bc7692ff-9eb1-4258-b9ac-d95b1448153f\", `No Structs found that are named '${obj.spec.structName}' for ${obj.kind} `\n            + `'${obj.metadata.name}' to attach to.`);\n    }\n    obj.spec.keyAttributes\n        .map((attr) => (`${obj.spec.databaseName}.${obj.spec.structName}.${attr.name}`.toLowerCase()))\n        .forEach((path) => {\n        if (!(path in etcd.pathIndex)) {\n            throw new PreqlError_1.default(\"d80009c9-894d-4c0f-8871-1335e826cf16\", `Attribute with path '${path}' not found for ${obj.kind} `\n                + `'${obj.metadata.name}' to index.`);\n        }\n    });\n    if (obj.spec.includedAttributes) {\n        obj.spec.includedAttributes\n            .map((attr) => (`${obj.spec.databaseName}.${obj.spec.structName}.${attr.name}`.toLowerCase()))\n            .forEach((path) => {\n            if (!(path in etcd.pathIndex)) {\n                throw new PreqlError_1.default(\"8bcaffd3-b64c-44dc-96c6-4a6fc3dacfce\", `Attribute with path '${path}' not found for ${obj.kind} `\n                    + `'${obj.metadata.name}' to include.`);\n            }\n        });\n    }\n}\nexports.default = validateIndex;\n\n\n//# sourceURL=webpack://preql/./source/APIObjectKinds/validateIndex.ts?")},"./source/Commands/getEntries.ts":
/*!***************************************!*\
  !*** ./source/Commands/getEntries.ts ***!
  \***************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\n/**\n * Returns the `Entry` objects from a `namespace` as a JSON array.\n *\n * @param namespace {APIObjectDatabase} The namespace from whence to retrieve entries.\n * @returns {Promise} A promised object whose `entries` field is an array of the `Entry` objects from the `namespace`.\n */\nasync function getEntries(namespace) {\n    const entries = namespace.kindIndex.entry;\n    const result = {\n        entries: {},\n    };\n    if (!entries)\n        return result;\n    entries.forEach((entry) => {\n        if (!(entry.spec.databaseName in result.entries)) {\n            result.entries[entry.spec.databaseName] = {};\n        }\n        if (!(entry.spec.structName in result.entries[entry.spec.databaseName])) {\n            result.entries[entry.spec.databaseName][entry.spec.structName] = [];\n        }\n        result.entries[entry.spec.databaseName][entry.spec.structName].push(entry.spec.values);\n    });\n    return result;\n}\nexports.default = getEntries;\n\n\n//# sourceURL=webpack://preql/./source/Commands/getEntries.ts?')},"./source/Commands/getPath.ts":
/*!************************************!*\
  !*** ./source/Commands/getPath.ts ***!
  \************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\n/**\n * Return a dot-delimited path of an object, as is commonly used in relational\n * databases. Some elements do not return paths altogether. For example, an\n * `Attribute`, which corresponds to a column in a relational database might\n * have a path of the form `database.struct.attribute`, but a `Server` object\n * will return an `undefined` path, because it is outside of this hierarchy\n * entirely.\n *\n * @param obj {APIObject} The object whose path is to be obtained.\n * @returns {Promise} A promise resolving to the path of the object, or `undefined` if not path is applicable.\n */\nasync function getPath(obj) {\n    if (!obj || !obj.spec || typeof obj.spec !== "object")\n        return undefined;\n    if (("name" in obj.spec) && typeof obj.spec.name !== "string")\n        return undefined;\n    /**\n     * These cases will not get handled by the catchall at the bottom, because\n     * of the line that returns `undefined` if `databaseName` is undefined.\n     */\n    if (obj.kind.toLowerCase() === "database"\n        || obj.kind.toLowerCase() === "characterset"\n        || obj.kind.toLowerCase() === "collation")\n        return obj.spec.name;\n    if (!("databaseName" in obj.spec) || typeof obj.spec.databaseName !== "string")\n        return undefined;\n    let path = obj.spec.databaseName;\n    if ("structName" in obj.spec && typeof obj.spec.structName === "string") {\n        path += `.${obj.spec.structName}`;\n    }\n    else if ("childStructName" in obj.spec && typeof obj.spec.childStructName === "string") {\n        path += `.${obj.spec.childStructName}`;\n    }\n    /**\n   * If the kind is an `Entity`, we prepend a $ before its name so it does not\n   * conflict with any `Struct`s, but uniqueness between entities within a\n   * database is still enforced.\n   */\n    if (obj.kind.toLowerCase() === "entity") {\n        path += `.$${obj.spec.name}`;\n    }\n    else if (obj.spec.name) {\n        if (path.length > 0) {\n            path += ".";\n        }\n        path += obj.spec.name;\n    }\n    else if (obj.spec.id) { // Only `Entry` has this.\n        path += `.${obj.spec.id}`;\n    }\n    return path.toLowerCase();\n}\nexports.default = getPath;\n\n\n//# sourceURL=webpack://preql/./source/Commands/getPath.ts?')},"./source/Commands/getServerURI.ts":
/*!*****************************************!*\
  !*** ./source/Commands/getServerURI.ts ***!
  \*****************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\n/**\n * Generates a URI, given a Server API Object. The URI will be a connection URI\n * for that database server.\n *\n * @param obj {APIObject} The object from whence to create the URI.\n * @returns {Promise} A promised object whose `uri` field is a string containing the URI of the server.\n */\nasync function getServerURI(obj) {\n    let uri = `${obj.spec.protocol}://${obj.spec.hostname}`;\n    uri += obj.spec.port ? `:${obj.spec.port}` : "";\n    return {\n        uri,\n    };\n}\nexports.default = getServerURI;\n\n\n//# sourceURL=webpack://preql/./source/Commands/getServerURI.ts?')},"./source/Commands/getTree.ts":
/*!************************************!*\
  !*** ./source/Commands/getTree.ts ***!
  \************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\n/**\n * Returns a hierarchical representation of all namespaces--a "tree"--whose\n * penultimate nodes are namespaces and whose leaf nodes are `Attribute`s.\n *\n * @param namespaces {Record<string, APIObjectDatabase>} The namespaces from whence to build the tree.\n * @returns {Promise} A promised hierarchical representation of each namespace.\n */\nasync function getTree(namespaces) {\n    const result = { namespaces: {} };\n    Object.entries(namespaces).forEach((ns) => {\n        const databases = ns[1].kindIndex.database;\n        const structs = ns[1].kindIndex.struct;\n        const attributes = ns[1].kindIndex.attribute;\n        result.namespaces[ns[0]] = {\n            databases: {},\n        };\n        databases.forEach((db) => {\n            const currentDatabase = {\n                spec: db.spec,\n                structs: {},\n            };\n            result.namespaces[ns[0]].databases[db.spec.name] = currentDatabase;\n            structs\n                .filter((struct) => struct.spec.databaseName === db.spec.name)\n                .forEach((struct) => {\n                const currentStruct = {\n                    spec: struct.spec,\n                    attributes: {},\n                };\n                result.namespaces[ns[0]].databases[db.spec.name].structs[struct.spec.name] = currentStruct;\n                attributes\n                    .filter((attr) => attr.spec.databaseName === db.spec.name\n                    && attr.spec.structName === struct.spec.name)\n                    .forEach((attr) => {\n                    currentStruct.attributes[attr.spec.name] = {\n                        spec: attr.spec,\n                    };\n                });\n            });\n        });\n    });\n    return result;\n}\nexports.default = getTree;\n\n\n//# sourceURL=webpack://preql/./source/Commands/getTree.ts?')},"./source/Commands/indexObjects.ts":
/*!*****************************************!*\
  !*** ./source/Commands/indexObjects.ts ***!
  \*****************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst PreqlError_1 = __importDefault(__webpack_require__(/*! ../PreqlError */ "./source/PreqlError.ts"));\nconst getPath_1 = __importDefault(__webpack_require__(/*! ./getPath */ "./source/Commands/getPath.ts"));\n/**\n * Creates indexed databases by namespace from a simple list of PreQL API\n * objects. It is _assumed_ that objects passed into this have already been\n * structurally validated. The object returned by the promise resolving maps\n * namespace names to their indexed databases.\n *\n * No semantic validation is performed on this index in this function. In other\n * words, this function will not check that, say, an `Attribute` refers to a\n * `Struct` that actually exists. For that functionality, see\n * `validateNamespace()`.\n *\n * @param objects {APIObject[]} A simple list of API objects, in any order.\n * @returns {Promise} A promise that resolves to a map of namespaces to their indexed databases.\n */\nasync function indexObjects(objects) {\n    const namespaces = {\n        default: {\n            namespace: "default",\n            kindIndex: {},\n            kindNameIndex: {},\n            pathIndex: {},\n            objectIdentifierIndex: {},\n            distinguishedNameIndex: {},\n        },\n    };\n    await Promise.all(objects.map(async (obj) => {\n        const namespaceName = obj.metadata.namespace ? obj.metadata.namespace.toLowerCase() : "default";\n        if (!namespaces[namespaceName]) {\n            namespaces[namespaceName] = {\n                namespace: obj.metadata.namespace ? obj.metadata.namespace.toLowerCase() : "default",\n                kindIndex: {},\n                kindNameIndex: {},\n                pathIndex: {},\n                objectIdentifierIndex: {},\n                distinguishedNameIndex: {},\n            };\n        }\n        const namespace = namespaces[namespaceName];\n        const kindName = obj.kind.toLowerCase();\n        const kindIndexReference = namespace.kindIndex[kindName];\n        if (!kindIndexReference)\n            namespace.kindIndex[kindName] = [obj];\n        else\n            kindIndexReference.push(obj);\n        const kindAndName = `${kindName}:${obj.metadata.name.toLowerCase()}`;\n        const kindNameValue = namespace.kindNameIndex[kindAndName];\n        if (!kindNameValue)\n            namespace.kindNameIndex[kindAndName] = obj;\n        else {\n            throw new PreqlError_1.default("f4c7907d-d613-48e7-9e80-37411d2b8e23", `Duplicated name: two objects in namespace \'${namespaceName}\' of kind `\n                + `\'${obj.kind}\' with same name \'${obj.metadata.name}\'.`);\n        }\n        const path = await getPath_1.default(obj);\n        if (path) {\n            if (path in namespace.pathIndex) {\n                const first = namespace.pathIndex[path];\n                throw new PreqlError_1.default("c1e2a6ae-119e-47f8-842f-a247f34f75d8", `Conflicting path between ${obj.kind} \'${obj.metadata.name}\' `\n                    + `and ${first.kind} \'${first.metadata.name}\'. Both have a path of `\n                    + `\'${path}\'.`);\n            }\n            else {\n                namespace.pathIndex[path] = obj;\n            }\n        }\n        if (obj.spec.objectIentifier) {\n            if (obj.spec.objectIentifier.toLowerCase() in namespace.objectIdentifierIndex) {\n                throw new PreqlError_1.default("2322cab3-ba58-4eb9-8838-bda90acb5181", `Duplicate object identifier ${obj.spec.objectIentifier} `\n                    + `in ${obj.kind} \'${obj.metadata.name}\'.`);\n            }\n            namespace.objectIdentifierIndex[obj.spec.objectIentifier.toLowerCase()] = obj;\n        }\n        if (obj.spec.distinguishedName) {\n            if (obj.spec.distinguishedName.toLowerCase() in namespace.distinguishedNameIndex) {\n                throw new PreqlError_1.default("2322cab3-ba58-4eb9-8838-bda90acb5181", `Duplicate distinguished name ${obj.spec.distinguishedName} `\n                    + `in ${obj.kind} \'${obj.metadata.name}\'.`);\n            }\n            namespace.distinguishedNameIndex[obj.spec.distinguishedName.toLowerCase()] = obj;\n        }\n    }));\n    return namespaces;\n}\nexports.default = indexObjects;\n\n\n//# sourceURL=webpack://preql/./source/Commands/indexObjects.ts?')},"./source/Commands/matchLabels.ts":
/*!****************************************!*\
  !*** ./source/Commands/matchLabels.ts ***!
  \****************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\n// TODO: Add a return attribute indicating whether the matched object contained exclusively the searched labels.\n/**\n * Evaluates whether an APIObject matches a label selector. Returns an object\n * containing details about the nature or extent of the matching.\n *\n * In the returned object:\n *\n * - `allLabelsCaseSensitiveMatch` indicates whether all of the labels match\n *   and match casing exactly.\n * - `allLabelsCaseInsensitiveMatch` indicates whether all of the labels match\n *   after permitting deviations in casing.\n * - `allLabelsFound` indicates whether all of the matching labels were found\n *   in the object, regardless of whether their values matched.\n * - `labels` indicates the searched labels and their values.\n * - `apiObject` indicates the compared object.\n *\n * @param labels {object} The labels to match.\n * @param obj {APIObject} The object to be evaluated for a match.\n * @returns {Promise} A promised object whose attributes detail the nature or extent of the matching.\n */\nasync function matchLabels(labels, obj) {\n    const result = {\n        allLabelsCaseSensitiveMatch: true,\n        allLabelsCaseInsensitiveMatch: true,\n        allLabelsFound: true,\n        labels,\n        apiObject: obj,\n    };\n    Object.entries(labels).forEach((entry) => {\n        if (!(entry[0] in obj.metadata.labels)) {\n            result.allLabelsCaseInsensitiveMatch = false;\n            result.allLabelsCaseSensitiveMatch = false;\n            result.allLabelsFound = false;\n            return;\n        }\n        if (entry[1] !== obj.metadata.labels[entry[0]]) {\n            result.allLabelsCaseSensitiveMatch = false;\n        }\n        if (entry[1].toLowerCase() !== obj.metadata.labels[entry[0]].toLowerCase()) {\n            result.allLabelsCaseInsensitiveMatch = false;\n        }\n    });\n    return result;\n}\nexports.default = matchLabels;\n\n\n//# sourceURL=webpack://preql/./source/Commands/matchLabels.ts?')},"./source/Commands/validateNamespace.ts":
/*!**********************************************!*\
  !*** ./source/Commands/validateNamespace.ts ***!
  \**********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst APIObjectKinds_1 = __importDefault(__webpack_require__(/*! ../APIObjectKinds */ "./source/APIObjectKinds/index.ts"));\nconst PreqlError_1 = __importDefault(__webpack_require__(/*! ../PreqlError */ "./source/PreqlError.ts"));\n/**\n * Semantically validates a namespace, which means checking that all references\n * are valid, among other things. For instance, this function checks that all\n * `Attribute`s attach to a valid `Struct`.\n *\n * @param namespace {APIObjectDatabase} The namespace to be validated.\n * @returns {Promise} A promise resolving nothing. Ignore the resolved value.\n */\nasync function validateNamespace(namespace) {\n    // Ensure unique distinguished names\n    const encounteredDistinguishedNames = new Map([]);\n    ((namespace.kindIndex || []).entry || [])\n        .filter((entry) => (typeof entry.spec.distinguishedName === "string"))\n        .forEach((entry) => {\n        if (!entry.spec.distinguishedName)\n            return;\n        if (encounteredDistinguishedNames.has(entry.spec.distinguishedName.toLowerCase())) {\n            const firstEntry = encounteredDistinguishedNames\n                .get(entry.spec.distinguishedName.toLowerCase());\n            throw new PreqlError_1.default("ee62701b-8d35-48f9-8d78-be0d8f3c80f3", `Duplicate Entry.distinguishedName \'${entry.spec.distinguishedName}\'. `\n                + `The first Entry to have it was \'${firstEntry.metadata.name}\'. `\n                + `The second Entry to have it was \'${entry.metadata.name}\'.`);\n        }\n        else {\n            encounteredDistinguishedNames.set(entry.spec.distinguishedName.toLowerCase(), entry);\n        }\n    });\n    // Ensure unique object identifiers\n    const encounteredObjectIdentifiers = new Map([]);\n    ((namespace.kindIndex || []).attribute || [])\n        .concat(namespace.kindIndex.struct || [])\n        .filter((o) => (typeof o.spec.objectIdentifier === "string"))\n        .forEach((obj) => {\n        if (!obj.spec.objectIdentifier)\n            return;\n        if (encounteredObjectIdentifiers.has(obj.spec.objectIdentifier)) {\n            const first = encounteredObjectIdentifiers\n                .get(obj.spec.objectIdentifier);\n            throw new PreqlError_1.default("ee62701b-8d35-48f9-8d78-be0d8f3c80f3", `Duplicate Object Identifier \'${obj.spec.objectIdentifier}\'. `\n                + `The first Attribute or Struct to have it was \'${first.metadata.name}\'. `\n                + `The second Attribute or Struct to have it was \'${obj.metadata.name}\'.`);\n        }\n        else {\n            encounteredObjectIdentifiers.set(obj.spec.objectIdentifier.toLowerCase(), obj);\n        }\n    });\n    // Iterate over kinds in a namespace.\n    return Promise.all(Object.entries(namespace.kindIndex)\n        .map(async (k) => Promise.all(\n    // Iterate over objects of that kind.\n    k[1].map((obj) => {\n        const kind = APIObjectKinds_1.default[k[0]];\n        if (!kind)\n            return Promise.resolve(); // Simply do nothing if the kind is not recognized.\n        return kind.validateSemantics(obj, namespace);\n    }))));\n}\nexports.default = validateNamespace;\n\n\n//# sourceURL=webpack://preql/./source/Commands/validateNamespace.ts?')},"./source/Commands/validateObject.ts":
/*!*******************************************!*\
  !*** ./source/Commands/validateObject.ts ***!
  \*******************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst ajv_1 = __importDefault(__webpack_require__(/*! ../ajv */ "./source/ajv.ts"));\nconst APIObjectKinds_1 = __importDefault(__webpack_require__(/*! ../APIObjectKinds */ "./source/APIObjectKinds/index.ts"));\nconst APIObject_1 = __importDefault(__webpack_require__(/*! ../JSONSchema/APIObject */ "./source/JSONSchema/APIObject.ts"));\nconst PreqlError_1 = __importDefault(__webpack_require__(/*! ../PreqlError */ "./source/PreqlError.ts"));\nconst prohibitedIdentifiers_1 = __importDefault(__webpack_require__(/*! ../prohibitedIdentifiers */ "./source/prohibitedIdentifiers.ts"));\nconst structureValidator = ajv_1.default.compile(APIObject_1.default);\n/**\n * Resolves a boolean indicating whether the `spec` field has been validated.\n * A resolution of `false` means that just the header was validated, but it was\n * valid. Rejects if any part of the object is invalid.\n *\n * @param obj {APIObject} The object to be structurally validated.\n * @returns {Promise} A promise resolving a boolean indicating whether the `spec` field was validated.\n */\nasync function validateObject(obj) {\n    const kind = APIObjectKinds_1.default[obj.kind.toLowerCase()];\n    if (!kind)\n        return Promise.resolve(false);\n    await structureValidator(obj);\n    try {\n        await kind.validateStructure(obj);\n    }\n    catch (err) {\n        throw new PreqlError_1.default("9bf4d422-e409-4f00-99f7-ac8cd4954175", `${obj.kind} \'${obj.metadata.name}\' failed structural `\n            + `validation. ${err.message} ${(err.errors || []).map((e) => e.message).join("; ")}`);\n    }\n    if (prohibitedIdentifiers_1.default.indexOf(obj.metadata.name) !== -1) {\n        throw new PreqlError_1.default("ed7558d6-61b8-44e5-ae73-8feaf60404de", `Metadata name \'${obj.metadata.name}\' is prohibited.`);\n    }\n    if (obj.spec.name && (prohibitedIdentifiers_1.default.indexOf(obj.spec.name) !== -1)) {\n        throw new PreqlError_1.default("1d3adbad-aaaa-4601-b95b-11892bc4bed9", `Spec name \'${obj.spec.name}\' is prohibited.`);\n    }\n    return true;\n}\nexports.default = validateObject;\n\n\n//# sourceURL=webpack://preql/./source/Commands/validateObject.ts?')},"./source/JSONSchema/APIObject.ts":
/*!****************************************!*\
  !*** ./source/JSONSchema/APIObject.ts ***!
  \****************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst identifierRegexString_1 = __importDefault(__webpack_require__(/*! ../identifierRegexString */ "./source/identifierRegexString.ts"));\nconst APIObjectMetadata_1 = __importDefault(__webpack_require__(/*! ./APIObjectMetadata */ "./source/JSONSchema/APIObjectMetadata.ts"));\n/**\n * The root JSON schema for all APIObjects.\n */\nconst APIObjectSchema = {\n    $schema: "http://json-schema.org/draft-07/schema#",\n    $async: true,\n    title: "PreQL API Object Schema",\n    type: "object",\n    additionalProperties: false,\n    properties: {\n        apiVersion: {\n            title: "API Object Version",\n            description: "A version identifier for API objects identifying the version "\n                + "of the PreQL API that should be used to process that "\n                + "object.",\n            type: "string",\n            pattern: "^preql/1\\\\.(0|(?:[1-9]\\\\d*))\\\\.(0|(?:[1-9]\\\\d*))$",\n        },\n        kind: {\n            title: "Kind",\n            description: "An identifier of the type of the object, which can be "\n                + "thought of as the \'class\' of the object.",\n            type: "string",\n            pattern: identifierRegexString_1.default,\n        },\n        metadata: APIObjectMetadata_1.default,\n        spec: {\n            title: "Spec",\n            description: "The actual object\'s specification, the contents of which "\n                + "will vary based on the `kind` of the object.",\n            type: "object",\n            additionalProperties: {},\n        },\n    },\n    required: [\n        "apiVersion",\n        "kind",\n        "metadata",\n        "spec",\n    ],\n};\nexports.default = APIObjectSchema;\n\n\n//# sourceURL=webpack://preql/./source/JSONSchema/APIObject.ts?')},"./source/JSONSchema/APIObjectMetadata.ts":
/*!************************************************!*\
  !*** ./source/JSONSchema/APIObjectMetadata.ts ***!
  \************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\n/**\n * The JSON schema for the metadata section of all APIObjects. Based on the\n * Kubernetes API object metadata.\n * @see https://github.com/garethr/kubernetes-json-schema/blob/master/v1.9.9/objectmeta.json\n */\nconst APIObjectMetadataSchema = {\n    $schema: "http://json-schema.org/draft-07/schema#",\n    $async: true,\n    title: "PreQL API Object Metadata Schema",\n    type: "object",\n    additionalProperties: false,\n    properties: {\n        annotations: {\n            title: "Annotations",\n            description: "A map of arbitrary key-value pairs that are for humans to "\n                + "read, and MUST not be used by programs in any way except "\n                + "being displayed to users.",\n            type: "object",\n            propertyNames: {\n                // https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/\n                // eslint-disable-next-line max-len\n                unicodePattern: "^(?:(?:(\\\\p{L}|\\\\p{N})(?:(\\\\p{L}|\\\\p{N}|-){0,61}(\\\\p{L}|\\\\p{N}))?\\\\.)*(?:(\\\\p{L}|\\\\p{N})(?:(\\\\p{L}|\\\\p{N}|-){0,61}(\\\\p{L}|\\\\p{N}))?\\\\.?/))?[a-z0-9A-Z](?:[a-z0-9A-Z-_\\\\.]*[a-z0-9A-Z])?$",\n                minLength: 1,\n                maxLength: 317,\n            },\n            additionalProperties: {\n                type: "string",\n            },\n            default: {},\n        },\n        labels: {\n            title: "Labels",\n            description: "A map of arbitrary key-value pairs that are generally "\n                + "shorter than those used in `metadata.annotations` and "\n                + "intended, or at least more readily usable, for programs.",\n            type: "object",\n            propertyNames: {\n                // https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\n                // eslint-disable-next-line max-len\n                unicodePattern: "^(?:(?:(\\\\p{L}|\\\\p{N})(?:(\\\\p{L}|\\\\p{N}|-){0,61}(\\\\p{L}|\\\\p{N}))?\\\\.)*(?:(\\\\p{L}|\\\\p{N})(?:(\\\\p{L}|\\\\p{N}|-){0,61}(\\\\p{L}|\\\\p{N}))?\\\\.?/))?[a-z0-9A-Z](?:[a-z0-9A-Z-_\\\\.]*[a-z0-9A-Z])?$",\n                minLength: 1,\n                maxLength: 317,\n            },\n            additionalProperties: {\n                type: "string",\n            },\n            default: {},\n        },\n        name: {\n            title: "Name",\n            description: "A name for PreQL and related tools to use to handle the "\n                + "object, and to display errors, logs, or other diagnostic "\n                + "data to users, and to search for and index objects. Even "\n                + "if the `spec` has a `name` or name-like member, this "\n                + "should be used for identifying objects within PreQL, for "\n                + "indexing, for logging, and for errors.",\n            type: "string",\n            // https://kubernetes.io/docs/concepts/overview/working-with-objects/names/\n            unicodePattern: "^(\\\\p{L}|\\\\p{N}|\\\\.|-){1,253}$",\n            minLength: 1,\n            maxLength: 253,\n        },\n        namespace: {\n            title: "Namespace",\n            description: "A case-insensitive identifier that namespaces objects so "\n                + "that those with duplicated names do not collide.",\n            type: "string",\n            default: "default",\n            // https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\n            unicodePattern: "^(\\\\p{L}|\\\\p{N})(?:(\\\\p{L}|\\\\p{N}|-)*(\\\\p{L}|\\\\p{N}))?$",\n            minLength: 1,\n            maxLength: 63,\n        },\n    },\n    required: [\n        "name",\n    ],\n};\nexports.default = APIObjectMetadataSchema;\n\n\n//# sourceURL=webpack://preql/./source/JSONSchema/APIObjectMetadata.ts?')},"./source/JSONSchema/Locale.ts":
/*!*************************************!*\
  !*** ./source/JSONSchema/Locale.ts ***!
  \*************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst iso3166CountryCodes_1 = __importDefault(__webpack_require__(/*! ../iso3166CountryCodes */ "./source/iso3166CountryCodes.ts"));\nconst iso639LanguageCodes_1 = __importDefault(__webpack_require__(/*! ../iso639LanguageCodes */ "./source/iso639LanguageCodes.ts"));\n/**\n * The JSON schema for a locale.\n */\nconst Locale = {\n    $schema: "http://json-schema.org/draft-07/schema#",\n    $async: true,\n    title: "PreQL Locale Schema",\n    description: "An ISO 15897 Locale Identifier. This does not currently support the codeset or modifier.",\n    type: "object",\n    additionalProperties: false,\n    properties: {\n        country: {\n            title: "Country",\n            description: "The ISO 3166 Country Code.",\n            type: "string",\n            enum: iso3166CountryCodes_1.default,\n        },\n        language: {\n            title: "Language",\n            description: "The ISO 639 Language Code.",\n            type: "string",\n            enum: iso639LanguageCodes_1.default,\n        },\n    },\n    required: [\n        "country",\n        "language",\n    ],\n};\nexports.default = Locale;\n\n\n//# sourceURL=webpack://preql/./source/JSONSchema/Locale.ts?')},"./source/NullLogger.ts":
/*!******************************!*\
  !*** ./source/NullLogger.ts ***!
  \******************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\n/**\n * A default "logger" that does not actually do anything with events passed to\n * it. This should not be used in production.\n */\nconst nullLogger = {\n    debug: () => { },\n    info: () => { },\n    warn: () => { },\n    error: () => { },\n};\nexports.default = nullLogger;\n\n\n//# sourceURL=webpack://preql/./source/NullLogger.ts?')},"./source/PreqlError.ts":
/*!******************************!*\
  !*** ./source/PreqlError.ts ***!
  \******************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\n/**\n * The main `Error` type for the PreQL library. This is typically thrown when\n * an object fails structural or semantic validation, such as when an\n * unexpected field is encountered on an object, or when an `Attribute` refers\n * to a `Struct` that does not exist.\n * @param uuid {string} A lowercased UUID for uniquely identifying the source of the error.\n * @param message {string} The message describing the error.\n */\nclass PreqlError extends Error {\n    constructor(uuid, message) {\n        super(message);\n        this.uuid = uuid;\n        this.message = message;\n        this.relevantObjects = [];\n    }\n}\nexports.default = PreqlError;\n\n\n//# sourceURL=webpack://preql/./source/PreqlError.ts?')},"./source/ajv.ts":
/*!***********************!*\
  !*** ./source/ajv.ts ***!
  \***********************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nconst ajvOptions_1 = __importDefault(__webpack_require__(/*! ./ajvOptions */ "./source/ajvOptions.ts"));\nconst Ajv = __webpack_require__(/*! ajv */ "./node_modules/ajv/lib/ajv.js");\nconst ajv = new Ajv(ajvOptions_1.default);\najv.addKeyword("unicodePattern", {\n    validate: (schema, data) => ((typeof schema === "string" && typeof data === "string")\n        ? (new RegExp(schema, "u")).test(data) : false),\n    async: true,\n    errors: false,\n});\nexports.default = ajv;\n\n\n//# sourceURL=webpack://preql/./source/ajv.ts?')},"./source/ajvOptions.ts":
/*!******************************!*\
  !*** ./source/ajvOptions.ts ***!
  \******************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\n/**\n * @see [AJV Options](https://www.npmjs.com/package/ajv#options).\n */\nexports.default = {\n    useDefaults: true,\n};\n\n\n//# sourceURL=webpack://preql/./source/ajvOptions.ts?')},"./source/identifierRegexString.ts":
/*!*****************************************!*\
  !*** ./source/identifierRegexString.ts ***!
  \*****************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\n/**\n * The string form of a regular expression that describes valid identifiers\n * used throughout PreQL. These identifiers are used for `Database` names,\n * `Struct` names, `Attribute` names, and more.\n */\nconst identifierRegexString = "^[A-Za-z](?:[A-Za-z0-9_]{0,28}[A-Za-z0-9])?$";\nexports.default = identifierRegexString;\n\n\n//# sourceURL=webpack://preql/./source/identifierRegexString.ts?')},"./source/index.ts":
/*!*************************!*\
  !*** ./source/index.ts ***!
  \*************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\n// Commands\nvar getEntries_1 = __webpack_require__(/*! ./Commands/getEntries */ "./source/Commands/getEntries.ts");\nexports.getEntries = getEntries_1.default;\nvar getServerURI_1 = __webpack_require__(/*! ./Commands/getServerURI */ "./source/Commands/getServerURI.ts");\nexports.getServerURI = getServerURI_1.default;\nvar getTree_1 = __webpack_require__(/*! ./Commands/getTree */ "./source/Commands/getTree.ts");\nexports.getTree = getTree_1.default;\nvar indexObjects_1 = __webpack_require__(/*! ./Commands/indexObjects */ "./source/Commands/indexObjects.ts");\nexports.indexObjects = indexObjects_1.default;\nvar matchLabels_1 = __webpack_require__(/*! ./Commands/matchLabels */ "./source/Commands/matchLabels.ts");\nexports.matchLabels = matchLabels_1.default;\nvar validateNamespace_1 = __webpack_require__(/*! ./Commands/validateNamespace */ "./source/Commands/validateNamespace.ts");\nexports.validateNamespace = validateNamespace_1.default;\nvar validateObject_1 = __webpack_require__(/*! ./Commands/validateObject */ "./source/Commands/validateObject.ts");\nexports.validateObject = validateObject_1.default;\n// Miscellaneous\nvar NullLogger_1 = __webpack_require__(/*! ./NullLogger */ "./source/NullLogger.ts");\nexports.NullLogger = NullLogger_1.default;\nvar version_1 = __webpack_require__(/*! ./version */ "./source/version.ts");\nexports.PREQL_VERSION = version_1.default;\n\n\n//# sourceURL=webpack://preql/./source/index.ts?')},"./source/iso3166CountryCodes.ts":
/*!***************************************!*\
  !*** ./source/iso3166CountryCodes.ts ***!
  \***************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\n/**\n * ISO 3166-1 Two-Letter Country Codes. This is primarily used for locales in\n * PreQL.\n *\n * @see [ISO 3166-1:2013](https://www.iso.org/standard/63545.html).\n */\nconst iso3166CountryCodes = [\n    "AF",\n    "AX",\n    "AL",\n    "DZ",\n    "AS",\n    "AD",\n    "AO",\n    "AI",\n    "AQ",\n    "AG",\n    "AR",\n    "AM",\n    "AW",\n    "AU",\n    "AT",\n    "AZ",\n    "BS",\n    "BH",\n    "BD",\n    "BB",\n    "BY",\n    "BE",\n    "BZ",\n    "BJ",\n    "BM",\n    "BT",\n    "BO",\n    "BQ",\n    "BA",\n    "BW",\n    "BV",\n    "BR",\n    "IO",\n    "BN",\n    "BG",\n    "BF",\n    "BI",\n    "CV",\n    "KH",\n    "CM",\n    "CA",\n    "KY",\n    "CF",\n    "TD",\n    "CL",\n    "CN",\n    "CX",\n    "CC",\n    "CO",\n    "KM",\n    "CG",\n    "CD",\n    "CK",\n    "CR",\n    "CI",\n    "HR",\n    "CU",\n    "CW",\n    "CY",\n    "CZ",\n    "DK",\n    "DJ",\n    "DM",\n    "DO",\n    "EC",\n    "EG",\n    "SV",\n    "GQ",\n    "ER",\n    "EE",\n    "SZ",\n    "ET",\n    "FK",\n    "FO",\n    "FJ",\n    "FI",\n    "FR",\n    "GF",\n    "PF",\n    "TF",\n    "GA",\n    "GM",\n    "GE",\n    "DE",\n    "GH",\n    "GI",\n    "GR",\n    "GL",\n    "GD",\n    "GP",\n    "GU",\n    "GT",\n    "GG",\n    "GN",\n    "GW",\n    "GY",\n    "HT",\n    "HM",\n    "VA",\n    "HN",\n    "HK",\n    "HU",\n    "IS",\n    "IN",\n    "ID",\n    "IR",\n    "IQ",\n    "IE",\n    "IM",\n    "IL",\n    "IT",\n    "JM",\n    "JP",\n    "JE",\n    "JO",\n    "KZ",\n    "KE",\n    "KI",\n    "KP",\n    "KR",\n    "KW",\n    "KG",\n    "LA",\n    "LV",\n    "LB",\n    "LS",\n    "LR",\n    "LY",\n    "LI",\n    "LT",\n    "LU",\n    "MO",\n    "MG",\n    "MW",\n    "MY",\n    "MV",\n    "ML",\n    "MT",\n    "MH",\n    "MQ",\n    "MR",\n    "MU",\n    "YT",\n    "MX",\n    "FM",\n    "MD",\n    "MC",\n    "MN",\n    "ME",\n    "MS",\n    "MA",\n    "MZ",\n    "MM",\n    "NA",\n    "NR",\n    "NP",\n    "NL",\n    "NC",\n    "NZ",\n    "NI",\n    "NE",\n    "NG",\n    "NU",\n    "NF",\n    "MK",\n    "MP",\n    "NO",\n    "OM",\n    "PK",\n    "PW",\n    "PS",\n    "PA",\n    "PG",\n    "PY",\n    "PE",\n    "PH",\n    "PN",\n    "PL",\n    "PT",\n    "PR",\n    "QA",\n    "RE",\n    "RO",\n    "RU",\n    "RW",\n    "BL",\n    "SH",\n    "KN",\n    "LC",\n    "MF",\n    "PM",\n    "VC",\n    "WS",\n    "SM",\n    "ST",\n    "SA",\n    "SN",\n    "RS",\n    "SC",\n    "SL",\n    "SG",\n    "SX",\n    "SK",\n    "SI",\n    "SB",\n    "SO",\n    "ZA",\n    "GS",\n    "SS",\n    "ES",\n    "LK",\n    "SD",\n    "SR",\n    "SJ",\n    "SE",\n    "CH",\n    "SY",\n    "TW",\n    "TJ",\n    "TZ",\n    "TH",\n    "TL",\n    "TG",\n    "TK",\n    "TO",\n    "TT",\n    "TN",\n    "TR",\n    "TM",\n    "TC",\n    "TV",\n    "UG",\n    "UA",\n    "AE",\n    "GB",\n    "US",\n    "UM",\n    "UY",\n    "UZ",\n    "VU",\n    "VE",\n    "VN",\n    "VG",\n    "VI",\n    "WF",\n    "EH",\n    "YE",\n    "ZM",\n    "ZW",\n];\nexports.default = iso3166CountryCodes;\n\n\n//# sourceURL=webpack://preql/./source/iso3166CountryCodes.ts?')},"./source/iso639LanguageCodes.ts":
/*!***************************************!*\
  !*** ./source/iso639LanguageCodes.ts ***!
  \***************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\n/**\n * ISO 639-1 Two-Letter Language Codes. This is primarily used for locales\n * in PreQL.\n *\n * @see [ISO 639-1:2002](https://www.iso.org/standard/22109.html).\n */\nconst iso639LanguageCodes = [\n    "aa",\n    "ab",\n    "ae",\n    "af",\n    "ak",\n    "am",\n    "an",\n    "ar",\n    "as",\n    "av",\n    "ay",\n    "az",\n    "ba",\n    "be",\n    "bg",\n    "bh",\n    "bi",\n    "bm",\n    "bn",\n    "bo",\n    "br",\n    "bs",\n    "ca",\n    "ce",\n    "ch",\n    "co",\n    "cr",\n    "cs",\n    "cu",\n    "cv",\n    "cy",\n    "da",\n    "de",\n    "dv",\n    "dz",\n    "ee",\n    "el",\n    "en",\n    "eo",\n    "es",\n    "et",\n    "eu",\n    "fa",\n    "ff",\n    "fi",\n    "fj",\n    "fo",\n    "fr",\n    "fy",\n    "ga",\n    "gd",\n    "gl",\n    "gn",\n    "gu",\n    "gv",\n    "ha",\n    "he",\n    "hi",\n    "ho",\n    "hr",\n    "ht",\n    "hu",\n    "hy",\n    "hz",\n    "ia",\n    "id",\n    "ie",\n    "ig",\n    "ii",\n    "ik",\n    "io",\n    "is",\n    "it",\n    "iu",\n    "ja",\n    "jv",\n    "ka",\n    "kg",\n    "ki",\n    "kj",\n    "kk",\n    "kl",\n    "km",\n    "kn",\n    "ko",\n    "kr",\n    "ks",\n    "ku",\n    "kv",\n    "kw",\n    "ky",\n    "la",\n    "lb",\n    "lg",\n    "li",\n    "ln",\n    "lo",\n    "lt",\n    "lu",\n    "lv",\n    "mg",\n    "mh",\n    "mi",\n    "mk",\n    "ml",\n    "mn",\n    "mr",\n    "ms",\n    "mt",\n    "my",\n    "na",\n    "nb",\n    "nd",\n    "ne",\n    "ng",\n    "nl",\n    "nn",\n    "no",\n    "nr",\n    "nv",\n    "ny",\n    "oc",\n    "oj",\n    "om",\n    "or",\n    "os",\n    "pa",\n    "pi",\n    "pl",\n    "ps",\n    "pt",\n    "qu",\n    "rm",\n    "rn",\n    "ro",\n    "ru",\n    "rw",\n    "sa",\n    "sc",\n    "sd",\n    "se",\n    "sg",\n    "si",\n    "sk",\n    "sl",\n    "sm",\n    "sn",\n    "so",\n    "sq",\n    "sr",\n    "ss",\n    "st",\n    "su",\n    "sv",\n    "sw",\n    "ta",\n    "te",\n    "tg",\n    "th",\n    "ti",\n    "tk",\n    "tl",\n    "tn",\n    "to",\n    "tr",\n    "ts",\n    "tt",\n    "tw",\n    "ty",\n    "ug",\n    "uk",\n    "ur",\n    "uz",\n    "ve",\n    "vi",\n    "vo",\n    "wa",\n    "wo",\n    "xh",\n    "yi",\n    "yo",\n    "za",\n    "zh",\n    "zu",\n];\nexports.default = iso639LanguageCodes;\n\n\n//# sourceURL=webpack://preql/./source/iso639LanguageCodes.ts?')},"./source/objectIdentifierRegexString.ts":
/*!***********************************************!*\
  !*** ./source/objectIdentifierRegexString.ts ***!
  \***********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\n/**\n * For an `OBJECT IDENTIFIER`, limitations are imposed by the use of the ITU\'s\n * Basic Encoding Rules (BER) (as specified in publication X.690) in LDAP,\n * which limit the first arc to being 0, 1, or 2, and the second arc being no\n * higher than 39 if the first arc is 0 or 1 or 175 if the first arc is 2.\n *\n * @see [ITU X.660](https://www.itu.int/rec/T-REC-X.660-201107-I/en).\n */\nconst objectIdentifierRegexString = "^[0-2]\\\\.(0|(?:[1-9]\\\\d?))(\\\\.(0|(?:[1-9]\\\\d*)))+$";\nexports.default = objectIdentifierRegexString;\n\n\n//# sourceURL=webpack://preql/./source/objectIdentifierRegexString.ts?')},"./source/prohibitedIdentifiers.ts":
/*!*****************************************!*\
  !*** ./source/prohibitedIdentifiers.ts ***!
  \*****************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\n/**\n * This list notably excludes non-portable attribute names that do not\n * begin with underscores (of which, there are many, such as `_id`, used by\n * MongoDB, CouchDB, and ElasticSearch), because these identifiers are\n * prohibited by the JSON schema that validates metadata names and identifiers.\n */\nconst prohibitedIdentifiers = [\n    "id",\n    "preql",\n];\nexports.default = prohibitedIdentifiers;\n\n\n//# sourceURL=webpack://preql/./source/prohibitedIdentifiers.ts?')},"./source/timezones.ts":
/*!*****************************!*\
  !*** ./source/timezones.ts ***!
  \*****************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\n/**\n * Timezone names taken from the IANA tz database, edition 2019b.\n *\n * @see [IANA TZ Database](https://www.iana.org/time-zones).\n */\nconst timezones = [\n    "Europe/Andorra",\n    "Asia/Dubai",\n    "Asia/Kabul",\n    "America/Antigua",\n    "America/Anguilla",\n    "Europe/Tirane",\n    "Asia/Yerevan",\n    "Africa/Luanda",\n    "Antarctica/McMurdo",\n    "Antarctica/Casey",\n    "Antarctica/Davis",\n    "Antarctica/DumontDUrville",\n    "Antarctica/Mawson",\n    "Antarctica/Palmer",\n    "Antarctica/Rothera",\n    "Antarctica/Syowa",\n    "Antarctica/Troll",\n    "Antarctica/Vostok",\n    "America/Argentina/Buenos_Aires",\n    "America/Argentina/Cordoba",\n    "America/Argentina/Salta",\n    "America/Argentina/Jujuy",\n    "America/Argentina/Tucuman",\n    "America/Argentina/Catamarca",\n    "America/Argentina/La_Rioja",\n    "America/Argentina/San_Juan",\n    "America/Argentina/Mendoza",\n    "America/Argentina/San_Luis",\n    "America/Argentina/Rio_Gallegos",\n    "America/Argentina/Ushuaia",\n    "Pacific/Pago_Pago",\n    "Europe/Vienna",\n    "Australia/Lord_Howe",\n    "Antarctica/Macquarie",\n    "Australia/Hobart",\n    "Australia/Currie",\n    "Australia/Melbourne",\n    "Australia/Sydney",\n    "Australia/Broken_Hill",\n    "Australia/Brisbane",\n    "Australia/Lindeman",\n    "Australia/Adelaide",\n    "Australia/Darwin",\n    "Australia/Perth",\n    "Australia/Eucla",\n    "America/Aruba",\n    "Europe/Mariehamn",\n    "Asia/Baku",\n    "Europe/Sarajevo",\n    "America/Barbados",\n    "Asia/Dhaka",\n    "Europe/Brussels",\n    "Africa/Ouagadougou",\n    "Europe/Sofia",\n    "Asia/Bahrain",\n    "Africa/Bujumbura",\n    "Africa/Porto-Novo",\n    "America/St_Barthelemy",\n    "Atlantic/Bermuda",\n    "Asia/Brunei",\n    "America/La_Paz",\n    "America/Kralendijk",\n    "America/Noronha",\n    "America/Belem",\n    "America/Fortaleza",\n    "America/Recife",\n    "America/Araguaina",\n    "America/Maceio",\n    "America/Bahia",\n    "America/Sao_Paulo",\n    "America/Campo_Grande",\n    "America/Cuiaba",\n    "America/Santarem",\n    "America/Porto_Velho",\n    "America/Boa_Vista",\n    "America/Manaus",\n    "America/Eirunepe",\n    "America/Rio_Branco",\n    "America/Nassau",\n    "Asia/Thimphu",\n    "Africa/Gaborone",\n    "Europe/Minsk",\n    "America/Belize",\n    "America/St_Johns",\n    "America/Halifax",\n    "America/Glace_Bay",\n    "America/Moncton",\n    "America/Goose_Bay",\n    "America/Blanc-Sablon",\n    "America/Toronto",\n    "America/Nipigon",\n    "America/Thunder_Bay",\n    "America/Iqaluit",\n    "America/Pangnirtung",\n    "America/Atikokan",\n    "America/Winnipeg",\n    "America/Rainy_River",\n    "America/Resolute",\n    "America/Rankin_Inlet",\n    "America/Regina",\n    "America/Swift_Current",\n    "America/Edmonton",\n    "America/Cambridge_Bay",\n    "America/Yellowknife",\n    "America/Inuvik",\n    "America/Creston",\n    "America/Dawson_Creek",\n    "America/Fort_Nelson",\n    "America/Vancouver",\n    "America/Whitehorse",\n    "America/Dawson",\n    "Indian/Cocos",\n    "Africa/Kinshasa",\n    "Africa/Lubumbashi",\n    "Africa/Bangui",\n    "Africa/Brazzaville",\n    "Europe/Zurich",\n    "Africa/Abidjan",\n    "Pacific/Rarotonga",\n    "America/Santiago",\n    "America/Punta_Arenas",\n    "Pacific/Easter",\n    "Africa/Douala",\n    "Asia/Shanghai",\n    "Asia/Urumqi",\n    "America/Bogota",\n    "America/Costa_Rica",\n    "America/Havana",\n    "Atlantic/Cape_Verde",\n    "America/Curacao",\n    "Indian/Christmas",\n    "Asia/Nicosia",\n    "Asia/Famagusta",\n    "Europe/Prague",\n    "Europe/Berlin",\n    "Europe/Busingen",\n    "Africa/Djibouti",\n    "Europe/Copenhagen",\n    "America/Dominica",\n    "America/Santo_Domingo",\n    "Africa/Algiers",\n    "America/Guayaquil",\n    "Pacific/Galapagos",\n    "Europe/Tallinn",\n    "Africa/Cairo",\n    "Africa/El_Aaiun",\n    "Africa/Asmara",\n    "Europe/Madrid",\n    "Africa/Ceuta",\n    "Atlantic/Canary",\n    "Africa/Addis_Ababa",\n    "Europe/Helsinki",\n    "Pacific/Fiji",\n    "Atlantic/Stanley",\n    "Pacific/Chuuk",\n    "Pacific/Pohnpei",\n    "Pacific/Kosrae",\n    "Atlantic/Faroe",\n    "Europe/Paris",\n    "Africa/Libreville",\n    "Europe/London",\n    "America/Grenada",\n    "Asia/Tbilisi",\n    "America/Cayenne",\n    "Europe/Guernsey",\n    "Africa/Accra",\n    "Europe/Gibraltar",\n    "America/Godthab",\n    "America/Danmarkshavn",\n    "America/Scoresbysund",\n    "America/Thule",\n    "Africa/Banjul",\n    "Africa/Conakry",\n    "America/Guadeloupe",\n    "Africa/Malabo",\n    "Europe/Athens",\n    "Atlantic/South_Georgia",\n    "America/Guatemala",\n    "Pacific/Guam",\n    "Africa/Bissau",\n    "America/Guyana",\n    "Asia/Hong_Kong",\n    "America/Tegucigalpa",\n    "Europe/Zagreb",\n    "America/Port-au-Prince",\n    "Europe/Budapest",\n    "Asia/Jakarta",\n    "Asia/Pontianak",\n    "Asia/Makassar",\n    "Asia/Jayapura",\n    "Europe/Dublin",\n    "Asia/Jerusalem",\n    "Europe/Isle_of_Man",\n    "Asia/Kolkata",\n    "Indian/Chagos",\n    "Asia/Baghdad",\n    "Asia/Tehran",\n    "Atlantic/Reykjavik",\n    "Europe/Rome",\n    "Europe/Jersey",\n    "America/Jamaica",\n    "Asia/Amman",\n    "Asia/Tokyo",\n    "Africa/Nairobi",\n    "Asia/Bishkek",\n    "Asia/Phnom_Penh",\n    "Pacific/Tarawa",\n    "Pacific/Enderbury",\n    "Pacific/Kiritimati",\n    "Indian/Comoro",\n    "America/St_Kitts",\n    "Asia/Pyongyang",\n    "Asia/Seoul",\n    "Asia/Kuwait",\n    "America/Cayman",\n    "Asia/Almaty",\n    "Asia/Qyzylorda",\n    "Asia/Qostanay",\n    "Asia/Aqtobe",\n    "Asia/Aqtau",\n    "Asia/Atyrau",\n    "Asia/Oral",\n    "Asia/Vientiane",\n    "Asia/Beirut",\n    "America/St_Lucia",\n    "Europe/Vaduz",\n    "Asia/Colombo",\n    "Africa/Monrovia",\n    "Africa/Maseru",\n    "Europe/Vilnius",\n    "Europe/Luxembourg",\n    "Europe/Riga",\n    "Africa/Tripoli",\n    "Africa/Casablanca",\n    "Europe/Monaco",\n    "Europe/Chisinau",\n    "Europe/Podgorica",\n    "America/Marigot",\n    "Indian/Antananarivo",\n    "Pacific/Majuro",\n    "Pacific/Kwajalein",\n    "Europe/Skopje",\n    "Africa/Bamako",\n    "Asia/Yangon",\n    "Asia/Ulaanbaatar",\n    "Asia/Hovd",\n    "Asia/Choibalsan",\n    "Asia/Macau",\n    "Pacific/Saipan",\n    "America/Martinique",\n    "Africa/Nouakchott",\n    "America/Montserrat",\n    "Europe/Malta",\n    "Indian/Mauritius",\n    "Indian/Maldives",\n    "Africa/Blantyre",\n    "America/Mexico_City",\n    "America/Cancun",\n    "America/Merida",\n    "America/Monterrey",\n    "America/Matamoros",\n    "America/Mazatlan",\n    "America/Chihuahua",\n    "America/Ojinaga",\n    "America/Hermosillo",\n    "America/Tijuana",\n    "America/Bahia_Banderas",\n    "Asia/Kuala_Lumpur",\n    "Asia/Kuching",\n    "Africa/Maputo",\n    "Africa/Windhoek",\n    "Pacific/Noumea",\n    "Africa/Niamey",\n    "Pacific/Norfolk",\n    "Africa/Lagos",\n    "America/Managua",\n    "Europe/Amsterdam",\n    "Europe/Oslo",\n    "Asia/Kathmandu",\n    "Pacific/Nauru",\n    "Pacific/Niue",\n    "Pacific/Auckland",\n    "Pacific/Chatham",\n    "Asia/Muscat",\n    "America/Panama",\n    "America/Lima",\n    "Pacific/Tahiti",\n    "Pacific/Marquesas",\n    "Pacific/Gambier",\n    "Pacific/Port_Moresby",\n    "Pacific/Bougainville",\n    "Asia/Manila",\n    "Asia/Karachi",\n    "Europe/Warsaw",\n    "America/Miquelon",\n    "Pacific/Pitcairn",\n    "America/Puerto_Rico",\n    "Asia/Gaza",\n    "Asia/Hebron",\n    "Europe/Lisbon",\n    "Atlantic/Madeira",\n    "Atlantic/Azores",\n    "Pacific/Palau",\n    "America/Asuncion",\n    "Asia/Qatar",\n    "Indian/Reunion",\n    "Europe/Bucharest",\n    "Europe/Belgrade",\n    "Europe/Kaliningrad",\n    "Europe/Moscow",\n    "Europe/Simferopol",\n    "Europe/Kirov",\n    "Europe/Astrakhan",\n    "Europe/Volgograd",\n    "Europe/Saratov",\n    "Europe/Ulyanovsk",\n    "Europe/Samara",\n    "Asia/Yekaterinburg",\n    "Asia/Omsk",\n    "Asia/Novosibirsk",\n    "Asia/Barnaul",\n    "Asia/Tomsk",\n    "Asia/Novokuznetsk",\n    "Asia/Krasnoyarsk",\n    "Asia/Irkutsk",\n    "Asia/Chita",\n    "Asia/Yakutsk",\n    "Asia/Khandyga",\n    "Asia/Vladivostok",\n    "Asia/Ust-Nera",\n    "Asia/Magadan",\n    "Asia/Sakhalin",\n    "Asia/Srednekolymsk",\n    "Asia/Kamchatka",\n    "Asia/Anadyr",\n    "Africa/Kigali",\n    "Asia/Riyadh",\n    "Pacific/Guadalcanal",\n    "Indian/Mahe",\n    "Africa/Khartoum",\n    "Europe/Stockholm",\n    "Asia/Singapore",\n    "Atlantic/St_Helena",\n    "Europe/Ljubljana",\n    "Arctic/Longyearbyen",\n    "Europe/Bratislava",\n    "Africa/Freetown",\n    "Europe/San_Marino",\n    "Africa/Dakar",\n    "Africa/Mogadishu",\n    "America/Paramaribo",\n    "Africa/Juba",\n    "Africa/Sao_Tome",\n    "America/El_Salvador",\n    "America/Lower_Princes",\n    "Asia/Damascus",\n    "Africa/Mbabane",\n    "America/Grand_Turk",\n    "Africa/Ndjamena",\n    "Indian/Kerguelen",\n    "Africa/Lome",\n    "Asia/Bangkok",\n    "Asia/Dushanbe",\n    "Pacific/Fakaofo",\n    "Asia/Dili",\n    "Asia/Ashgabat",\n    "Africa/Tunis",\n    "Pacific/Tongatapu",\n    "Europe/Istanbul",\n    "America/Port_of_Spain",\n    "Pacific/Funafuti",\n    "Asia/Taipei",\n    "Africa/Dar_es_Salaam",\n    "Europe/Kiev",\n    "Europe/Uzhgorod",\n    "Europe/Zaporozhye",\n    "Africa/Kampala",\n    "Pacific/Midway",\n    "Pacific/Wake",\n    "America/New_York",\n    "America/Detroit",\n    "America/Kentucky/Louisville",\n    "America/Kentucky/Monticello",\n    "America/Indiana/Indianapolis",\n    "America/Indiana/Vincennes",\n    "America/Indiana/Winamac",\n    "America/Indiana/Marengo",\n    "America/Indiana/Petersburg",\n    "America/Indiana/Vevay",\n    "America/Chicago",\n    "America/Indiana/Tell_City",\n    "America/Indiana/Knox",\n    "America/Menominee",\n    "America/North_Dakota/Center",\n    "America/North_Dakota/New_Salem",\n    "America/North_Dakota/Beulah",\n    "America/Denver",\n    "America/Boise",\n    "America/Phoenix",\n    "America/Los_Angeles",\n    "America/Anchorage",\n    "America/Juneau",\n    "America/Sitka",\n    "America/Metlakatla",\n    "America/Yakutat",\n    "America/Nome",\n    "America/Adak",\n    "Pacific/Honolulu",\n    "America/Montevideo",\n    "Asia/Samarkand",\n    "Asia/Tashkent",\n    "Europe/Vatican",\n    "America/St_Vincent",\n    "America/Caracas",\n    "America/Tortola",\n    "America/St_Thomas",\n    "Asia/Ho_Chi_Minh",\n    "Pacific/Efate",\n    "Pacific/Wallis",\n    "Pacific/Apia",\n    "Asia/Aden",\n    "Indian/Mayotte",\n    "Africa/Johannesburg",\n    "Africa/Lusaka",\n    "Africa/Harare",\n];\nexports.default = timezones;\n\n\n//# sourceURL=webpack://preql/./source/timezones.ts?')},"./source/version.ts":
/*!***************************!*\
  !*** ./source/version.ts ***!
  \***************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.MAJOR_VERSION = 1;\nexports.MINOR_VERSION = 0;\nexports.PATCH_VERSION = 0;\nexports.PREQL_VERSION = `${exports.MAJOR_VERSION}.${exports.MINOR_VERSION}.${exports.PATCH_VERSION}`;\nexports.default = exports.PREQL_VERSION;\n\n\n//# sourceURL=webpack://preql/./source/version.ts?')},0:
/*!*******************************!*\
  !*** multi ./source/index.ts ***!
  \*******************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__(/*! ./source/index.ts */"./source/index.ts");\n\n\n//# sourceURL=webpack://preql/multi_./source/index.ts?')}});